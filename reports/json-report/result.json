{
	"projectName": "MaxSoft-IntelliAPI",
	"timestamp": "Jun 30, 2018 at 5:37pm",
	"successRate": 100,
	"environment": "default",
	"tags": "",
	"executionTime": 87543,
	"executionStatus": "pass",
	"specResults": [
		{
			"specHeading": "Saving And Reading Values From Data Store Specification",
			"fileName": "C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Saving And Reading Values From Data Store.spec",
			"tags": [],
			"executionTime": 24515,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Get configurations of the testing environment",
					"tags": [],
					"executionTime": 1129,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Configurations of the testing environment",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1129,
								"skippedReason": "",
								"messages": [
									"————————————————————————————————————————————————",
									"Configurations of Test Execution Environment",
									"————————————————————————————————————————————————\n",
									"Operating System: Windows 7",
									"Environment: DEV",
									"Base URL: ",
									"————————————————————————————————————————————————"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Saving values to Data Store",
					"tags": [],
					"executionTime": 3,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user save the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"variable1",
											"Osanda Deshan"
										]
									},
									{
										"cells": [
											"Specification",
											"variable2",
											"Osanda Nimalarathna"
										]
									},
									{
										"cells": [
											"Scenario",
											"variable3",
											"Software Automation"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3,
								"skippedReason": "",
								"messages": [
									"\"Osanda Deshan\" is successfully saved as a text in Scenario Data Store [variable1]",
									"\"Osanda Nimalarathna\" is successfully saved as a text in Specification Data Store [variable2]",
									"\"Software Automation\" is successfully saved as a text in Scenario Data Store [variable3]"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Reading values from Data Store",
					"tags": [],
					"executionTime": 6,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user read the values from data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"variable1"
										]
									},
									{
										"cells": [
											"Specification",
											"variable2"
										]
									},
									{
										"cells": [
											"Scenario",
											"variable3"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 6,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [variable1] is: \"null\"\n\n",
									"Text inside Specification Data Store [variable2] is: \"Osanda Nimalarathna\"\n\n",
									"Text inside Scenario Data Store [variable3] is: \"null\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Invoke PI API in Staging Environment using valid username and password using payload text file",
					"tags": [
						"get_pi_token",
						"staging"
					],
					"executionTime": 9005,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get Staging PI Token\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2128,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"No"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"N/A"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request payload as follows \u003cfile:/resources/payloads/login.txt\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 220,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\r\n \"userName\": \"osanda12\",\r\n \"password\": \"Password1\"\r\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 6389,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 4422ms\n\n",
									"Response is: \n{\n    \"status\": \"success\",\n    \"data\": \"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJoY2MiOiJVUyIsInN1YiI6ImZmZmZmZmZmNTllODg2YjRlNGIwMWNlZDI4M2YwNjU1IiwidHlwZSI6ImF0IiwiZXhwIjoxNTMwMzcxMjY1LCJpYXQiOjE1MzAzNjA0NjQsInNlc3NpZCI6IjM3MWE4YTFiLWE3MjYtNGI3MC04OTExLWM3MmM3YTYyNzAwNiJ9.B6A6H37_YOKMDV32n_J1r2hud0e99vqZM4mNsZmUC7T88hdR18dbNlI6EYauAuOOjLCXEvNHmVn_8vRsZoaFQXUBsmQU3RQl4-g2fZxJHqLrSXp2MBOl0QZEfK7-IKDlTASwzzb5GagpE9ksmiL0syjwB_vQFMw2s1R0sWRspsk\"\n}\n\n",
									"Response Headers are: \nServer=Apache-Coyote/1.1\nCorrelation-Id=b09c59ff-a338-46f9-8de9-7256187c2aa8\nLocation=https://pi-int.pearsoned.com/v1/piapi-int/tokens/eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJoY2MiOiJVUyIsInN1YiI6ImZmZmZmZmZmNTllODg2YjRlNGIwMWNlZDI4M2YwNjU1IiwidHlwZSI6ImF0IiwiZXhwIjoxNTMwMzcxMjY1LCJpYXQiOjE1MzAzNjA0NjQsInNlc3NpZCI6IjM3MWE4YTFiLWE3MjYtNGI3MC04OTExLWM3MmM3YTYyNzAwNiJ9.B6A6H37_YOKMDV32n_J1r2hud0e99vqZM4mNsZmUC7T88hdR18dbNlI6EYauAuOOjLCXEvNHmVn_8vRsZoaFQXUBsmQU3RQl4-g2fZxJHqLrSXp2MBOl0QZEfK7-IKDlTASwzzb5GagpE9ksmiL0syjwB_vQFMw2s1R0sWRspsk\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Sat, 30 Jun 2018 12:07:44 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 6,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"success"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 251,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Existence in the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"isExists"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"true"
										]
									},
									{
										"cells": [
											"$.osa",
											"false"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the access token in the response which is located inside the JSON Path of \"$.data\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 6,
								"skippedReason": "",
								"messages": [
									"Successfully saved the access token into the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\""
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"variable4",
											"$.status"
										]
									},
									{
										"cells": [
											"Specification",
											"variable5",
											"$.data"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3,
								"skippedReason": "",
								"messages": [
									"\"success\" is successfully saved as a text in Scenario Data Store [variable4]",
									"\"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJoY2MiOiJVUyIsInN1YiI6ImZmZmZmZmZmNTllODg2YjRlNGIwMWNlZDI4M2YwNjU1IiwidHlwZSI6ImF0IiwiZXhwIjoxNTMwMzcxMjY1LCJpYXQiOjE1MzAzNjA0NjQsInNlc3NpZCI6IjM3MWE4YTFiLWE3MjYtNGI3MC04OTExLWM3MmM3YTYyNzAwNiJ9.B6A6H37_YOKMDV32n_J1r2hud0e99vqZM4mNsZmUC7T88hdR18dbNlI6EYauAuOOjLCXEvNHmVn_8vRsZoaFQXUBsmQU3RQl4-g2fZxJHqLrSXp2MBOl0QZEfK7-IKDlTASwzzb5GagpE9ksmiL0syjwB_vQFMw2s1R0sWRspsk\" is successfully saved as a text in Specification Data Store [variable5]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user read the values from data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"variable4"
										]
									},
									{
										"cells": [
											"Specification",
											"variable5"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [variable4] is: \"success\"\n\n",
									"Text inside Specification Data Store [variable5] is: \"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJoY2MiOiJVUyIsInN1YiI6ImZmZmZmZmZmNTllODg2YjRlNGIwMWNlZDI4M2YwNjU1IiwidHlwZSI6ImF0IiwiZXhwIjoxNTMwMzcxMjY1LCJpYXQiOjE1MzAzNjA0NjQsInNlc3NpZCI6IjM3MWE4YTFiLWE3MjYtNGI3MC04OTExLWM3MmM3YTYyNzAwNiJ9.B6A6H37_YOKMDV32n_J1r2hud0e99vqZM4mNsZmUC7T88hdR18dbNlI6EYauAuOOjLCXEvNHmVn_8vRsZoaFQXUBsmQU3RQl4-g2fZxJHqLrSXp2MBOl0QZEfK7-IKDlTASwzzb5GagpE9ksmiL0syjwB_vQFMw2s1R0sWRspsk\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Invoke PI API in Staging Environment using valid username and password and save the access token inside the text file",
					"tags": [
						"get_pi_token",
						"staging"
					],
					"executionTime": 3904,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get Staging PI Token\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 598,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user save the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"username",
											"osanda12"
										]
									},
									{
										"cells": [
											"Specification",
											"variable6",
											"Osanda Nimalarathna"
										]
									},
									{
										"cells": [
											"Scenario",
											"variable7",
											"Software Automation"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"\"osanda12\" is successfully saved as a text in Scenario Data Store [username]",
									"\"Osanda Nimalarathna\" is successfully saved as a text in Specification Data Store [variable6]",
									"\"Software Automation\" is successfully saved as a text in Scenario Data Store [variable7]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request headers using data stores as follows",
							"table": {
								"headers": [
									"Header Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Header Value"
								],
								"rows": [
									{
										"cells": [
											"header1",
											"y",
											"spec",
											"variable6",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 4,
								"skippedReason": "",
								"messages": [
									"Text inside Specification Data Store [variable6] is: \"Osanda Nimalarathna\"\n\n",
									"Header List: ",
									"header1 = Osanda Nimalarathna"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#username",
											"y",
											"scenario",
											"username",
											"N/A"
										]
									},
									{
										"cells": [
											"#password",
											"n",
											"N/A",
											"N/A",
											"Password1"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 423,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [username] is: \"osanda12\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n \"userName\": \"osanda12\",\n \"password\": \"Password1\"\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2869,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 1732ms\n\n",
									"Response is: \n{\n    \"status\": \"success\",\n    \"data\": \"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJoY2MiOiJVUyIsInN1YiI6ImZmZmZmZmZmNTllODg2YjRlNGIwMWNlZDI4M2YwNjU1IiwidHlwZSI6ImF0IiwiZXhwIjoxNTMwMzcxMjcwLCJpYXQiOjE1MzAzNjA0NjksInNlc3NpZCI6IjczMjI1ZTFiLTMyNDMtNDcxNS1iMWNkLWIwOGU1NTI0YjVhZCJ9.d50xrX053F2tUf-xNwlL_FqGbaEZG6OZDWGXKL2QfvzSNn5OC6n_ZTEV7pkXDJdspk59pkoaZcXmIYExJm2m7vTKg57rlarr1hk7NNKyYIWbNkT0Zn7XAG2SplgHkCd9zgJwIPv-nbLswCu57PybkqUFEa-IgK08wJ047dpyzT8\"\n}\n\n",
									"Response Headers are: \nServer=Apache-Coyote/1.1\nCorrelation-Id=5d1ac9a0-6338-4daf-b4de-7be54d11ed6e\nLocation=https://pi-int.pearsoned.com/v1/piapi-int/tokens/eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJoY2MiOiJVUyIsInN1YiI6ImZmZmZmZmZmNTllODg2YjRlNGIwMWNlZDI4M2YwNjU1IiwidHlwZSI6ImF0IiwiZXhwIjoxNTMwMzcxMjcwLCJpYXQiOjE1MzAzNjA0NjksInNlc3NpZCI6IjczMjI1ZTFiLTMyNDMtNDcxNS1iMWNkLWIwOGU1NTI0YjVhZCJ9.d50xrX053F2tUf-xNwlL_FqGbaEZG6OZDWGXKL2QfvzSNn5OC6n_ZTEV7pkXDJdspk59pkoaZcXmIYExJm2m7vTKg57rlarr1hk7NNKyYIWbNkT0Zn7XAG2SplgHkCd9zgJwIPv-nbLswCu57PybkqUFEa-IgK08wJ047dpyzT8\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Sat, 30 Jun 2018 12:07:49 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"status",
											"$.status"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"\"success\" is successfully saved as a text in Scenario Data Store [status]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"isContains"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"success"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the values inside the data stores",
							"table": {
								"headers": [
									"JSON Path",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"y",
											"scenario",
											"status",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [status] is: \"success\"\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should not contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"notContains"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"fail"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should not contains the values inside the data stores",
							"table": {
								"headers": [
									"JSON Path",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"y",
											"scenario",
											"variable7",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [variable7] is: \"Software Automation\"\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"success"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should not be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"fail"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the values inside the data stores",
							"table": {
								"headers": [
									"JSON Path",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"y",
											"scenario",
											"status",
											"N/A"
										]
									},
									{
										"cells": [
											"$.status",
											"n",
											"N/A",
											"N/A",
											"success"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [status] is: \"success\"\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should not be equal to the values inside the data stores",
							"table": {
								"headers": [
									"JSON Path",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"n",
											"N/A",
											"N/A",
											"fail"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the access token in the response which is located inside the JSON Path of \"$.data\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 4,
								"skippedReason": "",
								"messages": [
									"Successfully saved the access token into the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\""
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Existence in the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"isExists"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"true"
										]
									},
									{
										"cells": [
											"$.osa",
											"false"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the query parameters using data stores as follows",
							"table": {
								"headers": [
									"Query Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Query Value"
								],
								"rows": [
									{
										"cells": [
											"username",
											"y",
											"scenario",
											"username",
											"N/A"
										]
									},
									{
										"cells": [
											"password",
											"n",
											"N/A",
											"N/A",
											"Password1"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [username] is: \"osanda12\"\n\n",
									"Query parameters which will append to the request URL: ?username=osanda12\u0026password=Password1\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters using data stores as follows",
							"table": {
								"headers": [
									"Path Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"#username",
											"y",
											"scenario",
											"username",
											"N/A"
										]
									},
									{
										"cells": [
											"#password",
											"n",
											"N/A",
											"N/A",
											"Password1"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [username] is: \"osanda12\"\n\n",
									"Path parameters which will append to the request URL:/osanda12/Password1\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Invoke PI API in Staging Environment using valid username and password using request attributes from text files",
					"tags": [
						"get_pi_token",
						"staging"
					],
					"executionTime": 2741,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get Staging PI Token\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 167,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user save the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"username",
											"osanda12"
										]
									},
									{
										"cells": [
											"Specification",
											"variable6",
											"Osanda Nimalarathna"
										]
									},
									{
										"cells": [
											"Scenario",
											"variable7",
											"Software Automation"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"\"osanda12\" is successfully saved as a text in Scenario Data Store [username]",
									"\"Osanda Nimalarathna\" is successfully saved as a text in Specification Data Store [variable6]",
									"\"Software Automation\" is successfully saved as a text in Scenario Data Store [variable7]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request headers using data stores as follows",
							"table": {
								"headers": [
									"Header Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Header Value"
								],
								"rows": [
									{
										"cells": [
											"header1",
											"n",
											"",
											"",
											"\u003cfile:/resources/texts/header1.txt\u003e"
										]
									},
									{
										"cells": [
											"header2",
											"n",
											"",
											"",
											"\u003cfile:/resources/texts/header1.txt\u003e"
										]
									},
									{
										"cells": [
											"header3",
											"n",
											"",
											"",
											"\u003cfile:/resources/texts/header1.txt\u003e"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 5,
								"skippedReason": "",
								"messages": [
									"Header List: ",
									"header1 = header1",
									"header2 = header1",
									"header3 = header1"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#username",
											"y",
											"scenario",
											"username",
											"N/A"
										]
									},
									{
										"cells": [
											"#password",
											"n",
											"N/A",
											"N/A",
											"\u003cfile:/resources/texts/password.txt\u003e"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 81,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [username] is: \"osanda12\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n \"userName\": \"osanda12\",\n \"password\": \"Password1\"\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2431,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 1806ms\n\n",
									"Response is: \n{\n    \"status\": \"success\",\n    \"data\": \"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJoY2MiOiJVUyIsInN1YiI6ImZmZmZmZmZmNTllODg2YjRlNGIwMWNlZDI4M2YwNjU1IiwidHlwZSI6ImF0IiwiZXhwIjoxNTMwMzcxMjczLCJpYXQiOjE1MzAzNjA0NzIsInNlc3NpZCI6IjZlYmUzM2I1LWM2ZDEtNDhhMS1hMTljLWE0OThjYTU5OGJjYiJ9.S1NDiNsSGzdXDxjdlVSUzCn96ikrsow3LEiw4UyjgKDT0X65eJwLHymqPkFg3sNdIDB67LGKvXM1VSUFn4bHA7S0kRt4veQyodXKkNuazSViuOBrdTPqarMRScx1wEQaw3p4K4AarrRjqfnhpNODLoT1VAo_A7n5Xi9g8PYZxvo\"\n}\n\n",
									"Response Headers are: \nServer=Apache-Coyote/1.1\nCorrelation-Id=444675c4-a065-4f6e-966e-d01eb3ba9c08\nLocation=https://pi-int.pearsoned.com/v1/piapi-int/tokens/eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJoY2MiOiJVUyIsInN1YiI6ImZmZmZmZmZmNTllODg2YjRlNGIwMWNlZDI4M2YwNjU1IiwidHlwZSI6ImF0IiwiZXhwIjoxNTMwMzcxMjczLCJpYXQiOjE1MzAzNjA0NzIsInNlc3NpZCI6IjZlYmUzM2I1LWM2ZDEtNDhhMS1hMTljLWE0OThjYTU5OGJjYiJ9.S1NDiNsSGzdXDxjdlVSUzCn96ikrsow3LEiw4UyjgKDT0X65eJwLHymqPkFg3sNdIDB67LGKvXM1VSUFn4bHA7S0kRt4veQyodXKkNuazSViuOBrdTPqarMRScx1wEQaw3p4K4AarrRjqfnhpNODLoT1VAo_A7n5Xi9g8PYZxvo\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Sat, 30 Jun 2018 12:07:52 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"status",
											"$.status"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"\"success\" is successfully saved as a text in Scenario Data Store [status]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"isContains"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"\u003cfile:/resources/texts/success_status.txt\u003e"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the values inside the data stores",
							"table": {
								"headers": [
									"JSON Path",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"y",
											"scenario",
											"status",
											"N/A"
										]
									},
									{
										"cells": [
											"$.status",
											"n",
											"",
											"",
											"\u003cfile:/resources/texts/success_status.txt\u003e"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [status] is: \"success\"\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should not contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"notContains"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"\u003cfile:/resources/texts/failure_status.txt\u003e"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should not contains the values inside the data stores",
							"table": {
								"headers": [
									"JSON Path",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"y",
											"scenario",
											"variable7",
											"N/A"
										]
									},
									{
										"cells": [
											"$.status",
											"n",
											"",
											"",
											"\u003cfile:/resources/texts/failure_status.txt\u003e"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [variable7] is: \"Software Automation\"\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"success"
										]
									},
									{
										"cells": [
											"$.status",
											"\u003cfile:/resources/texts/success_status.txt\u003e"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 12,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should not be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"fail"
										]
									},
									{
										"cells": [
											"$.status",
											"\u003cfile:/resources/texts/failure_status.txt\u003e"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the values inside the data stores",
							"table": {
								"headers": [
									"JSON Path",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"y",
											"scenario",
											"status",
											"N/A"
										]
									},
									{
										"cells": [
											"$.status",
											"n",
											"N/A",
											"N/A",
											"success"
										]
									},
									{
										"cells": [
											"$.status",
											"n",
											"N/A",
											"N/A",
											"\u003cfile:/resources/texts/success_status.txt\u003e"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 5,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [status] is: \"success\"\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should not be equal to the values inside the data stores",
							"table": {
								"headers": [
									"JSON Path",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"n",
											"N/A",
											"N/A",
											"fail"
										]
									},
									{
										"cells": [
											"$.status",
											"n",
											"N/A",
											"N/A",
											"\u003cfile:/resources/texts/failure_status.txt\u003e"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the access token in the response which is located inside the JSON Path of \"$.data\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 12,
								"skippedReason": "",
								"messages": [
									"Successfully saved the access token into the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\""
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Existence in the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"isExists"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"true"
										]
									},
									{
										"cells": [
											"$.osa",
											"false"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the query parameters as follows",
							"table": {
								"headers": [
									"Query Parameter",
									"Query Value"
								],
								"rows": [
									{
										"cells": [
											"Id",
											"\u003cfile:/resources/texts/username.txt\u003e"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 4,
								"skippedReason": "",
								"messages": [
									"Query parameters which will append to the request URL: ?Id=osanda12\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters as follows",
							"table": {
								"headers": [
									"Path Parameter",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"Id",
											"\u003cfile:/resources/texts/username.txt\u003e"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 6,
								"skippedReason": "",
								"messages": [
									"Path parameters which will append to the request URL:/osanda12\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the query parameters using data stores as follows",
							"table": {
								"headers": [
									"Query Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Query Value"
								],
								"rows": [
									{
										"cells": [
											"username",
											"y",
											"scenario",
											"username",
											"N/A"
										]
									},
									{
										"cells": [
											"password",
											"n",
											"N/A",
											"N/A",
											"\u003cfile:/resources/texts/password.txt\u003e"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [username] is: \"osanda12\"\n\n",
									"Query parameters which will append to the request URL: ?username=osanda12\u0026password=Password1\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters using data stores as follows",
							"table": {
								"headers": [
									"Path Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"#username",
											"y",
											"scenario",
											"username",
											"N/A"
										]
									},
									{
										"cells": [
											"#password",
											"n",
											"N/A",
											"N/A",
											"\u003cfile:/resources/texts/password.txt\u003e"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [username] is: \"osanda12\"\n\n",
									"Path parameters which will append to the request URL:/osanda12/Password1\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Replace API Endpoint placeholders - Scenario 1",
					"tags": [],
					"executionTime": 4230,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Purchase Validator API\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 554,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://www.googleapis.com/androidpublisher/v3/applications/com.pearsoned.smartflashcards/purchases/products/#skuid/tokens/#purchaseToken?access_token=#access_token\n\n",
									"HTTP Method is: GET\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set values to the API endpoint placeholders as follows",
							"table": {
								"headers": [
									"Placeholder In JSON Template",
									"Replacement Text"
								],
								"rows": [
									{
										"cells": [
											"#skuid",
											"com.pearsoned.smartflashcards.expert.elementary"
										]
									},
									{
										"cells": [
											"#purchaseToken",
											"\u003cfile:/resources/access_tokens/purchase_token.txt\u003e"
										]
									},
									{
										"cells": [
											"#access_token",
											"\u003cfile:/resources/access_tokens/access_token.txt\u003e"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 140,
								"skippedReason": "",
								"messages": [
									"https://www.googleapis.com/androidpublisher/v3/applications/com.pearsoned.smartflashcards/purchases/products/com.pearsoned.smartflashcards.expert.elementary/tokens/jghpbegbjgnpfdfgjjkhdpeo.AO-J1OwpcCUVIa0vhCEpnsaQzG4LiWlLPnzZZ8lurqkUwQOdEayJt-594AJ0ZXAD157IP8l0v-pHedljh50abW2HG50dAdzOQcLz_mE_5oqOApbkuC2X4mOlf8vJ09qul3zrAy30O3luyUqwOUOkJ1L2XhwrLhKROMAMXpx11t81UENIUxq0zaE?access_token=ya29.GlzGBXmxF34s99wQ0o8ie7B4P85ld_FUNBZxizYBk47vwbsMcq3moKMi8UGLl3ua_VMC6DDo3yJqImC4q-VCjaMZ-4rMHk2d8o7bVeNL_i87CO-z7NBzk4J18oGjXA"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3519,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://www.googleapis.com/androidpublisher/v3/applications/com.pearsoned.smartflashcards/purchases/products/com.pearsoned.smartflashcards.expert.elementary/tokens/jghpbegbjgnpfdfgjjkhdpeo.AO-J1OwpcCUVIa0vhCEpnsaQzG4LiWlLPnzZZ8lurqkUwQOdEayJt-594AJ0ZXAD157IP8l0v-pHedljh50abW2HG50dAdzOQcLz_mE_5oqOApbkuC2X4mOlf8vJ09qul3zrAy30O3luyUqwOUOkJ1L2XhwrLhKROMAMXpx11t81UENIUxq0zaE?access_token=ya29.GlzGBXmxF34s99wQ0o8ie7B4P85ld_FUNBZxizYBk47vwbsMcq3moKMi8UGLl3ua_VMC6DDo3yJqImC4q-VCjaMZ-4rMHk2d8o7bVeNL_i87CO-z7NBzk4J18oGjXA\n\n",
									"HTTP Method is: GET\n\n",
									"Response Time is: 2344ms\n\n",
									"Response is: \n{\n    \"error\": {\n        \"errors\": [\n            {\n                \"domain\": \"global\",\n                \"reason\": \"authError\",\n                \"message\": \"Invalid Credentials\",\n                \"locationType\": \"header\",\n                \"location\": \"Authorization\"\n            }\n        ],\n        \"code\": 401,\n        \"message\": \"Invalid Credentials\"\n    }\n}\n\n",
									"Response Headers are: \nVary=Origin\nVary=X-Origin\nWWW-Authenticate=Bearer realm=\"https://accounts.google.com/\", error=invalid_token\nContent-Type=application/json; charset=UTF-8\nContent-Encoding=gzip\nDate=Sat, 30 Jun 2018 12:07:57 GMT\nExpires=Sat, 30 Jun 2018 12:07:57 GMT\nCache-Control=private, max-age=0\nX-Content-Type-Options=nosniff\nX-Frame-Options=SAMEORIGIN\nX-XSS-Protection=1; mode=block\nServer=GSE\nAlt-Svc=quic=\":443\"; ma=2592000; v=\"43,42,41,39,35\"\nTransfer-Encoding=chunked"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"401\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.error.errors[0].reason",
											"authError"
										]
									},
									{
										"cells": [
											"$.error.errors[0].message",
											"Invalid Credentials"
										]
									},
									{
										"cells": [
											"$.error.code",
											"401"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 17,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Replace API Endpoint placeholders - Scenario 2",
					"tags": [],
					"executionTime": 3497,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Purchase Validator API\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 539,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://www.googleapis.com/androidpublisher/v3/applications/com.pearsoned.smartflashcards/purchases/products/#skuid/tokens/#purchaseToken?access_token=#access_token\n\n",
									"HTTP Method is: GET\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user save the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"purchaseToken",
											"jghpbegbjgnpfdfgjjkhdpeo.AO-J1OwpcCUVIa0"
										]
									},
									{
										"cells": [
											"Scenario",
											"accessToken",
											"ya29.GlzGBXmxF34s99wQ0o8ie7B4P85ld_FUNBZxizYB"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [
									"\"jghpbegbjgnpfdfgjjkhdpeo.AO-J1OwpcCUVIa0\" is successfully saved as a text in Scenario Data Store [purchaseToken]",
									"\"ya29.GlzGBXmxF34s99wQ0o8ie7B4P85ld_FUNBZxizYB\" is successfully saved as a text in Scenario Data Store [accessToken]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set values to the API endpoint placeholders using data stores as follows",
							"table": {
								"headers": [
									"Placeholder In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Replacement Text"
								],
								"rows": [
									{
										"cells": [
											"#skuid",
											"n",
											"",
											"",
											"com.pearsoned.smartflashcards.expert.elementary"
										]
									},
									{
										"cells": [
											"#purchaseToken",
											"y",
											"scenario",
											"purchaseToken",
											""
										]
									},
									{
										"cells": [
											"#access_token",
											"y",
											"scenario",
											"accessToken",
											""
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 233,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [purchaseToken] is: \"jghpbegbjgnpfdfgjjkhdpeo.AO-J1OwpcCUVIa0\"\n\n",
									"Text inside Scenario Data Store [accessToken] is: \"ya29.GlzGBXmxF34s99wQ0o8ie7B4P85ld_FUNBZxizYB\"\n\n",
									"https://www.googleapis.com/androidpublisher/v3/applications/com.pearsoned.smartflashcards/purchases/products/com.pearsoned.smartflashcards.expert.elementary/tokens/jghpbegbjgnpfdfgjjkhdpeo.AO-J1OwpcCUVIa0?access_token=ya29.GlzGBXmxF34s99wQ0o8ie7B4P85ld_FUNBZxizYB"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2720,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://www.googleapis.com/androidpublisher/v3/applications/com.pearsoned.smartflashcards/purchases/products/com.pearsoned.smartflashcards.expert.elementary/tokens/jghpbegbjgnpfdfgjjkhdpeo.AO-J1OwpcCUVIa0?access_token=ya29.GlzGBXmxF34s99wQ0o8ie7B4P85ld_FUNBZxizYB\n\n",
									"HTTP Method is: GET\n\n",
									"Response Time is: 1726ms\n\n",
									"Response is: \n{\n    \"error\": {\n        \"errors\": [\n            {\n                \"domain\": \"global\",\n                \"reason\": \"authError\",\n                \"message\": \"Invalid Credentials\",\n                \"locationType\": \"header\",\n                \"location\": \"Authorization\"\n            }\n        ],\n        \"code\": 401,\n        \"message\": \"Invalid Credentials\"\n    }\n}\n\n",
									"Response Headers are: \nVary=Origin\nVary=X-Origin\nWWW-Authenticate=Bearer realm=\"https://accounts.google.com/\", error=invalid_token\nContent-Type=application/json; charset=UTF-8\nContent-Encoding=gzip\nDate=Sat, 30 Jun 2018 12:08:01 GMT\nExpires=Sat, 30 Jun 2018 12:08:01 GMT\nCache-Control=private, max-age=0\nX-Content-Type-Options=nosniff\nX-Frame-Options=SAMEORIGIN\nX-XSS-Protection=1; mode=block\nServer=GSE\nAlt-Svc=quic=\":443\"; ma=2592000; v=\"43,42,41,39,35\"\nTransfer-Encoding=chunked"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"401\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.error.errors[0].reason",
											"authError"
										]
									},
									{
										"cells": [
											"$.error.errors[0].message",
											"Invalid Credentials"
										]
									},
									{
										"cells": [
											"$.error.code",
											"401"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 8,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		},
		{
			"specHeading": "Read from saved CSV Specification",
			"fileName": "C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Read from saved CSV.spec",
			"tags": [],
			"executionTime": 19354,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Delete the created questions",
					"tags": [],
					"executionTime": 4925,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Delete a Question using Question Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 407,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: DELETE\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters as follows",
							"table": {
								"headers": [
									"Path Parameter",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"questionId",
											"5b376757e4b08588e2006968"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"Path parameters which will append to the request URL:/5b376757e4b08588e2006968\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 4518,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions/5b376757e4b08588e2006968\n\n",
									"HTTP Method is: DELETE\n\n",
									"Response Time is: 3461ms\n\n",
									"Response is Empty\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=457e69f9-007d-4658-b6ac-111d581b70c3\nServerTime=2018-06-30 12:08:06\nContent-Type=application/json;charset=UTF-8\nDate=Sat, 30 Jun 2018 12:08:06 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"204\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 0
				},
				{
					"scenarioHeading": "Delete the created questions",
					"tags": [],
					"executionTime": 1831,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Delete a Question using Question Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 273,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: DELETE\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters as follows",
							"table": {
								"headers": [
									"Path Parameter",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"questionId",
											"5b376759e4b08588e2006969"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"Path parameters which will append to the request URL:/5b376759e4b08588e2006969\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1558,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions/5b376759e4b08588e2006969\n\n",
									"HTTP Method is: DELETE\n\n",
									"Response Time is: 949ms\n\n",
									"Response is Empty\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=a5675d2a-5d54-49b3-999c-62aa83901e0e\nServerTime=2018-06-30 12:08:08\nContent-Type=application/json;charset=UTF-8\nDate=Sat, 30 Jun 2018 12:08:08 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"204\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 1
				},
				{
					"scenarioHeading": "Delete the created questions",
					"tags": [],
					"executionTime": 1524,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Delete a Question using Question Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 183,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: DELETE\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters as follows",
							"table": {
								"headers": [
									"Path Parameter",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"questionId",
											"5b37675be4b08588e200696a"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"Path parameters which will append to the request URL:/5b37675be4b08588e200696a\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1341,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions/5b37675be4b08588e200696a\n\n",
									"HTTP Method is: DELETE\n\n",
									"Response Time is: 798ms\n\n",
									"Response is Empty\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=b168c1a7-0ca1-4abe-a654-cfe99e24ad03\nServerTime=2018-06-30 12:08:09\nContent-Type=application/json;charset=UTF-8\nDate=Sat, 30 Jun 2018 12:08:09 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"204\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 2
				},
				{
					"scenarioHeading": "Delete the created questions",
					"tags": [],
					"executionTime": 1819,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Delete a Question using Question Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 249,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: DELETE\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters as follows",
							"table": {
								"headers": [
									"Path Parameter",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"questionId",
											"5b37675de4b08588e200696b"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"Path parameters which will append to the request URL:/5b37675de4b08588e200696b\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1569,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions/5b37675de4b08588e200696b\n\n",
									"HTTP Method is: DELETE\n\n",
									"Response Time is: 853ms\n\n",
									"Response is Empty\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=f90c95dc-76dc-4b7d-9d75-c4389423acb4\nServerTime=2018-06-30 12:08:11\nContent-Type=application/json;charset=UTF-8\nDate=Sat, 30 Jun 2018 12:08:11 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"204\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 3
				},
				{
					"scenarioHeading": "Delete the created questions",
					"tags": [],
					"executionTime": 1421,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Delete a Question using Question Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 171,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: DELETE\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters as follows",
							"table": {
								"headers": [
									"Path Parameter",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"questionId",
											"5b37674be4b08588e2006963"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"Path parameters which will append to the request URL:/5b37674be4b08588e2006963\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1250,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions/5b37674be4b08588e2006963\n\n",
									"HTTP Method is: DELETE\n\n",
									"Response Time is: 853ms\n\n",
									"Response is Empty\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=d88951b2-145b-4689-91f4-2cb79115b5fd\nServerTime=2018-06-30 12:08:13\nContent-Type=application/json;charset=UTF-8\nDate=Sat, 30 Jun 2018 12:08:13 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"204\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 4
				},
				{
					"scenarioHeading": "Delete the created questions",
					"tags": [],
					"executionTime": 2475,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Delete a Question using Question Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 369,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: DELETE\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters as follows",
							"table": {
								"headers": [
									"Path Parameter",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"questionId",
											"5b37674ee4b08588e2006964"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"Path parameters which will append to the request URL:/5b37674ee4b08588e2006964\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2105,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions/5b37674ee4b08588e2006964\n\n",
									"HTTP Method is: DELETE\n\n",
									"Response Time is: 823ms\n\n",
									"Response is Empty\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=5be0672a-9010-42f8-90b0-c0519fd0ddb5\nServerTime=2018-06-30 12:08:15\nContent-Type=application/json;charset=UTF-8\nDate=Sat, 30 Jun 2018 12:08:15 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"204\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 5
				},
				{
					"scenarioHeading": "Delete the created questions",
					"tags": [],
					"executionTime": 1661,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Delete a Question using Question Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 290,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: DELETE\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters as follows",
							"table": {
								"headers": [
									"Path Parameter",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"questionId",
											"5b376750e4b08588e2006965"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"Path parameters which will append to the request URL:/5b376750e4b08588e2006965\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1371,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions/5b376750e4b08588e2006965\n\n",
									"HTTP Method is: DELETE\n\n",
									"Response Time is: 809ms\n\n",
									"Response is Empty\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=3d5181ea-4f81-40fe-a2bc-a25b03b5f16d\nServerTime=2018-06-30 12:08:17\nContent-Type=application/json;charset=UTF-8\nDate=Sat, 30 Jun 2018 12:08:17 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"204\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 6
				},
				{
					"scenarioHeading": "Delete the created questions",
					"tags": [],
					"executionTime": 1550,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Delete a Question using Question Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 169,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: DELETE\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters as follows",
							"table": {
								"headers": [
									"Path Parameter",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"questionId",
											"5b376752e4b08588e2006966"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"Path parameters which will append to the request URL:/5b376752e4b08588e2006966\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1381,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions/5b376752e4b08588e2006966\n\n",
									"HTTP Method is: DELETE\n\n",
									"Response Time is: 831ms\n\n",
									"Response is Empty\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=493aa8ef-e21c-426f-8255-3cc6fcc0f7ab\nServerTime=2018-06-30 12:08:19\nContent-Type=application/json;charset=UTF-8\nDate=Sat, 30 Jun 2018 12:08:19 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"204\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 7
				},
				{
					"scenarioHeading": "Delete the created questions",
					"tags": [],
					"executionTime": 2148,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Delete a Question using Question Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 285,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: DELETE\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters as follows",
							"table": {
								"headers": [
									"Path Parameter",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"questionId",
											"5b376754e4b08588e2006967"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"Path parameters which will append to the request URL:/5b376754e4b08588e2006967\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1863,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions/5b376754e4b08588e2006967\n\n",
									"HTTP Method is: DELETE\n\n",
									"Response Time is: 868ms\n\n",
									"Response is Empty\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=b168c1a7-0ca1-4abe-a654-cfe99e24ad03\nServerTime=2018-06-30 12:08:21\nContent-Type=application/json;charset=UTF-8\nDate=Sat, 30 Jun 2018 12:08:21 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"204\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 8
				}
			],
			"isTableDriven": true,
			"datatable": {
				"headers": [
					"questionId"
				],
				"rows": [
					{
						"cells": [
							"5b376757e4b08588e2006968"
						]
					},
					{
						"cells": [
							"5b376759e4b08588e2006969"
						]
					},
					{
						"cells": [
							"5b37675be4b08588e200696a"
						]
					},
					{
						"cells": [
							"5b37675de4b08588e200696b"
						]
					},
					{
						"cells": [
							"5b37674be4b08588e2006963"
						]
					},
					{
						"cells": [
							"5b37674ee4b08588e2006964"
						]
					},
					{
						"cells": [
							"5b376750e4b08588e2006965"
						]
					},
					{
						"cells": [
							"5b376752e4b08588e2006966"
						]
					},
					{
						"cells": [
							"5b376754e4b08588e2006967"
						]
					}
				]
			},
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 1,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		},
		{
			"specHeading": "Text Files Operations Specification",
			"fileName": "C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Text files operations.spec",
			"tags": [],
			"executionTime": 6941,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Invoke PI API in Staging Environment using valid username and password using payload text file",
					"tags": [
						"get_pi_token",
						"staging"
					],
					"executionTime": 2856,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get Staging PI Token\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 240,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request payload as follows \u003cfile:/resources/payloads/login.txt\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\r\n \"userName\": \"osanda12\",\r\n \"password\": \"Password1\"\r\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2598,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 1832ms\n\n",
									"Response is: \n{\n    \"status\": \"success\",\n    \"data\": \"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJoY2MiOiJVUyIsInN1YiI6ImZmZmZmZmZmNTllODg2YjRlNGIwMWNlZDI4M2YwNjU1IiwidHlwZSI6ImF0IiwiZXhwIjoxNTMwMzcxMzA1LCJpYXQiOjE1MzAzNjA1MDQsInNlc3NpZCI6IjMyMGJjM2U3LTM2NmMtNDg5ZS05ODU1LThlMjZkYmFhYTVmZSJ9.HQHmffNIE223wvovmNd6PkCQyhmDpdQ0arAQcSdqO1NT2CpSXvb49wYz1qR5iwRTOWAflt0X4EZZicfZhK7RY71D5_GSIPv7jWeJOgDgFp2F_5WOGYksTDrKySidUaipZvuPUhJYL86Pa82ERYQ2YywqsD7GUma5fq5TBWJA_W0\"\n}\n\n",
									"Response Headers are: \nServer=Apache-Coyote/1.1\nCorrelation-Id=00cfe23a-ddb5-49b6-92ab-76ab4467f0de\nLocation=https://pi-int.pearsoned.com/v1/piapi-int/tokens/eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJoY2MiOiJVUyIsInN1YiI6ImZmZmZmZmZmNTllODg2YjRlNGIwMWNlZDI4M2YwNjU1IiwidHlwZSI6ImF0IiwiZXhwIjoxNTMwMzcxMzA1LCJpYXQiOjE1MzAzNjA1MDQsInNlc3NpZCI6IjMyMGJjM2U3LTM2NmMtNDg5ZS05ODU1LThlMjZkYmFhYTVmZSJ9.HQHmffNIE223wvovmNd6PkCQyhmDpdQ0arAQcSdqO1NT2CpSXvb49wYz1qR5iwRTOWAflt0X4EZZicfZhK7RY71D5_GSIPv7jWeJOgDgFp2F_5WOGYksTDrKySidUaipZvuPUhJYL86Pa82ERYQ2YywqsD7GUma5fq5TBWJA_W0\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Sat, 30 Jun 2018 12:08:24 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"success"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Existence in the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"isExists"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"true"
										]
									},
									{
										"cells": [
											"$.osa",
											"false"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the access token in the response which is located inside the JSON Path of \"$.data\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 5,
								"skippedReason": "",
								"messages": [
									"Successfully saved the access token into the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\""
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values of the response into text files",
							"table": {
								"headers": [
									"JSON Path",
									"Text File Path"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"/resources/text_files/response_data/status.txt"
										]
									},
									{
										"cells": [
											"$.data",
											"/resources/text_files/response_data/token.txt"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 13,
								"skippedReason": "",
								"messages": [
									"Successfully saved the value inside \"$.status\" into the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI/resources/text_files/response_data/status.txt\"",
									"Successfully saved the value inside \"$.data\" into the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI/resources/text_files/response_data/token.txt\""
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Get a category",
					"tags": [],
					"executionTime": 4085,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get All Categories in Deck Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 268,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8090/api/categories\n\n",
									"HTTP Method is: GET\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"No"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"\u003cfile:/resources/text_files/response_data/token.txt\u003e"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3815,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/categories\n\n",
									"HTTP Method is: GET\n\n",
									"Response Time is: 860ms\n\n",
									"Response is: \n[\n    {\n        \"id\": \"5ae83907c89e2c2fa8952345\",\n        \"name\": \"Category\",\n        \"createdAt\": \"2018-05-01T09:53:11.602Z\",\n        \"updatedAt\": \"2018-05-01T09:53:11.602Z\"\n    },\n    {\n        \"id\": \"5ae83909c89e2c2fa8952347\",\n        \"name\": \"Category\",\n        \"createdAt\": \"2018-05-01T09:53:13.942Z\",\n        \"updatedAt\": \"2018-05-01T09:53:13.942Z\"\n    },\n    {\n        \"id\": \"5ae8390ac89e2c2fa8952348\",\n        \"name\": \"Category\",\n        \"createdAt\": \"2018-05-01T09:53:14.371Z\",\n        \"updatedAt\": \"2018-05-01T09:53:14.371Z\"\n    },\n    {\n        \"id\": \"5ae8390bc89e2c2fa895234a\",\n        \"name\": \"Category\",\n        \"createdAt\": \"2018-05-01T09:53:15.494Z\",\n        \"updatedAt\": \"2018-05-01T09:53:15.494Z\"\n    },\n    {\n        \"id\": \"5ae8390cc89e2c2fa895234c\",\n        \"name\": \"Category\",\n        \"createdAt\": \"2018-05-01T09:53:16.918Z\",\n        \"updatedAt\": \"2018-05-01T09:53:16.918Z\"\n    },\n    {\n        \"id\": \"5ae8390ec89e2c2fa895234e\",\n        \"name\": \"Category\",\n        \"createdAt\": \"2018-05-01T09:53:18.108Z\",\n        \"updatedAt\": \"2018-05-01T09:53:18.108Z\"\n    },\n    {\n        \"id\": \"5ae8390fc89e2c2fa8952351\",\n        \"name\": \"Category\",\n        \"createdAt\": \"2018-05-01T09:53:19.223Z\",\n        \"updatedAt\": \"2018-05-01T09:53:19.223Z\"\n    },\n    {\n        \"id\": \"5ae83910c89e2c2fa8952353\",\n        \"name\": \"New Catergory\",\n        \"createdAt\": \"2018-05-01T09:53:20.364Z\",\n        \"updatedAt\": \"2018-05-01T09:53:21.486Z\"\n    },\n    {\n        \"id\": \"5ae83911c89e2c2fa8952355\",\n        \"name\": \"Category\",\n        \"createdAt\": \"2018-05-01T09:53:21.851Z\",\n        \"updatedAt\": \"2018-05-01T09:53:21.851Z\"\n    },\n    {\n        \"id\": \"5ae83913c89e2c2fa8952357\",\n        \"name\": \"Category\",\n        \"createdAt\": \"2018-05-01T09:53:23.432Z\",\n        \"updatedAt\": \"2018-05-01T09:53:23.432Z\"\n    },\n    {\n        \"id\": \"5ae83af0c89e2c317fdc2535\",\n        \"name\": \"Category\",\n        \"createdAt\": \"2018-05-01T10:01:20.826Z\",\n        \"updatedAt\": \"2018-05-01T10:01:20.826Z\"\n    },\n    {\n        \"id\": \"5ae83af3c89e2c317fdc2537\",\n        \"name\": \"Category\",\n        \"createdAt\": \"2018-05-01T10:01:23.183Z\",\n        \"updatedAt\": \"2018-05-01T10:01:23.183Z\"\n    },\n    {\n        \"id\": \"5ae83af3c89e2c317fdc2538\",\n        \"name\": \"Category\",\n        \"createdAt\": \"2018-05-01T10:01:23.602Z\",\n        \"updatedAt\": \"2018-05-01T10:01:23.602Z\"\n    },\n    {\n        \"id\": \"5ae83af4c89e2c317fdc253a\",\n        \"name\": \"Category\",\n        \"createdAt\": \"2018-05-01T10:01:24.811Z\",\n        \"updatedAt\": \"2018-05-01T10:01:24.811Z\"\n    },\n    {\n        \"id\": \"5ae83af6c89e2c317fdc253c\",\n        \"name\": \"Category\",\n        \"createdAt\": \"2018-05-01T10:01:26.295Z\",\n        \"updatedAt\": \"2018-05-01T10:01:26.295Z\"\n    },\n    {\n        \"id\": \"5ae83af7c89e2c317fdc253e\",\n        \"name\": \"Category\",\n        \"createdAt\": \"2018-05-01T10:01:27.435Z\",\n        \"updatedAt\": \"2018-05-01T10:01:27.435Z\"\n    },\n    {\n        \"id\": \"5ae83af8c89e2c317fdc2541\",\n        \"name\": \"Category\",\n        \"createdAt\": \"2018-05-01T10:01:28.446Z\",\n        \"updatedAt\": \"2018-05-01T10:01:28.446Z\"\n    },\n    {\n        \"id\": \"5ae83af9c89e2c317fdc2543\",\n        \"name\": \"New Catergory\",\n        \"createdAt\": \"2018-05-01T10:01:29.519Z\",\n        \"updatedAt\": \"2018-05-01T10:01:30.534Z\"\n    },\n    {\n        \"id\": \"5ae83afac89e2c317fdc2545\",\n        \"name\": \"Category\",\n        \"createdAt\": \"2018-05-01T10:01:30.897Z\",\n        \"updatedAt\": \"2018-05-01T10:01:30.897Z\"\n    },\n    {\n        \"id\": \"5ae83afcc89e2c317fdc2547\",\n        \"name\": \"Category\",\n        \"createdAt\": \"2018-05-01T10:01:32.245Z\",\n        \"updatedAt\": \"2018-05-01T10:01:32.245Z\"\n    },\n    {\n        \"id\": \"5b12e6242e02d85d8b54c7c5\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-02T18:47:00.618Z\",\n        \"updatedAt\": \"2018-06-02T18:47:00.618Z\"\n    },\n    {\n        \"id\": \"5b162f1b2e02d85d8b54db43\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-05T06:35:07.098Z\",\n        \"updatedAt\": \"2018-06-05T06:35:07.098Z\"\n    },\n    {\n        \"id\": \"5b162f1c2e02d85d8b54db46\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-05T06:35:08.278Z\",\n        \"updatedAt\": \"2018-06-05T06:35:08.278Z\"\n    },\n    {\n        \"id\": \"5b162f1d2e02d85d8b54db49\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-05T06:35:09.530Z\",\n        \"updatedAt\": \"2018-06-05T06:35:09.530Z\"\n    },\n    {\n        \"id\": \"5b162f1e2e02d85d8b54db4b\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-05T06:35:10.782Z\",\n        \"updatedAt\": \"2018-06-05T06:35:10.782Z\"\n    },\n    {\n        \"id\": \"5b162f1f2e02d85d8b54db4d\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-05T06:35:11.924Z\",\n        \"updatedAt\": \"2018-06-05T06:35:11.924Z\"\n    },\n    {\n        \"id\": \"5b162f212e02d85d8b54db4e\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-05T06:35:13.209Z\",\n        \"updatedAt\": \"2018-06-05T06:35:13.209Z\"\n    },\n    {\n        \"id\": \"5b162f222e02d85d8b54db50\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-05T06:35:14.367Z\",\n        \"updatedAt\": \"2018-06-05T06:35:14.367Z\"\n    },\n    {\n        \"id\": \"5b162f602e02d85d8b54dba3\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-05T06:36:16.989Z\",\n        \"updatedAt\": \"2018-06-05T06:36:16.989Z\"\n    },\n    {\n        \"id\": \"5b162f622e02d85d8b54dba5\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-05T06:36:18.110Z\",\n        \"updatedAt\": \"2018-06-05T06:36:18.110Z\"\n    },\n    {\n        \"id\": \"5b162f632e02d85d8b54dba8\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-05T06:36:19.280Z\",\n        \"updatedAt\": \"2018-06-05T06:36:19.280Z\"\n    },\n    {\n        \"id\": \"5b162f642e02d85d8b54dbaa\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-05T06:36:20.597Z\",\n        \"updatedAt\": \"2018-06-05T06:36:20.597Z\"\n    },\n    {\n        \"id\": \"5b162f652e02d85d8b54dbad\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-05T06:36:21.735Z\",\n        \"updatedAt\": \"2018-06-05T06:36:21.735Z\"\n    },\n    {\n        \"id\": \"5b162f662e02d85d8b54dbaf\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-05T06:36:22.869Z\",\n        \"updatedAt\": \"2018-06-05T06:36:22.869Z\"\n    },\n    {\n        \"id\": \"5b162f672e02d85d8b54dbb2\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-05T06:36:23.996Z\",\n        \"updatedAt\": \"2018-06-05T06:36:23.996Z\"\n    },\n    {\n        \"id\": \"5b162fbe2e02d85d8b54dc52\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-05T06:37:50.793Z\",\n        \"updatedAt\": \"2018-06-05T06:37:51.989Z\"\n    },\n    {\n        \"id\": \"5b162fc12e02d85d8b54dc55\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-05T06:37:53.125Z\",\n        \"updatedAt\": \"2018-06-05T06:37:54.296Z\"\n    },\n    {\n        \"id\": \"5b162fc32e02d85d8b54dc59\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-05T06:37:55.510Z\",\n        \"updatedAt\": \"2018-06-05T06:37:56.735Z\"\n    },\n    {\n        \"id\": \"5b162fc52e02d85d8b54dc5d\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-05T06:37:57.949Z\",\n        \"updatedAt\": \"2018-06-05T06:37:59.113Z\"\n    },\n    {\n        \"id\": \"5b162fc82e02d85d8b54dc62\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-05T06:38:00.255Z\",\n        \"updatedAt\": \"2018-06-05T06:38:01.437Z\"\n    },\n    {\n        \"id\": \"5b162fca2e02d85d8b54dc67\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-05T06:38:02.655Z\",\n        \"updatedAt\": \"2018-06-05T06:38:03.815Z\"\n    },\n    {\n        \"id\": \"5b162fcc2e02d85d8b54dc6c\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-05T06:38:04.917Z\",\n        \"updatedAt\": \"2018-06-05T06:38:05.997Z\"\n    },\n    {\n        \"id\": \"5b162fcf2e02d85d8b54dc70\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-05T06:38:07.180Z\",\n        \"updatedAt\": \"2018-06-05T06:38:07.180Z\"\n    },\n    {\n        \"id\": \"5b162fd52e02d85d8b54dc78\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-05T06:38:13.136Z\",\n        \"updatedAt\": \"2018-06-05T06:38:13.136Z\"\n    },\n    {\n        \"id\": \"5b162fd62e02d85d8b54dc7b\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-05T06:38:14.421Z\",\n        \"updatedAt\": \"2018-06-05T06:38:14.421Z\"\n    },\n    {\n        \"id\": \"5b162fd72e02d85d8b54dc7d\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-05T06:38:15.637Z\",\n        \"updatedAt\": \"2018-06-05T06:38:15.637Z\"\n    },\n    {\n        \"id\": \"5b162fd82e02d85d8b54dc80\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-05T06:38:16.767Z\",\n        \"updatedAt\": \"2018-06-05T06:38:16.767Z\"\n    },\n    {\n        \"id\": \"5b162fd92e02d85d8b54dc82\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-05T06:38:17.887Z\",\n        \"updatedAt\": \"2018-06-05T06:38:17.887Z\"\n    },\n    {\n        \"id\": \"5b162fdb2e02d85d8b54dc85\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-05T06:38:19.129Z\",\n        \"updatedAt\": \"2018-06-05T06:38:19.129Z\"\n    },\n    {\n        \"id\": \"5b162fdc2e02d85d8b54dc87\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-05T06:38:20.333Z\",\n        \"updatedAt\": \"2018-06-05T06:38:20.333Z\"\n    },\n    {\n        \"id\": \"5b1630032e02d85d8b54dcb3\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-05T06:38:59.822Z\",\n        \"updatedAt\": \"2018-06-05T06:39:01.017Z\"\n    },\n    {\n        \"id\": \"5b1630062e02d85d8b54dcb7\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-05T06:39:02.262Z\",\n        \"updatedAt\": \"2018-06-05T06:39:03.423Z\"\n    },\n    {\n        \"id\": \"5b1630082e02d85d8b54dcbb\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-05T06:39:04.646Z\",\n        \"updatedAt\": \"2018-06-05T06:39:05.831Z\"\n    },\n    {\n        \"id\": \"5b16300b2e02d85d8b54dcbf\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-05T06:39:07.044Z\",\n        \"updatedAt\": \"2018-06-05T06:39:08.293Z\"\n    },\n    {\n        \"id\": \"5b16300d2e02d85d8b54dcc3\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-05T06:39:09.392Z\",\n        \"updatedAt\": \"2018-06-05T06:39:10.474Z\"\n    },\n    {\n        \"id\": \"5b16300f2e02d85d8b54dcc8\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-05T06:39:11.580Z\",\n        \"updatedAt\": \"2018-06-05T06:39:12.833Z\"\n    },\n    {\n        \"id\": \"5b1630122e02d85d8b54dccd\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-05T06:39:14.071Z\",\n        \"updatedAt\": \"2018-06-05T06:39:15.198Z\"\n    },\n    {\n        \"id\": \"5b1630142e02d85d8b54dcd2\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-05T06:39:16.284Z\",\n        \"updatedAt\": \"2018-06-05T06:39:16.284Z\"\n    },\n    {\n        \"id\": \"5b1630772e02d85d8b54dd7b\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-05T06:40:55.841Z\",\n        \"updatedAt\": \"2018-06-05T06:40:57.025Z\"\n    },\n    {\n        \"id\": \"5b16307a2e02d85d8b54dd7e\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-05T06:40:58.282Z\",\n        \"updatedAt\": \"2018-06-05T06:40:59.407Z\"\n    },\n    {\n        \"id\": \"5b16307c2e02d85d8b54dd81\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-05T06:41:00.524Z\",\n        \"updatedAt\": \"2018-06-05T06:41:01.685Z\"\n    },\n    {\n        \"id\": \"5b16307e2e02d85d8b54dd85\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-05T06:41:02.875Z\",\n        \"updatedAt\": \"2018-06-05T06:41:04.106Z\"\n    },\n    {\n        \"id\": \"5b1630812e02d85d8b54dd88\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-05T06:41:05.218Z\",\n        \"updatedAt\": \"2018-06-05T06:41:06.367Z\"\n    },\n    {\n        \"id\": \"5b1630832e02d85d8b54dd8b\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-05T06:41:07.508Z\",\n        \"updatedAt\": \"2018-06-05T06:41:08.764Z\"\n    },\n    {\n        \"id\": \"5b1630852e02d85d8b54dd8e\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-05T06:41:09.994Z\",\n        \"updatedAt\": \"2018-06-05T06:41:11.104Z\"\n    },\n    {\n        \"id\": \"5b1630882e02d85d8b54dd91\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-05T06:41:12.224Z\",\n        \"updatedAt\": \"2018-06-05T06:41:12.224Z\"\n    },\n    {\n        \"id\": \"5b1630e72e02d85d8b54de1a\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-05T06:42:47.125Z\",\n        \"updatedAt\": \"2018-06-05T06:42:47.125Z\"\n    },\n    {\n        \"id\": \"5b1630eb2e02d85d8b54de20\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-05T06:42:51.607Z\",\n        \"updatedAt\": \"2018-06-05T06:42:51.607Z\"\n    },\n    {\n        \"id\": \"5b1631352e02d85d8b54de80\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-05T06:44:05.982Z\",\n        \"updatedAt\": \"2018-06-05T06:44:05.982Z\"\n    },\n    {\n        \"id\": \"5b16313a2e02d85d8b54de86\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-05T06:44:10.972Z\",\n        \"updatedAt\": \"2018-06-05T06:44:10.972Z\"\n    },\n    {\n        \"id\": \"5b1631b52e02d85d8b54def2\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-05T06:46:13.760Z\",\n        \"updatedAt\": \"2018-06-05T06:46:13.760Z\"\n    },\n    {\n        \"id\": \"5b1631ba2e02d85d8b54def7\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-05T06:46:18.919Z\",\n        \"updatedAt\": \"2018-06-05T06:46:18.919Z\"\n    },\n    {\n        \"id\": \"5b1a225a2e02d860aeb82b5c\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-08T06:29:46.292Z\",\n        \"updatedAt\": \"2018-06-08T06:29:46.292Z\"\n    },\n    {\n        \"id\": \"5b1a23c42e02d860aeb82ba2\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-08T06:35:48.847Z\",\n        \"updatedAt\": \"2018-06-08T06:35:50.758Z\"\n    },\n    {\n        \"id\": \"5b1a23c82e02d860aeb82ba3\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-08T06:35:52.273Z\",\n        \"updatedAt\": \"2018-06-08T06:35:53.672Z\"\n    },\n    {\n        \"id\": \"5b1a23ca2e02d860aeb82ba4\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-08T06:35:54.751Z\",\n        \"updatedAt\": \"2018-06-08T06:35:56.505Z\"\n    },\n    {\n        \"id\": \"5b1a23cd2e02d860aeb82ba5\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-08T06:35:57.980Z\",\n        \"updatedAt\": \"2018-06-08T06:36:00.091Z\"\n    },\n    {\n        \"id\": \"5b1a23d12e02d860aeb82ba6\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-08T06:36:01.714Z\",\n        \"updatedAt\": \"2018-06-08T06:36:02.960Z\"\n    },\n    {\n        \"id\": \"5b1a23d42e02d860aeb82ba7\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-08T06:36:04.019Z\",\n        \"updatedAt\": \"2018-06-08T06:36:05.056Z\"\n    },\n    {\n        \"id\": \"5b1a23d62e02d860aeb82ba8\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-08T06:36:06.197Z\",\n        \"updatedAt\": \"2018-06-08T06:36:08.176Z\"\n    },\n    {\n        \"id\": \"5b1a24192e02d860aeb82bb5\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-08T06:37:13.729Z\",\n        \"updatedAt\": \"2018-06-08T06:37:13.729Z\"\n    },\n    {\n        \"id\": \"5b1a2e392e02d860aeb82d56\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-08T07:20:25.561Z\",\n        \"updatedAt\": \"2018-06-08T07:20:25.561Z\"\n    },\n    {\n        \"id\": \"5b1a2f9e2e02d860aeb82d9a\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-08T07:26:22.345Z\",\n        \"updatedAt\": \"2018-06-08T07:26:23.438Z\"\n    },\n    {\n        \"id\": \"5b1a2fa12e02d860aeb82d9b\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-08T07:26:25.092Z\",\n        \"updatedAt\": \"2018-06-08T07:26:26.768Z\"\n    },\n    {\n        \"id\": \"5b1a2fa42e02d860aeb82d9c\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-08T07:26:28.590Z\",\n        \"updatedAt\": \"2018-06-08T07:26:30.002Z\"\n    },\n    {\n        \"id\": \"5b1a2fa72e02d860aeb82d9d\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-08T07:26:31.534Z\",\n        \"updatedAt\": \"2018-06-08T07:26:33.213Z\"\n    },\n    {\n        \"id\": \"5b1a2faa2e02d860aeb82d9e\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-08T07:26:34.521Z\",\n        \"updatedAt\": \"2018-06-08T07:26:36.161Z\"\n    },\n    {\n        \"id\": \"5b1a2fad2e02d860aeb82d9f\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-08T07:26:37.257Z\",\n        \"updatedAt\": \"2018-06-08T07:26:38.292Z\"\n    },\n    {\n        \"id\": \"5b1a2faf2e02d860aeb82da0\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-08T07:26:39.852Z\",\n        \"updatedAt\": \"2018-06-08T07:26:41.677Z\"\n    },\n    {\n        \"id\": \"5b1a2ff12e02d860aeb82dad\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-08T07:27:45.323Z\",\n        \"updatedAt\": \"2018-06-08T07:27:45.323Z\"\n    },\n    {\n        \"id\": \"5b1f47552e02d860aeb8417a\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-12T04:08:53.589Z\",\n        \"updatedAt\": \"2018-06-12T04:08:53.589Z\"\n    },\n    {\n        \"id\": \"5b1f478c2e02d860aeb8417e\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-12T04:09:48.703Z\",\n        \"updatedAt\": \"2018-06-12T04:09:48.703Z\"\n    },\n    {\n        \"id\": \"5b1f90792e02d860aeb84276\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-12T09:20:57.865Z\",\n        \"updatedAt\": \"2018-06-12T09:20:57.865Z\"\n    },\n    {\n        \"id\": \"5b1f907b2e02d860aeb84277\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-12T09:20:59.224Z\",\n        \"updatedAt\": \"2018-06-12T09:20:59.224Z\"\n    },\n    {\n        \"id\": \"5b1f907c2e02d860aeb84278\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-12T09:21:00.203Z\",\n        \"updatedAt\": \"2018-06-12T09:21:00.203Z\"\n    },\n    {\n        \"id\": \"5b1f907d2e02d860aeb84279\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-12T09:21:01.162Z\",\n        \"updatedAt\": \"2018-06-12T09:21:01.162Z\"\n    },\n    {\n        \"id\": \"5b1f907e2e02d860aeb8427a\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-12T09:21:02.199Z\",\n        \"updatedAt\": \"2018-06-12T09:21:02.199Z\"\n    },\n    {\n        \"id\": \"5b1f907f2e02d860aeb8427b\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-12T09:21:03.257Z\",\n        \"updatedAt\": \"2018-06-12T09:21:03.257Z\"\n    },\n    {\n        \"id\": \"5b1f90802e02d860aeb8427c\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-12T09:21:04.381Z\",\n        \"updatedAt\": \"2018-06-12T09:21:04.381Z\"\n    },\n    {\n        \"id\": \"5b1f90882e02d860aeb8427e\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-12T09:21:12.807Z\",\n        \"updatedAt\": \"2018-06-12T09:21:13.824Z\"\n    },\n    {\n        \"id\": \"5b1f908a2e02d860aeb8427f\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-12T09:21:14.850Z\",\n        \"updatedAt\": \"2018-06-12T09:21:15.927Z\"\n    },\n    {\n        \"id\": \"5b1f908d2e02d860aeb84280\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-12T09:21:17.110Z\",\n        \"updatedAt\": \"2018-06-12T09:21:18.170Z\"\n    },\n    {\n        \"id\": \"5b1f908f2e02d860aeb84281\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-12T09:21:19.219Z\",\n        \"updatedAt\": \"2018-06-12T09:21:21.022Z\"\n    },\n    {\n        \"id\": \"5b1f90922e02d860aeb84282\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-12T09:21:22.548Z\",\n        \"updatedAt\": \"2018-06-12T09:21:23.890Z\"\n    },\n    {\n        \"id\": \"5b1f90952e02d860aeb84283\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-12T09:21:25.156Z\",\n        \"updatedAt\": \"2018-06-12T09:21:26.321Z\"\n    },\n    {\n        \"id\": \"5b1f90972e02d860aeb84284\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-12T09:21:27.575Z\",\n        \"updatedAt\": \"2018-06-12T09:21:28.766Z\"\n    },\n    {\n        \"id\": \"5b1f90992e02d860aeb84285\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-12T09:21:29.889Z\",\n        \"updatedAt\": \"2018-06-12T09:21:29.889Z\"\n    },\n    {\n        \"id\": \"5b1f909d2e02d860aeb84286\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-12T09:21:33.688Z\",\n        \"updatedAt\": \"2018-06-12T09:21:33.688Z\"\n    },\n    {\n        \"id\": \"5b1f90a22e02d860aeb84287\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-12T09:21:38.943Z\",\n        \"updatedAt\": \"2018-06-12T09:21:38.943Z\"\n    },\n    {\n        \"id\": \"5b1f98d22e02d860aeb8431c\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-12T09:56:34.719Z\",\n        \"updatedAt\": \"2018-06-12T09:56:34.719Z\"\n    },\n    {\n        \"id\": \"5b1f98d42e02d860aeb8431d\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-12T09:56:36.205Z\",\n        \"updatedAt\": \"2018-06-12T09:56:36.205Z\"\n    },\n    {\n        \"id\": \"5b1f98d52e02d860aeb8431e\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-12T09:56:37.546Z\",\n        \"updatedAt\": \"2018-06-12T09:56:37.546Z\"\n    },\n    {\n        \"id\": \"5b1f98d72e02d860aeb8431f\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-12T09:56:39.135Z\",\n        \"updatedAt\": \"2018-06-12T09:56:39.135Z\"\n    },\n    {\n        \"id\": \"5b1f98d82e02d860aeb84320\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-12T09:56:40.808Z\",\n        \"updatedAt\": \"2018-06-12T09:56:40.808Z\"\n    },\n    {\n        \"id\": \"5b1f98da2e02d860aeb84321\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-12T09:56:42.352Z\",\n        \"updatedAt\": \"2018-06-12T09:56:42.352Z\"\n    },\n    {\n        \"id\": \"5b1f98db2e02d860aeb84322\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-12T09:56:43.873Z\",\n        \"updatedAt\": \"2018-06-12T09:56:43.873Z\"\n    },\n    {\n        \"id\": \"5b1f98e72e02d860aeb84324\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-12T09:56:55.090Z\",\n        \"updatedAt\": \"2018-06-12T09:56:56.602Z\"\n    },\n    {\n        \"id\": \"5b1f98e92e02d860aeb84325\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-12T09:56:57.901Z\",\n        \"updatedAt\": \"2018-06-12T09:56:59.345Z\"\n    },\n    {\n        \"id\": \"5b1f98ed2e02d860aeb84326\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-12T09:57:01.061Z\",\n        \"updatedAt\": \"2018-06-12T09:57:02.179Z\"\n    },\n    {\n        \"id\": \"5b1f98ef2e02d860aeb84327\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-12T09:57:03.738Z\",\n        \"updatedAt\": \"2018-06-12T09:57:05.365Z\"\n    },\n    {\n        \"id\": \"5b1f98f32e02d860aeb84328\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-12T09:57:07.012Z\",\n        \"updatedAt\": \"2018-06-12T09:57:08.403Z\"\n    },\n    {\n        \"id\": \"5b1f98f52e02d860aeb84329\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-12T09:57:09.482Z\",\n        \"updatedAt\": \"2018-06-12T09:57:11.052Z\"\n    },\n    {\n        \"id\": \"5b1f98f82e02d860aeb8432a\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-12T09:57:12.523Z\",\n        \"updatedAt\": \"2018-06-12T09:57:14.200Z\"\n    },\n    {\n        \"id\": \"5b1f98fb2e02d860aeb8432b\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-12T09:57:15.345Z\",\n        \"updatedAt\": \"2018-06-12T09:57:15.345Z\"\n    },\n    {\n        \"id\": \"5b1f98fd2e02d860aeb8432c\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-12T09:57:17.934Z\",\n        \"updatedAt\": \"2018-06-12T09:57:17.934Z\"\n    },\n    {\n        \"id\": \"5b1f99032e02d860aeb8432d\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-12T09:57:23.718Z\",\n        \"updatedAt\": \"2018-06-12T09:57:23.718Z\"\n    },\n    {\n        \"id\": \"5b1fa1ba2e02d860aeb843c2\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-12T10:34:34.789Z\",\n        \"updatedAt\": \"2018-06-12T10:34:34.789Z\"\n    },\n    {\n        \"id\": \"5b1fa1bc2e02d860aeb843c3\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-12T10:34:36.162Z\",\n        \"updatedAt\": \"2018-06-12T10:34:36.162Z\"\n    },\n    {\n        \"id\": \"5b1fa1bd2e02d860aeb843c4\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-12T10:34:37.217Z\",\n        \"updatedAt\": \"2018-06-12T10:34:37.217Z\"\n    },\n    {\n        \"id\": \"5b1fa1be2e02d860aeb843c5\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-12T10:34:38.193Z\",\n        \"updatedAt\": \"2018-06-12T10:34:38.193Z\"\n    },\n    {\n        \"id\": \"5b1fa1bf2e02d860aeb843c6\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-12T10:34:39.158Z\",\n        \"updatedAt\": \"2018-06-12T10:34:39.158Z\"\n    },\n    {\n        \"id\": \"5b1fa1c02e02d860aeb843c7\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-12T10:34:40.161Z\",\n        \"updatedAt\": \"2018-06-12T10:34:40.161Z\"\n    },\n    {\n        \"id\": \"5b1fa1c12e02d860aeb843c8\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-12T10:34:41.184Z\",\n        \"updatedAt\": \"2018-06-12T10:34:41.184Z\"\n    },\n    {\n        \"id\": \"5b1fa1cb2e02d860aeb843ca\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-12T10:34:51.542Z\",\n        \"updatedAt\": \"2018-06-12T10:34:52.578Z\"\n    },\n    {\n        \"id\": \"5b1fa1cd2e02d860aeb843cb\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-12T10:34:53.710Z\",\n        \"updatedAt\": \"2018-06-12T10:34:54.994Z\"\n    },\n    {\n        \"id\": \"5b1fa1d02e02d860aeb843cc\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-12T10:34:56.107Z\",\n        \"updatedAt\": \"2018-06-12T10:34:57.634Z\"\n    },\n    {\n        \"id\": \"5b1fa1d32e02d860aeb843cd\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-12T10:34:59.310Z\",\n        \"updatedAt\": \"2018-06-12T10:35:00.788Z\"\n    },\n    {\n        \"id\": \"5b1fa1d62e02d860aeb843ce\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-12T10:35:02.270Z\",\n        \"updatedAt\": \"2018-06-12T10:35:03.425Z\"\n    },\n    {\n        \"id\": \"5b1fa1d82e02d860aeb843cf\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-12T10:35:04.545Z\",\n        \"updatedAt\": \"2018-06-12T10:35:06.082Z\"\n    },\n    {\n        \"id\": \"5b1fa1db2e02d860aeb843d0\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-12T10:35:07.814Z\",\n        \"updatedAt\": \"2018-06-12T10:35:09.619Z\"\n    },\n    {\n        \"id\": \"5b1fa1de2e02d860aeb843d1\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-12T10:35:10.975Z\",\n        \"updatedAt\": \"2018-06-12T10:35:10.975Z\"\n    },\n    {\n        \"id\": \"5b1fa1e12e02d860aeb843d2\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-12T10:35:13.572Z\",\n        \"updatedAt\": \"2018-06-12T10:35:13.572Z\"\n    },\n    {\n        \"id\": \"5b1fa1e52e02d860aeb843d3\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-12T10:35:17.483Z\",\n        \"updatedAt\": \"2018-06-12T10:35:17.483Z\"\n    },\n    {\n        \"id\": \"5b209bd02e02d860aeb8452a\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-13T04:21:36.472Z\",\n        \"updatedAt\": \"2018-06-13T04:21:36.472Z\"\n    },\n    {\n        \"id\": \"5b209bd22e02d860aeb8452b\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-13T04:21:38.148Z\",\n        \"updatedAt\": \"2018-06-13T04:21:38.148Z\"\n    },\n    {\n        \"id\": \"5b209bd42e02d860aeb8452c\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-13T04:21:40.228Z\",\n        \"updatedAt\": \"2018-06-13T04:21:40.228Z\"\n    },\n    {\n        \"id\": \"5b209bd62e02d860aeb8452d\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-13T04:21:42.003Z\",\n        \"updatedAt\": \"2018-06-13T04:21:42.003Z\"\n    },\n    {\n        \"id\": \"5b209bd72e02d860aeb8452e\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-13T04:21:43.777Z\",\n        \"updatedAt\": \"2018-06-13T04:21:43.777Z\"\n    },\n    {\n        \"id\": \"5b209bd92e02d860aeb8452f\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-13T04:21:45.552Z\",\n        \"updatedAt\": \"2018-06-13T04:21:45.552Z\"\n    },\n    {\n        \"id\": \"5b209bdc2e02d860aeb84530\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-13T04:21:48.272Z\",\n        \"updatedAt\": \"2018-06-13T04:21:48.272Z\"\n    },\n    {\n        \"id\": \"5b209bea2e02d860aeb84534\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-13T04:22:02.889Z\",\n        \"updatedAt\": \"2018-06-13T04:22:04.697Z\"\n    },\n    {\n        \"id\": \"5b209bee2e02d860aeb84536\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-13T04:22:06.651Z\",\n        \"updatedAt\": \"2018-06-13T04:22:08.636Z\"\n    },\n    {\n        \"id\": \"5b209bf22e02d860aeb84538\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-13T04:22:10.318Z\",\n        \"updatedAt\": \"2018-06-13T04:22:12.084Z\"\n    },\n    {\n        \"id\": \"5b209bf52e02d860aeb84539\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-13T04:22:13.751Z\",\n        \"updatedAt\": \"2018-06-13T04:22:15.744Z\"\n    },\n    {\n        \"id\": \"5b209bf92e02d860aeb8453b\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-13T04:22:17.797Z\",\n        \"updatedAt\": \"2018-06-13T04:22:19.330Z\"\n    },\n    {\n        \"id\": \"5b209bfd2e02d860aeb8453d\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-13T04:22:21.276Z\",\n        \"updatedAt\": \"2018-06-13T04:22:22.954Z\"\n    },\n    {\n        \"id\": \"5b209c002e02d860aeb8453e\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-13T04:22:24.614Z\",\n        \"updatedAt\": \"2018-06-13T04:22:26.081Z\"\n    },\n    {\n        \"id\": \"5b209c032e02d860aeb84540\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-13T04:22:27.629Z\",\n        \"updatedAt\": \"2018-06-13T04:22:27.629Z\"\n    },\n    {\n        \"id\": \"5b209c082e02d860aeb84541\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-13T04:22:32.040Z\",\n        \"updatedAt\": \"2018-06-13T04:22:32.040Z\"\n    },\n    {\n        \"id\": \"5b209c0e2e02d860aeb84544\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-13T04:22:38.722Z\",\n        \"updatedAt\": \"2018-06-13T04:22:38.722Z\"\n    },\n    {\n        \"id\": \"5b209d0c2e02d860aeb8455a\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-13T04:26:52.422Z\",\n        \"updatedAt\": \"2018-06-13T04:26:52.422Z\"\n    },\n    {\n        \"id\": \"5b209d0e2e02d860aeb8455b\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-13T04:26:54.406Z\",\n        \"updatedAt\": \"2018-06-13T04:26:54.406Z\"\n    },\n    {\n        \"id\": \"5b209d102e02d860aeb8455c\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-13T04:26:56.216Z\",\n        \"updatedAt\": \"2018-06-13T04:26:56.216Z\"\n    },\n    {\n        \"id\": \"5b209d112e02d860aeb8455d\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-13T04:26:57.952Z\",\n        \"updatedAt\": \"2018-06-13T04:26:57.952Z\"\n    },\n    {\n        \"id\": \"5b209d132e02d860aeb8455e\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-13T04:26:59.418Z\",\n        \"updatedAt\": \"2018-06-13T04:26:59.418Z\"\n    },\n    {\n        \"id\": \"5b209d152e02d860aeb8455f\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-13T04:27:01.194Z\",\n        \"updatedAt\": \"2018-06-13T04:27:01.194Z\"\n    },\n    {\n        \"id\": \"5b209d162e02d860aeb84560\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-13T04:27:02.552Z\",\n        \"updatedAt\": \"2018-06-13T04:27:02.552Z\"\n    },\n    {\n        \"id\": \"5b209d222e02d860aeb84562\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-13T04:27:14.668Z\",\n        \"updatedAt\": \"2018-06-13T04:27:16.237Z\"\n    },\n    {\n        \"id\": \"5b209d252e02d860aeb84563\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-13T04:27:17.803Z\",\n        \"updatedAt\": \"2018-06-13T04:27:19.788Z\"\n    },\n    {\n        \"id\": \"5b209d292e02d860aeb84564\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-13T04:27:21.351Z\",\n        \"updatedAt\": \"2018-06-13T04:27:22.815Z\"\n    },\n    {\n        \"id\": \"5b209d2c2e02d860aeb84565\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-13T04:27:24.427Z\",\n        \"updatedAt\": \"2018-06-13T04:27:25.950Z\"\n    },\n    {\n        \"id\": \"5b209d2f2e02d860aeb84566\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-13T04:27:27.412Z\",\n        \"updatedAt\": \"2018-06-13T04:27:28.818Z\"\n    },\n    {\n        \"id\": \"5b209d322e02d860aeb84567\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-13T04:27:30.232Z\",\n        \"updatedAt\": \"2018-06-13T04:27:31.904Z\"\n    },\n    {\n        \"id\": \"5b209d352e02d860aeb84568\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-13T04:27:33.677Z\",\n        \"updatedAt\": \"2018-06-13T04:27:35.246Z\"\n    },\n    {\n        \"id\": \"5b209d382e02d860aeb84569\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-13T04:27:36.708Z\",\n        \"updatedAt\": \"2018-06-13T04:27:36.708Z\"\n    },\n    {\n        \"id\": \"5b209d3b2e02d860aeb8456a\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-13T04:27:39.631Z\",\n        \"updatedAt\": \"2018-06-13T04:27:39.631Z\"\n    },\n    {\n        \"id\": \"5b209d422e02d860aeb8456b\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-13T04:27:46.107Z\",\n        \"updatedAt\": \"2018-06-13T04:27:46.107Z\"\n    },\n    {\n        \"id\": \"5b209f972e02d860aeb845b5\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-13T04:37:43.687Z\",\n        \"updatedAt\": \"2018-06-13T04:37:43.687Z\"\n    },\n    {\n        \"id\": \"5b209f992e02d860aeb845b6\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-13T04:37:45.477Z\",\n        \"updatedAt\": \"2018-06-13T04:37:45.477Z\"\n    },\n    {\n        \"id\": \"5b209f9a2e02d860aeb845b7\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-13T04:37:46.893Z\",\n        \"updatedAt\": \"2018-06-13T04:37:46.893Z\"\n    },\n    {\n        \"id\": \"5b209f9c2e02d860aeb845b8\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-13T04:37:48.224Z\",\n        \"updatedAt\": \"2018-06-13T04:37:48.224Z\"\n    },\n    {\n        \"id\": \"5b209f9d2e02d860aeb845b9\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-13T04:37:49.491Z\",\n        \"updatedAt\": \"2018-06-13T04:37:49.491Z\"\n    },\n    {\n        \"id\": \"5b209f9e2e02d860aeb845ba\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-13T04:37:50.967Z\",\n        \"updatedAt\": \"2018-06-13T04:37:50.967Z\"\n    },\n    {\n        \"id\": \"5b209fa02e02d860aeb845bb\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-13T04:37:52.429Z\",\n        \"updatedAt\": \"2018-06-13T04:37:52.429Z\"\n    },\n    {\n        \"id\": \"5b209fab2e02d860aeb845bd\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-13T04:38:03.188Z\",\n        \"updatedAt\": \"2018-06-13T04:38:04.444Z\"\n    },\n    {\n        \"id\": \"5b209fad2e02d860aeb845be\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-13T04:38:05.800Z\",\n        \"updatedAt\": \"2018-06-13T04:38:07.054Z\"\n    },\n    {\n        \"id\": \"5b209fb02e02d860aeb845bf\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-13T04:38:08.307Z\",\n        \"updatedAt\": \"2018-06-13T04:38:09.769Z\"\n    },\n    {\n        \"id\": \"5b209fb32e02d860aeb845c0\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-13T04:38:11.201Z\",\n        \"updatedAt\": \"2018-06-13T04:38:12.598Z\"\n    },\n    {\n        \"id\": \"5b209fb52e02d860aeb845c1\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-13T04:38:13.950Z\",\n        \"updatedAt\": \"2018-06-13T04:38:15.304Z\"\n    },\n    {\n        \"id\": \"5b209fb82e02d860aeb845c2\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-13T04:38:16.974Z\",\n        \"updatedAt\": \"2018-06-13T04:38:18.453Z\"\n    },\n    {\n        \"id\": \"5b209fbb2e02d860aeb845c3\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-13T04:38:19.797Z\",\n        \"updatedAt\": \"2018-06-13T04:38:21.258Z\"\n    },\n    {\n        \"id\": \"5b209fbe2e02d860aeb845c4\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-13T04:38:22.615Z\",\n        \"updatedAt\": \"2018-06-13T04:38:22.615Z\"\n    },\n    {\n        \"id\": \"5b209fc12e02d860aeb845c5\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-13T04:38:25.434Z\",\n        \"updatedAt\": \"2018-06-13T04:38:25.434Z\"\n    },\n    {\n        \"id\": \"5b209fc62e02d860aeb845c6\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-13T04:38:30.713Z\",\n        \"updatedAt\": \"2018-06-13T04:38:30.713Z\"\n    },\n    {\n        \"id\": \"5b20ae082e02d860aeb84693\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-13T05:39:20.097Z\",\n        \"updatedAt\": \"2018-06-13T05:39:20.097Z\"\n    },\n    {\n        \"id\": \"5b20ae092e02d860aeb84694\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-13T05:39:21.129Z\",\n        \"updatedAt\": \"2018-06-13T05:39:21.129Z\"\n    },\n    {\n        \"id\": \"5b20ae0a2e02d860aeb84695\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-13T05:39:22.156Z\",\n        \"updatedAt\": \"2018-06-13T05:39:22.156Z\"\n    },\n    {\n        \"id\": \"5b20ae0b2e02d860aeb84696\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-13T05:39:23.186Z\",\n        \"updatedAt\": \"2018-06-13T05:39:23.186Z\"\n    },\n    {\n        \"id\": \"5b20ae0c2e02d860aeb84697\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-13T05:39:24.211Z\",\n        \"updatedAt\": \"2018-06-13T05:39:24.211Z\"\n    },\n    {\n        \"id\": \"5b20ae0d2e02d860aeb84698\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-13T05:39:25.238Z\",\n        \"updatedAt\": \"2018-06-13T05:39:25.238Z\"\n    },\n    {\n        \"id\": \"5b20ae0e2e02d860aeb84699\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-13T05:39:26.267Z\",\n        \"updatedAt\": \"2018-06-13T05:39:26.267Z\"\n    },\n    {\n        \"id\": \"5b20ae162e02d860aeb8469b\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-13T05:39:34.390Z\",\n        \"updatedAt\": \"2018-06-13T05:39:35.425Z\"\n    },\n    {\n        \"id\": \"5b20ae182e02d860aeb8469c\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-13T05:39:36.458Z\",\n        \"updatedAt\": \"2018-06-13T05:39:37.491Z\"\n    },\n    {\n        \"id\": \"5b20ae1a2e02d860aeb8469d\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-13T05:39:38.522Z\",\n        \"updatedAt\": \"2018-06-13T05:39:39.561Z\"\n    },\n    {\n        \"id\": \"5b20ae1c2e02d860aeb8469e\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-13T05:39:40.608Z\",\n        \"updatedAt\": \"2018-06-13T05:39:41.636Z\"\n    },\n    {\n        \"id\": \"5b20ae1e2e02d860aeb8469f\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-13T05:39:42.663Z\",\n        \"updatedAt\": \"2018-06-13T05:39:43.768Z\"\n    },\n    {\n        \"id\": \"5b20ae202e02d860aeb846a0\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-13T05:39:44.797Z\",\n        \"updatedAt\": \"2018-06-13T05:39:45.832Z\"\n    },\n    {\n        \"id\": \"5b20ae222e02d860aeb846a1\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-13T05:39:46.857Z\",\n        \"updatedAt\": \"2018-06-13T05:39:47.889Z\"\n    },\n    {\n        \"id\": \"5b20ae242e02d860aeb846a2\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-13T05:39:48.914Z\",\n        \"updatedAt\": \"2018-06-13T05:39:48.914Z\"\n    },\n    {\n        \"id\": \"5b20ae262e02d860aeb846a3\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-13T05:39:50.981Z\",\n        \"updatedAt\": \"2018-06-13T05:39:50.981Z\"\n    },\n    {\n        \"id\": \"5b20ae2b2e02d860aeb846a4\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-13T05:39:55.132Z\",\n        \"updatedAt\": \"2018-06-13T05:39:55.132Z\"\n    },\n    {\n        \"id\": \"5b21f3072e02d860aeb84740\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-14T04:45:59.206Z\",\n        \"updatedAt\": \"2018-06-14T04:45:59.206Z\"\n    },\n    {\n        \"id\": \"5b21f3082e02d860aeb84741\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-14T04:46:00.206Z\",\n        \"updatedAt\": \"2018-06-14T04:46:00.206Z\"\n    },\n    {\n        \"id\": \"5b21f3092e02d860aeb84742\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-14T04:46:01.231Z\",\n        \"updatedAt\": \"2018-06-14T04:46:01.231Z\"\n    },\n    {\n        \"id\": \"5b21f30a2e02d860aeb84743\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-14T04:46:02.232Z\",\n        \"updatedAt\": \"2018-06-14T04:46:02.232Z\"\n    },\n    {\n        \"id\": \"5b21f30b2e02d860aeb84744\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-14T04:46:03.232Z\",\n        \"updatedAt\": \"2018-06-14T04:46:03.232Z\"\n    },\n    {\n        \"id\": \"5b21f30c2e02d860aeb84745\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-14T04:46:04.238Z\",\n        \"updatedAt\": \"2018-06-14T04:46:04.238Z\"\n    },\n    {\n        \"id\": \"5b21f30d2e02d860aeb84746\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-14T04:46:05.235Z\",\n        \"updatedAt\": \"2018-06-14T04:46:05.235Z\"\n    },\n    {\n        \"id\": \"5b21f3152e02d860aeb84748\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-14T04:46:13.175Z\",\n        \"updatedAt\": \"2018-06-14T04:46:14.178Z\"\n    },\n    {\n        \"id\": \"5b21f3172e02d860aeb84749\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-14T04:46:15.178Z\",\n        \"updatedAt\": \"2018-06-14T04:46:16.233Z\"\n    },\n    {\n        \"id\": \"5b21f3192e02d860aeb8474a\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-14T04:46:17.243Z\",\n        \"updatedAt\": \"2018-06-14T04:46:18.247Z\"\n    },\n    {\n        \"id\": \"5b21f31b2e02d860aeb8474b\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-14T04:46:19.259Z\",\n        \"updatedAt\": \"2018-06-14T04:46:20.284Z\"\n    },\n    {\n        \"id\": \"5b21f31d2e02d860aeb8474c\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-14T04:46:21.306Z\",\n        \"updatedAt\": \"2018-06-14T04:46:22.354Z\"\n    },\n    {\n        \"id\": \"5b21f31f2e02d860aeb8474d\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-14T04:46:23.361Z\",\n        \"updatedAt\": \"2018-06-14T04:46:24.361Z\"\n    },\n    {\n        \"id\": \"5b21f3212e02d860aeb8474e\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-14T04:46:25.366Z\",\n        \"updatedAt\": \"2018-06-14T04:46:26.392Z\"\n    },\n    {\n        \"id\": \"5b21f3232e02d860aeb8474f\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-14T04:46:27.409Z\",\n        \"updatedAt\": \"2018-06-14T04:46:27.409Z\"\n    },\n    {\n        \"id\": \"5b21f3252e02d860aeb84750\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-14T04:46:29.433Z\",\n        \"updatedAt\": \"2018-06-14T04:46:29.433Z\"\n    },\n    {\n        \"id\": \"5b21f3292e02d860aeb84751\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-14T04:46:33.344Z\",\n        \"updatedAt\": \"2018-06-14T04:46:33.344Z\"\n    },\n    {\n        \"id\": \"5b2203452e02d860aeb848da\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-14T05:55:17.603Z\",\n        \"updatedAt\": \"2018-06-14T05:55:17.603Z\"\n    },\n    {\n        \"id\": \"5b2203462e02d860aeb848db\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-14T05:55:18.621Z\",\n        \"updatedAt\": \"2018-06-14T05:55:18.621Z\"\n    },\n    {\n        \"id\": \"5b2203472e02d860aeb848dc\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-14T05:55:19.634Z\",\n        \"updatedAt\": \"2018-06-14T05:55:19.634Z\"\n    },\n    {\n        \"id\": \"5b2203482e02d860aeb848dd\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-14T05:55:20.656Z\",\n        \"updatedAt\": \"2018-06-14T05:55:20.656Z\"\n    },\n    {\n        \"id\": \"5b2203492e02d860aeb848de\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-14T05:55:21.723Z\",\n        \"updatedAt\": \"2018-06-14T05:55:21.723Z\"\n    },\n    {\n        \"id\": \"5b22034a2e02d860aeb848df\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-14T05:55:22.744Z\",\n        \"updatedAt\": \"2018-06-14T05:55:22.744Z\"\n    },\n    {\n        \"id\": \"5b22034b2e02d860aeb848e0\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-14T05:55:23.755Z\",\n        \"updatedAt\": \"2018-06-14T05:55:23.755Z\"\n    },\n    {\n        \"id\": \"5b2203d52e02d860aeb8493a\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-14T05:57:41.949Z\",\n        \"updatedAt\": \"2018-06-14T05:57:42.955Z\"\n    },\n    {\n        \"id\": \"5b2203d72e02d860aeb8493b\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-14T05:57:43.967Z\",\n        \"updatedAt\": \"2018-06-14T05:57:44.984Z\"\n    },\n    {\n        \"id\": \"5b2203da2e02d860aeb8493c\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-14T05:57:46.040Z\",\n        \"updatedAt\": \"2018-06-14T05:57:47.059Z\"\n    },\n    {\n        \"id\": \"5b2203dc2e02d860aeb8493d\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-14T05:57:48.071Z\",\n        \"updatedAt\": \"2018-06-14T05:57:49.104Z\"\n    },\n    {\n        \"id\": \"5b2203de2e02d860aeb8493e\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-14T05:57:50.177Z\",\n        \"updatedAt\": \"2018-06-14T05:57:51.187Z\"\n    },\n    {\n        \"id\": \"5b2203e02e02d860aeb8493f\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-14T05:57:52.204Z\",\n        \"updatedAt\": \"2018-06-14T05:57:53.234Z\"\n    },\n    {\n        \"id\": \"5b2203e22e02d860aeb84940\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-14T05:57:54.250Z\",\n        \"updatedAt\": \"2018-06-14T05:57:55.307Z\"\n    },\n    {\n        \"id\": \"5b2203e42e02d860aeb84941\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-14T05:57:56.326Z\",\n        \"updatedAt\": \"2018-06-14T05:57:56.326Z\"\n    },\n    {\n        \"id\": \"5b2204d82e02d860aeb849b7\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-14T06:02:00.276Z\",\n        \"updatedAt\": \"2018-06-14T06:02:00.276Z\"\n    },\n    {\n        \"id\": \"5b2204dc2e02d860aeb849b8\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-14T06:02:04.305Z\",\n        \"updatedAt\": \"2018-06-14T06:02:04.305Z\"\n    },\n    {\n        \"id\": \"5b2344a52e02d860aeb84c36\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-15T04:46:29.523Z\",\n        \"updatedAt\": \"2018-06-15T04:46:29.523Z\"\n    },\n    {\n        \"id\": \"5b2344a62e02d860aeb84c37\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-15T04:46:30.534Z\",\n        \"updatedAt\": \"2018-06-15T04:46:30.534Z\"\n    },\n    {\n        \"id\": \"5b2344a72e02d860aeb84c38\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-15T04:46:31.537Z\",\n        \"updatedAt\": \"2018-06-15T04:46:31.537Z\"\n    },\n    {\n        \"id\": \"5b2344a82e02d860aeb84c39\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-15T04:46:32.550Z\",\n        \"updatedAt\": \"2018-06-15T04:46:32.550Z\"\n    },\n    {\n        \"id\": \"5b2344a92e02d860aeb84c3a\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-15T04:46:33.553Z\",\n        \"updatedAt\": \"2018-06-15T04:46:33.553Z\"\n    },\n    {\n        \"id\": \"5b2344aa2e02d860aeb84c3b\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-15T04:46:34.555Z\",\n        \"updatedAt\": \"2018-06-15T04:46:34.555Z\"\n    },\n    {\n        \"id\": \"5b2344ab2e02d860aeb84c3c\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-15T04:46:35.564Z\",\n        \"updatedAt\": \"2018-06-15T04:46:35.564Z\"\n    },\n    {\n        \"id\": \"5b2344b32e02d860aeb84c3e\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-15T04:46:43.541Z\",\n        \"updatedAt\": \"2018-06-15T04:46:44.549Z\"\n    },\n    {\n        \"id\": \"5b2344b52e02d860aeb84c3f\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-15T04:46:45.553Z\",\n        \"updatedAt\": \"2018-06-15T04:46:46.565Z\"\n    },\n    {\n        \"id\": \"5b2344b72e02d860aeb84c40\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-15T04:46:47.569Z\",\n        \"updatedAt\": \"2018-06-15T04:46:48.577Z\"\n    },\n    {\n        \"id\": \"5b2344b92e02d860aeb84c41\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-15T04:46:49.579Z\",\n        \"updatedAt\": \"2018-06-15T04:46:50.585Z\"\n    },\n    {\n        \"id\": \"5b2344bb2e02d860aeb84c42\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-15T04:46:51.596Z\",\n        \"updatedAt\": \"2018-06-15T04:46:52.600Z\"\n    },\n    {\n        \"id\": \"5b2344bd2e02d860aeb84c43\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-15T04:46:53.607Z\",\n        \"updatedAt\": \"2018-06-15T04:46:54.618Z\"\n    },\n    {\n        \"id\": \"5b2344bf2e02d860aeb84c44\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-15T04:46:55.639Z\",\n        \"updatedAt\": \"2018-06-15T04:46:56.650Z\"\n    },\n    {\n        \"id\": \"5b2344c12e02d860aeb84c45\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-15T04:46:57.654Z\",\n        \"updatedAt\": \"2018-06-15T04:46:57.654Z\"\n    },\n    {\n        \"id\": \"5b2344c32e02d860aeb84c46\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-15T04:46:59.706Z\",\n        \"updatedAt\": \"2018-06-15T04:46:59.706Z\"\n    },\n    {\n        \"id\": \"5b2344c72e02d860aeb84c47\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-15T04:47:03.639Z\",\n        \"updatedAt\": \"2018-06-15T04:47:03.639Z\"\n    },\n    {\n        \"id\": \"5b2768712e02d876156bf6e4\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-18T08:08:17.366Z\",\n        \"updatedAt\": \"2018-06-18T08:08:17.366Z\"\n    },\n    {\n        \"id\": \"5b2768722e02d876156bf6e5\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-18T08:08:18.885Z\",\n        \"updatedAt\": \"2018-06-18T08:08:18.885Z\"\n    },\n    {\n        \"id\": \"5b2768742e02d876156bf6e6\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-18T08:08:20.667Z\",\n        \"updatedAt\": \"2018-06-18T08:08:20.667Z\"\n    },\n    {\n        \"id\": \"5b2768762e02d876156bf6e7\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-18T08:08:22.324Z\",\n        \"updatedAt\": \"2018-06-18T08:08:22.324Z\"\n    },\n    {\n        \"id\": \"5b2768772e02d876156bf6e8\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-18T08:08:23.850Z\",\n        \"updatedAt\": \"2018-06-18T08:08:23.850Z\"\n    },\n    {\n        \"id\": \"5b2768792e02d876156bf6e9\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-18T08:08:25.455Z\",\n        \"updatedAt\": \"2018-06-18T08:08:25.455Z\"\n    },\n    {\n        \"id\": \"5b27687a2e02d876156bf6ea\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-18T08:08:26.903Z\",\n        \"updatedAt\": \"2018-06-18T08:08:26.903Z\"\n    },\n    {\n        \"id\": \"5b27694a2e02d876156bf744\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-18T08:11:54.866Z\",\n        \"updatedAt\": \"2018-06-18T08:11:55.907Z\"\n    },\n    {\n        \"id\": \"5b27694d2e02d876156bf745\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-18T08:11:57.015Z\",\n        \"updatedAt\": \"2018-06-18T08:11:58.048Z\"\n    },\n    {\n        \"id\": \"5b27694f2e02d876156bf746\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-18T08:11:59.056Z\",\n        \"updatedAt\": \"2018-06-18T08:12:00.212Z\"\n    },\n    {\n        \"id\": \"5b2769512e02d876156bf747\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-18T08:12:01.307Z\",\n        \"updatedAt\": \"2018-06-18T08:12:02.744Z\"\n    },\n    {\n        \"id\": \"5b2769542e02d876156bf748\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-18T08:12:04.341Z\",\n        \"updatedAt\": \"2018-06-18T08:12:05.533Z\"\n    },\n    {\n        \"id\": \"5b2769562e02d876156bf749\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-18T08:12:06.960Z\",\n        \"updatedAt\": \"2018-06-18T08:12:08.884Z\"\n    },\n    {\n        \"id\": \"5b27695a2e02d876156bf74a\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-18T08:12:10.467Z\",\n        \"updatedAt\": \"2018-06-18T08:12:11.725Z\"\n    },\n    {\n        \"id\": \"5b27695c2e02d876156bf74b\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-18T08:12:12.942Z\",\n        \"updatedAt\": \"2018-06-18T08:12:12.942Z\"\n    },\n    {\n        \"id\": \"5b276abd2e02d876156bf7c1\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-18T08:18:05.987Z\",\n        \"updatedAt\": \"2018-06-18T08:18:05.987Z\"\n    },\n    {\n        \"id\": \"5b276ac12e02d876156bf7c2\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-18T08:18:09.661Z\",\n        \"updatedAt\": \"2018-06-18T08:18:09.661Z\"\n    },\n    {\n        \"id\": \"5b2fcd622e02d876156c033f\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-24T16:57:06.279Z\",\n        \"updatedAt\": \"2018-06-24T16:57:06.279Z\"\n    },\n    {\n        \"id\": \"5b2fcd632e02d876156c0340\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-24T16:57:07.997Z\",\n        \"updatedAt\": \"2018-06-24T16:57:07.997Z\"\n    },\n    {\n        \"id\": \"5b2fcd652e02d876156c0341\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-24T16:57:09.764Z\",\n        \"updatedAt\": \"2018-06-24T16:57:09.764Z\"\n    },\n    {\n        \"id\": \"5b2fcd672e02d876156c0342\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-24T16:57:11.598Z\",\n        \"updatedAt\": \"2018-06-24T16:57:11.598Z\"\n    },\n    {\n        \"id\": \"5b2fcd692e02d876156c0343\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-24T16:57:13.488Z\",\n        \"updatedAt\": \"2018-06-24T16:57:13.488Z\"\n    },\n    {\n        \"id\": \"5b2fcd6a2e02d876156c0344\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-24T16:57:14.909Z\",\n        \"updatedAt\": \"2018-06-24T16:57:14.909Z\"\n    },\n    {\n        \"id\": \"5b2fcd6c2e02d876156c0345\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-24T16:57:16.583Z\",\n        \"updatedAt\": \"2018-06-24T16:57:16.583Z\"\n    },\n    {\n        \"id\": \"5b2fcd7a2e02d876156c0347\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-24T16:57:30.953Z\",\n        \"updatedAt\": \"2018-06-24T16:57:32.729Z\"\n    },\n    {\n        \"id\": \"5b2fcd7e2e02d876156c0348\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-24T16:57:34.833Z\",\n        \"updatedAt\": \"2018-06-24T16:57:36.139Z\"\n    },\n    {\n        \"id\": \"5b2fcd812e02d876156c0349\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-24T16:57:37.789Z\",\n        \"updatedAt\": \"2018-06-24T16:57:39.689Z\"\n    },\n    {\n        \"id\": \"5b2fcd852e02d876156c034a\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-24T16:57:41.633Z\",\n        \"updatedAt\": \"2018-06-24T16:57:42.924Z\"\n    },\n    {\n        \"id\": \"5b2fcd882e02d876156c034b\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-24T16:57:44.373Z\",\n        \"updatedAt\": \"2018-06-24T16:57:46.054Z\"\n    },\n    {\n        \"id\": \"5b2fcd8c2e02d876156c034c\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-24T16:57:48.003Z\",\n        \"updatedAt\": \"2018-06-24T16:57:49.419Z\"\n    },\n    {\n        \"id\": \"5b2fcd8e2e02d876156c034d\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-24T16:57:50.968Z\",\n        \"updatedAt\": \"2018-06-24T16:57:52.464Z\"\n    },\n    {\n        \"id\": \"5b2fcd922e02d876156c034e\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-24T16:57:54.329Z\",\n        \"updatedAt\": \"2018-06-24T16:57:54.329Z\"\n    },\n    {\n        \"id\": \"5b2fcd952e02d876156c034f\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-24T16:57:57.964Z\",\n        \"updatedAt\": \"2018-06-24T16:57:57.964Z\"\n    },\n    {\n        \"id\": \"5b2fcd9c2e02d876156c0350\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-24T16:58:04.208Z\",\n        \"updatedAt\": \"2018-06-24T16:58:04.208Z\"\n    },\n    {\n        \"id\": \"5b34fc4b2e02d81b938a6b7b\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-28T15:18:35.568Z\",\n        \"updatedAt\": \"2018-06-28T15:18:35.568Z\"\n    },\n    {\n        \"id\": \"5b34fc4c2e02d81b938a6b7c\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-28T15:18:36.903Z\",\n        \"updatedAt\": \"2018-06-28T15:18:36.903Z\"\n    },\n    {\n        \"id\": \"5b34fc4e2e02d81b938a6b7d\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-28T15:18:38.138Z\",\n        \"updatedAt\": \"2018-06-28T15:18:38.138Z\"\n    },\n    {\n        \"id\": \"5b34fc4f2e02d81b938a6b7e\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-28T15:18:39.412Z\",\n        \"updatedAt\": \"2018-06-28T15:18:39.412Z\"\n    },\n    {\n        \"id\": \"5b34fc502e02d81b938a6b7f\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-28T15:18:40.605Z\",\n        \"updatedAt\": \"2018-06-28T15:18:40.605Z\"\n    },\n    {\n        \"id\": \"5b34fc512e02d81b938a6b80\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-28T15:18:41.830Z\",\n        \"updatedAt\": \"2018-06-28T15:18:41.830Z\"\n    },\n    {\n        \"id\": \"5b34fc532e02d81b938a6b81\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-28T15:18:43.162Z\",\n        \"updatedAt\": \"2018-06-28T15:18:43.162Z\"\n    },\n    {\n        \"id\": \"5b34fc612e02d81b938a6b83\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-28T15:18:57.626Z\",\n        \"updatedAt\": \"2018-06-28T15:18:58.984Z\"\n    },\n    {\n        \"id\": \"5b34fc642e02d81b938a6b84\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-28T15:19:00.296Z\",\n        \"updatedAt\": \"2018-06-28T15:19:01.703Z\"\n    },\n    {\n        \"id\": \"5b34fc672e02d81b938a6b85\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-28T15:19:03.286Z\",\n        \"updatedAt\": \"2018-06-28T15:19:04.607Z\"\n    },\n    {\n        \"id\": \"5b34fc692e02d81b938a6b86\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-28T15:19:05.905Z\",\n        \"updatedAt\": \"2018-06-28T15:19:07.152Z\"\n    },\n    {\n        \"id\": \"5b34fc6c2e02d81b938a6b87\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-28T15:19:08.470Z\",\n        \"updatedAt\": \"2018-06-28T15:19:09.872Z\"\n    },\n    {\n        \"id\": \"5b34fc6f2e02d81b938a6b88\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-28T15:19:11.299Z\",\n        \"updatedAt\": \"2018-06-28T15:19:12.612Z\"\n    },\n    {\n        \"id\": \"5b34fc722e02d81b938a6b89\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-28T15:19:14.000Z\",\n        \"updatedAt\": \"2018-06-28T15:19:15.424Z\"\n    },\n    {\n        \"id\": \"5b34fc742e02d81b938a6b8a\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-28T15:19:16.649Z\",\n        \"updatedAt\": \"2018-06-28T15:19:16.649Z\"\n    },\n    {\n        \"id\": \"5b34fc7a2e02d81b938a6b8b\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-28T15:19:22.836Z\",\n        \"updatedAt\": \"2018-06-28T15:19:22.836Z\"\n    },\n    {\n        \"id\": \"5b34fc802e02d81b938a6b8c\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-28T15:19:28.480Z\",\n        \"updatedAt\": \"2018-06-28T15:19:28.480Z\"\n    },\n    {\n        \"id\": \"5b35a7112e02d81b938a6b8d\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-29T03:27:13.717Z\",\n        \"updatedAt\": \"2018-06-29T03:27:13.717Z\"\n    },\n    {\n        \"id\": \"5b35a8522e02d81b938a6bbd\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-29T03:32:34.808Z\",\n        \"updatedAt\": \"2018-06-29T03:32:34.808Z\"\n    },\n    {\n        \"id\": \"5b35a9242e02d81b938a6bc9\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-29T03:36:04.756Z\",\n        \"updatedAt\": \"2018-06-29T03:36:04.756Z\"\n    },\n    {\n        \"id\": \"5b35a9ae2e02d81b938a6bdf\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-29T03:38:22.840Z\",\n        \"updatedAt\": \"2018-06-29T03:38:22.840Z\"\n    },\n    {\n        \"id\": \"5b35a9b02e02d81b938a6be0\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-29T03:38:24.195Z\",\n        \"updatedAt\": \"2018-06-29T03:38:24.195Z\"\n    },\n    {\n        \"id\": \"5b35a9b12e02d81b938a6be1\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-29T03:38:25.670Z\",\n        \"updatedAt\": \"2018-06-29T03:38:25.670Z\"\n    },\n    {\n        \"id\": \"5b35a9b32e02d81b938a6be2\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-29T03:38:27.141Z\",\n        \"updatedAt\": \"2018-06-29T03:38:27.141Z\"\n    },\n    {\n        \"id\": \"5b35a9b42e02d81b938a6be3\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-29T03:38:28.806Z\",\n        \"updatedAt\": \"2018-06-29T03:38:28.806Z\"\n    },\n    {\n        \"id\": \"5b35a9b62e02d81b938a6be4\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-29T03:38:30.230Z\",\n        \"updatedAt\": \"2018-06-29T03:38:30.230Z\"\n    },\n    {\n        \"id\": \"5b35a9b72e02d81b938a6be5\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-29T03:38:31.700Z\",\n        \"updatedAt\": \"2018-06-29T03:38:31.700Z\"\n    },\n    {\n        \"id\": \"5b35ab9a2e02d81b938a6c1d\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-29T03:46:34.066Z\",\n        \"updatedAt\": \"2018-06-29T03:46:35.438Z\"\n    },\n    {\n        \"id\": \"5b35ab9d2e02d81b938a6c1e\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-29T03:46:37.244Z\",\n        \"updatedAt\": \"2018-06-29T03:46:38.681Z\"\n    },\n    {\n        \"id\": \"5b35aba02e02d81b938a6c1f\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-29T03:46:40.140Z\",\n        \"updatedAt\": \"2018-06-29T03:46:42.076Z\"\n    },\n    {\n        \"id\": \"5b35aba32e02d81b938a6c20\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-29T03:46:43.469Z\",\n        \"updatedAt\": \"2018-06-29T03:46:44.916Z\"\n    },\n    {\n        \"id\": \"5b35aba62e02d81b938a6c21\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-29T03:46:46.394Z\",\n        \"updatedAt\": \"2018-06-29T03:46:48.121Z\"\n    },\n    {\n        \"id\": \"5b35aba92e02d81b938a6c22\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-29T03:46:49.470Z\",\n        \"updatedAt\": \"2018-06-29T03:46:50.906Z\"\n    },\n    {\n        \"id\": \"5b35abac2e02d81b938a6c23\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-29T03:46:52.545Z\",\n        \"updatedAt\": \"2018-06-29T03:46:54.157Z\"\n    },\n    {\n        \"id\": \"5b35b8c22e02d81b938a6ca9\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-29T04:42:42.185Z\",\n        \"updatedAt\": \"2018-06-29T04:42:42.185Z\"\n    },\n    {\n        \"id\": \"5b35b8c32e02d81b938a6caa\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-29T04:42:43.172Z\",\n        \"updatedAt\": \"2018-06-29T04:42:43.172Z\"\n    },\n    {\n        \"id\": \"5b35b8c42e02d81b938a6cab\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-29T04:42:44.172Z\",\n        \"updatedAt\": \"2018-06-29T04:42:44.172Z\"\n    },\n    {\n        \"id\": \"5b35b8c52e02d81b938a6cac\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-29T04:42:45.157Z\",\n        \"updatedAt\": \"2018-06-29T04:42:45.157Z\"\n    },\n    {\n        \"id\": \"5b35b8c62e02d81b938a6cad\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-29T04:42:46.142Z\",\n        \"updatedAt\": \"2018-06-29T04:42:46.142Z\"\n    },\n    {\n        \"id\": \"5b35b8c72e02d81b938a6cae\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-29T04:42:47.132Z\",\n        \"updatedAt\": \"2018-06-29T04:42:47.132Z\"\n    },\n    {\n        \"id\": \"5b35b8c82e02d81b938a6caf\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-29T04:42:48.125Z\",\n        \"updatedAt\": \"2018-06-29T04:42:48.125Z\"\n    },\n    {\n        \"id\": \"5b35b8cf2e02d81b938a6cb1\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-29T04:42:55.975Z\",\n        \"updatedAt\": \"2018-06-29T04:42:56.982Z\"\n    },\n    {\n        \"id\": \"5b35b8d12e02d81b938a6cb2\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-29T04:42:57.972Z\",\n        \"updatedAt\": \"2018-06-29T04:42:58.985Z\"\n    },\n    {\n        \"id\": \"5b35b8d42e02d81b938a6cb3\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-29T04:43:00.045Z\",\n        \"updatedAt\": \"2018-06-29T04:43:01.034Z\"\n    },\n    {\n        \"id\": \"5b35b8d62e02d81b938a6cb4\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-29T04:43:02.020Z\",\n        \"updatedAt\": \"2018-06-29T04:43:03.012Z\"\n    },\n    {\n        \"id\": \"5b35b8d82e02d81b938a6cb5\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-29T04:43:04.011Z\",\n        \"updatedAt\": \"2018-06-29T04:43:05.000Z\"\n    },\n    {\n        \"id\": \"5b35b8d92e02d81b938a6cb6\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-29T04:43:05.988Z\",\n        \"updatedAt\": \"2018-06-29T04:43:06.976Z\"\n    },\n    {\n        \"id\": \"5b35b8db2e02d81b938a6cb7\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-29T04:43:07.960Z\",\n        \"updatedAt\": \"2018-06-29T04:43:08.949Z\"\n    },\n    {\n        \"id\": \"5b35b8dd2e02d81b938a6cb8\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-29T04:43:09.936Z\",\n        \"updatedAt\": \"2018-06-29T04:43:09.936Z\"\n    },\n    {\n        \"id\": \"5b35b8df2e02d81b938a6cb9\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-29T04:43:11.930Z\",\n        \"updatedAt\": \"2018-06-29T04:43:11.930Z\"\n    },\n    {\n        \"id\": \"5b35b8e32e02d81b938a6cba\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-29T04:43:15.764Z\",\n        \"updatedAt\": \"2018-06-29T04:43:15.764Z\"\n    },\n    {\n        \"id\": \"5b361a3d2e02d81b938a6d40\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-29T11:38:37.988Z\",\n        \"updatedAt\": \"2018-06-29T11:38:37.988Z\"\n    },\n    {\n        \"id\": \"5b361a3e2e02d81b938a6d41\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-29T11:38:38.975Z\",\n        \"updatedAt\": \"2018-06-29T11:38:38.975Z\"\n    },\n    {\n        \"id\": \"5b361a3f2e02d81b938a6d42\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-29T11:38:39.965Z\",\n        \"updatedAt\": \"2018-06-29T11:38:39.965Z\"\n    },\n    {\n        \"id\": \"5b361a402e02d81b938a6d43\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-29T11:38:40.956Z\",\n        \"updatedAt\": \"2018-06-29T11:38:40.956Z\"\n    },\n    {\n        \"id\": \"5b361a412e02d81b938a6d44\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-29T11:38:41.942Z\",\n        \"updatedAt\": \"2018-06-29T11:38:41.942Z\"\n    },\n    {\n        \"id\": \"5b361a422e02d81b938a6d45\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-29T11:38:42.968Z\",\n        \"updatedAt\": \"2018-06-29T11:38:42.968Z\"\n    },\n    {\n        \"id\": \"5b361a432e02d81b938a6d46\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-29T11:38:43.991Z\",\n        \"updatedAt\": \"2018-06-29T11:38:43.991Z\"\n    },\n    {\n        \"id\": \"5b361a4b2e02d81b938a6d48\",\n        \"name\": \"API Deck\",\n        \"description\": \"Test Description for category1\",\n        \"createdAt\": \"2018-06-29T11:38:51.771Z\",\n        \"updatedAt\": \"2018-06-29T11:38:52.757Z\"\n    },\n    {\n        \"id\": \"5b361a4d2e02d81b938a6d49\",\n        \"name\": \"123456.987\",\n        \"description\": \"Test Description for category2\",\n        \"createdAt\": \"2018-06-29T11:38:53.745Z\",\n        \"updatedAt\": \"2018-06-29T11:38:54.739Z\"\n    },\n    {\n        \"id\": \"5b361a4f2e02d81b938a6d4a\",\n        \"name\": \"API89 Name1\",\n        \"description\": \"Test Description for category3\",\n        \"createdAt\": \"2018-06-29T11:38:55.726Z\",\n        \"updatedAt\": \"2018-06-29T11:38:56.716Z\"\n    },\n    {\n        \"id\": \"5b361a512e02d81b938a6d4b\",\n        \"name\": \"API Deck3\",\n        \"description\": \"API Deck\",\n        \"createdAt\": \"2018-06-29T11:38:57.717Z\",\n        \"updatedAt\": \"2018-06-29T11:38:58.711Z\"\n    },\n    {\n        \"id\": \"5b361a532e02d81b938a6d4c\",\n        \"name\": \"API Deck4\",\n        \"description\": \"123456.987\",\n        \"createdAt\": \"2018-06-29T11:38:59.695Z\",\n        \"updatedAt\": \"2018-06-29T11:39:00.680Z\"\n    },\n    {\n        \"id\": \"5b361a552e02d81b938a6d4d\",\n        \"name\": \"API Deck5\",\n        \"description\": \"API89 Name1\",\n        \"createdAt\": \"2018-06-29T11:39:01.672Z\",\n        \"updatedAt\": \"2018-06-29T11:39:02.660Z\"\n    },\n    {\n        \"id\": \"5b361a572e02d81b938a6d4e\",\n        \"name\": \"API Deck6\",\n        \"description\": \"\",\n        \"createdAt\": \"2018-06-29T11:39:03.644Z\",\n        \"updatedAt\": \"2018-06-29T11:39:04.630Z\"\n    },\n    {\n        \"id\": \"5b361a592e02d81b938a6d4f\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-29T11:39:05.616Z\",\n        \"updatedAt\": \"2018-06-29T11:39:05.616Z\"\n    },\n    {\n        \"id\": \"5b361a5b2e02d81b938a6d50\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-29T11:39:07.604Z\",\n        \"updatedAt\": \"2018-06-29T11:39:07.604Z\"\n    },\n    {\n        \"id\": \"5b361a5f2e02d81b938a6d51\",\n        \"name\": \"Science\",\n        \"description\": \"Always learning\",\n        \"createdAt\": \"2018-06-29T11:39:11.447Z\",\n        \"updatedAt\": \"2018-06-29T11:39:11.447Z\"\n    }\n]\n\n",
									"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Sat, 30 Jun 2018 12:08:26 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"200\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 2,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		},
		{
			"specHeading": "CRUD in One Scenario Specification",
			"fileName": "C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\CRUD in One Scenario.spec",
			"tags": [],
			"executionTime": 31850,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "CRUD operation for a sku and get all the 9 questions in a deck",
					"tags": [],
					"executionTime": 31850,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Create SKU\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 214,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8090/api/store/sku\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#skuId",
											"sampleSkuId1"
										]
									},
									{
										"cells": [
											"#price",
											"1.19"
										]
									},
									{
										"cells": [
											"#type",
											"DECK"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 167,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\n \"skuId\":\"sampleSkuId1\",\n \"price\":1.19,\n \"type\":\"DECK\"\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1540,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/store/sku\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 819ms\n\n",
									"Response is: \n{\n    \"id\": \"5b3772be2e02d81b938a6d5b\",\n    \"skuId\": \"sampleSkuId1\",\n    \"price\": 1.19,\n    \"type\": \"DECK\"\n}\n\n",
									"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Sat, 30 Jun 2018 12:08:30 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.skuId",
											"sampleSkuId1"
										]
									},
									{
										"cells": [
											"$.price",
											"1.19"
										]
									},
									{
										"cells": [
											"$.type",
											"DECK"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"skuUUID1",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"\"5b3772be2e02d81b938a6d5b\" is successfully saved as a text in Scenario Data Store [skuUUID1]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a sku",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1991,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create SKU\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 395,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/store/sku\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#skuId",
													"AAPIPH5-DC2-Y"
												]
											},
											{
												"cells": [
													"#price",
													"3.99"
												]
											},
											{
												"cells": [
													"#type",
													"DECK"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 137,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n \"skuId\":\"AAPIPH5-DC2-Y\",\n \"price\":3.99,\n \"type\":\"DECK\"\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1458,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/store/sku\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 857ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3772c02e02d81b938a6d5c\",\n    \"skuId\": \"AAPIPH5-DC2-Y\",\n    \"price\": 3.99,\n    \"type\": \"DECK\"\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Sat, 30 Jun 2018 12:08:32 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the JSON Path Assertions for the response should be equal to the following",
									"table": {
										"headers": [
											"JSON Path",
											"Expected Result"
										],
										"rows": [
											{
												"cells": [
													"$.skuId",
													"AAPIPH5-DC2-Y"
												]
											},
											{
												"cells": [
													"$.price",
													"3.99"
												]
											},
											{
												"cells": [
													"$.type",
													"DECK"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"skuUUID2",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"\"5b3772c02e02d81b938a6d5c\" is successfully saved as a text in Scenario Data Store [skuUUID2]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Edit SKU\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 218,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8090/api/store/sku\n\n",
									"HTTP Method is: PUT\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters using data stores as follows",
							"table": {
								"headers": [
									"Path Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"skuUUID",
											"y",
											"scenario",
											"skuUUID2",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [skuUUID2] is: \"5b3772c02e02d81b938a6d5c\"\n\n",
									"Path parameters which will append to the request URL:/5b3772c02e02d81b938a6d5c\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#skuId",
											"sampleSkuId2"
										]
									},
									{
										"cells": [
											"#price",
											"1.07"
										]
									},
									{
										"cells": [
											"#type",
											"DECK"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 103,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\n \"skuId\":\"sampleSkuId2\",\n \"price\":1.07,\n \"type\":\"DECK\"\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1487,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/store/sku/5b3772c02e02d81b938a6d5c\n\n",
									"HTTP Method is: PUT\n\n",
									"Response Time is: 822ms\n\n",
									"Response is: \n{\n    \"id\": \"5b3772c02e02d81b938a6d5c\",\n    \"skuId\": \"sampleSkuId2\",\n    \"price\": 1.07,\n    \"type\": \"DECK\"\n}\n\n",
									"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Sat, 30 Jun 2018 12:08:34 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"200\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.skuId",
											"sampleSkuId2"
										]
									},
									{
										"cells": [
											"$.price",
											"1.07"
										]
									},
									{
										"cells": [
											"$.type",
											"DECK"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Delete SKU\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 221,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8090/api/store/sku\n\n",
									"HTTP Method is: DELETE\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters using data stores as follows",
							"table": {
								"headers": [
									"Path Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"skuUUID",
											"y",
											"scenario",
											"skuUUID1",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [skuUUID1] is: \"5b3772be2e02d81b938a6d5b\"\n\n",
									"Path parameters which will append to the request URL:/5b3772be2e02d81b938a6d5b\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1460,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/store/sku/5b3772be2e02d81b938a6d5b\n\n",
									"HTTP Method is: DELETE\n\n",
									"Response Time is: 799ms\n\n",
									"Response is Empty\n\n",
									"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nDate=Sat, 30 Jun 2018 12:08:36 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"204\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Delete SKU\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 255,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8090/api/store/sku\n\n",
									"HTTP Method is: DELETE\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters using data stores as follows",
							"table": {
								"headers": [
									"Path Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"skuUUID",
											"y",
											"scenario",
											"skuUUID2",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [skuUUID2] is: \"5b3772c02e02d81b938a6d5c\"\n\n",
									"Path parameters which will append to the request URL:/5b3772c02e02d81b938a6d5c\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1530,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/store/sku/5b3772c02e02d81b938a6d5c\n\n",
									"HTTP Method is: DELETE\n\n",
									"Response Time is: 877ms\n\n",
									"Response is Empty\n\n",
									"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nDate=Sat, 30 Jun 2018 12:08:38 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"204\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a my deck with all types of 9 questions",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 19618,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Aggregation Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 257,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8085/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"\"null\""
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"0"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"osan"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 94,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": null,\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00\",\n    \"notificationFrequency\": \"0\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"osan\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1577,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8085/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 871ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3772c80b9f171bcb85f170\",\n    \"title\": \"API Deck3\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00\",\n        \"notificationFrequency\": \"0\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530360520325,\n        \"updatedAt\": 1530360520325\n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"osan\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-06-30T12:08:40.325Z\",\n    \"updatedAt\": \"2018-06-30T12:08:40.326Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"examReminder\": {\n        \"startDate\": 1510811542000,\n        \"endDate\": 1512021142000,\n        \"time\": \"08:00\"\n    },\n    \"expert\": false\n}\n\n",
											"Response Headers are: \ncorrelation-id=153b731b-dabb-40b5-b623-741ebe25bd3e\nX-Application-Context=application:qa:8090\nTransfer-Encoding=chunked\nDate=Sat, 30 Jun 2018 12:08:40 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And save the JSON Path values in the response inside the data stores",
									"table": {
										"headers": [
											"DataStore Type",
											"Variable Name",
											"Value To Be Stored"
										],
										"rows": [
											{
												"cells": [
													"spec",
													"myDeckIdWith9Questions",
													"$.id"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 4,
										"skippedReason": "",
										"messages": [
											"\"5b3772c80b9f171bcb85f170\" is successfully saved as a text in Specification Data Store [myDeckIdWith9Questions]"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create MCQ Type Question using Aggregation Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 214,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8085/api/questions\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes using data stores as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Path Value"
										],
										"rows": [
											{
												"cells": [
													"#creatorId",
													"n",
													"",
													"",
													"osanda12"
												]
											},
											{
												"cells": [
													"#creatorPlatform",
													"n",
													"",
													"",
													"Web"
												]
											},
											{
												"cells": [
													"#creatoredSource",
													"n",
													"",
													"",
													"App"
												]
											},
											{
												"cells": [
													"#creatoredType",
													"n",
													"",
													"",
													"Manual"
												]
											},
											{
												"cells": [
													"#isDeleted",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#tempQuestionId",
													"n",
													"",
													"",
													"testId"
												]
											},
											{
												"cells": [
													"#deckId",
													"y",
													"spec",
													"myDeckIdWith9Questions",
													"N/A"
												]
											},
											{
												"cells": [
													"#kind",
													"n",
													"",
													"",
													"MULTIPLE_CHOICE"
												]
											},
											{
												"cells": [
													"#learningObjectives",
													"n",
													"",
													"",
													"learningObjective1"
												]
											},
											{
												"cells": [
													"#imageUrl",
													"n",
													"",
													"",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#media",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#questionPrompt",
													"n",
													"",
													"",
													"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _"
												]
											},
											{
												"cells": [
													"#promptType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#timeout",
													"n",
													"",
													"",
													"60"
												]
											},
											{
												"cells": [
													"#rationale",
													"n",
													"",
													"",
													"rationale"
												]
											},
											{
												"cells": [
													"#boxId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAttempts",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#inCorrectAttempts",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#lastAswered",
													"n",
													"",
													"",
													"2018-01-01T12:00:00+01:00"
												]
											},
											{
												"cells": [
													"#questionId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#skips",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#userId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAnswerList",
													"n",
													"",
													"",
													"1,2"
												]
											},
											{
												"cells": [
													"#answer1Id",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#answer1Value",
													"n",
													"",
													"",
													"Osanda"
												]
											},
											{
												"cells": [
													"#answer1Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer1CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#answer2Id",
													"n",
													"",
													"",
													"2"
												]
											},
											{
												"cells": [
													"#answer2Value",
													"n",
													"",
													"",
													"Gemunu"
												]
											},
											{
												"cells": [
													"#answer2Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer2CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#answer3Id",
													"n",
													"",
													"",
													"3"
												]
											},
											{
												"cells": [
													"#answer3Value",
													"n",
													"",
													"",
													"Eranga"
												]
											},
											{
												"cells": [
													"#answer3Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer3CaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#answer4Id",
													"n",
													"",
													"",
													"4"
												]
											},
											{
												"cells": [
													"#answer4Value",
													"n",
													"",
													"",
													"Heshan"
												]
											},
											{
												"cells": [
													"#answer4Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer4CaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#answer5Id",
													"n",
													"",
													"",
													"5"
												]
											},
											{
												"cells": [
													"#answer5Value",
													"n",
													"",
													"",
													"Thilina"
												]
											},
											{
												"cells": [
													"#answer5Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer5CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#tags",
													"n",
													"",
													"",
													"MaxSoft"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 93,
										"skippedReason": "",
										"messages": [
											"Text inside Specification Data Store [myDeckIdWith9Questions] is: \"5b3772c80b9f171bcb85f170\"\n\n",
											"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3772c80b9f171bcb85f170\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"MULTIPLE_CHOICE\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Osanda\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"Gemunu\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"Eranga\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Heshan\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Thilina\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 2022,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8085/api/questions\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 1421ms\n\n",
											"Response is: \n{\n    \"question\": {\n        \"timeout\": 60,\n        \"media\": \"TEXT\",\n        \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n        \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n        \"promptType\": \"TEXT\"\n    },\n    \"stats\": {\n        \"questionId\": 0,\n        \"userId\": 0,\n        \"boxId\": 0,\n        \"skips\": 0,\n        \"lastAswered\": 1514804400000,\n        \"inCorrectAttempts\": 0,\n        \"correctAttempts\": 1\n    },\n    \"kind\": \"MULTIPLE_CHOICE\",\n    \"learningObjectives\": [\n        \"learningObjective1\"\n    ],\n    \"rationale\": \"rationale\",\n    \"tags\": [\n        \"MaxSoft\"\n    ],\n    \"creatorId\": \"osanda12\",\n    \"deckId\": \"5b3772c80b9f171bcb85f170\",\n    \"creatoredType\": \"Manual\",\n    \"creatorPlatform\": \"Web\",\n    \"creatoredSource\": \"App\",\n    \"parentId\": null,\n    \"tempQuestionId\": \"testId\",\n    \"epochTime\": {\n        \"createdAt\": 1530360522223,\n        \"updatedAt\": 1530360522223\n    },\n    \"answers\": [\n        {\n            \"id\": 5,\n            \"value\": \"Thilina\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": false\n        },\n        {\n            \"id\": 2,\n            \"value\": \"Gemunu\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": true\n        },\n        {\n            \"id\": 4,\n            \"value\": \"Heshan\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": false\n        },\n        {\n            \"id\": 1,\n            \"value\": \"Osanda\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": false\n        },\n        {\n            \"id\": 3,\n            \"value\": \"Eranga\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": true\n        }\n    ],\n    \"correctAnswers\": [\n        1,\n        2\n    ],\n    \"id\": \"5b3772cae4b08588e200696c\",\n    \"createdAt\": \"2018-06-30T12:08:42.223Z\",\n    \"updatedAt\": \"2018-06-30T12:08:42.225Z\",\n    \"deleted\": false,\n    \"archived\": false\n}\n\n",
											"Response Headers are: \ncorrelation-id=c8ee3f83-2b00-4430-b514-3a281e19aab9\nServer=Apache-Coyote/1.1\nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\nX-Application-Context=flashcardservice:dev:8070\nTransfer-Encoding=chunked\nDate=Sat, 30 Jun 2018 12:08:42 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create MCQ Type Question using Aggregation Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 79,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8085/api/questions\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes using data stores as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Path Value"
										],
										"rows": [
											{
												"cells": [
													"#creatorId",
													"n",
													"",
													"",
													"osanda12"
												]
											},
											{
												"cells": [
													"#creatorPlatform",
													"n",
													"",
													"",
													"Web"
												]
											},
											{
												"cells": [
													"#creatoredSource",
													"n",
													"",
													"",
													"App"
												]
											},
											{
												"cells": [
													"#creatoredType",
													"n",
													"",
													"",
													"Manual"
												]
											},
											{
												"cells": [
													"#isDeleted",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#tempQuestionId",
													"n",
													"",
													"",
													"testId"
												]
											},
											{
												"cells": [
													"#deckId",
													"y",
													"spec",
													"myDeckIdWith9Questions",
													"N/A"
												]
											},
											{
												"cells": [
													"#kind",
													"n",
													"",
													"",
													"MULTIPLE_CHOICE"
												]
											},
											{
												"cells": [
													"#learningObjectives",
													"n",
													"",
													"",
													"learningObjective1"
												]
											},
											{
												"cells": [
													"#imageUrl",
													"n",
													"",
													"",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#media",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#questionPrompt",
													"n",
													"",
													"",
													"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _"
												]
											},
											{
												"cells": [
													"#promptType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#timeout",
													"n",
													"",
													"",
													"60"
												]
											},
											{
												"cells": [
													"#rationale",
													"n",
													"",
													"",
													"rationale"
												]
											},
											{
												"cells": [
													"#boxId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAttempts",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#inCorrectAttempts",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#lastAswered",
													"n",
													"",
													"",
													"2018-01-01T12:00:00+01:00"
												]
											},
											{
												"cells": [
													"#questionId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#skips",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#userId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAnswerList",
													"n",
													"",
													"",
													"1,2"
												]
											},
											{
												"cells": [
													"#answer1Id",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#answer1Value",
													"n",
													"",
													"",
													"Osanda"
												]
											},
											{
												"cells": [
													"#answer1Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer1CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#answer2Id",
													"n",
													"",
													"",
													"2"
												]
											},
											{
												"cells": [
													"#answer2Value",
													"n",
													"",
													"",
													"Gemunu"
												]
											},
											{
												"cells": [
													"#answer2Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer2CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#answer3Id",
													"n",
													"",
													"",
													"3"
												]
											},
											{
												"cells": [
													"#answer3Value",
													"n",
													"",
													"",
													"Eranga"
												]
											},
											{
												"cells": [
													"#answer3Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer3CaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#answer4Id",
													"n",
													"",
													"",
													"4"
												]
											},
											{
												"cells": [
													"#answer4Value",
													"n",
													"",
													"",
													"Heshan"
												]
											},
											{
												"cells": [
													"#answer4Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer4CaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#answer5Id",
													"n",
													"",
													"",
													"5"
												]
											},
											{
												"cells": [
													"#answer5Value",
													"n",
													"",
													"",
													"Thilina"
												]
											},
											{
												"cells": [
													"#answer5Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer5CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#tags",
													"n",
													"",
													"",
													"MaxSoft"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 47,
										"skippedReason": "",
										"messages": [
											"Text inside Specification Data Store [myDeckIdWith9Questions] is: \"5b3772c80b9f171bcb85f170\"\n\n",
											"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3772c80b9f171bcb85f170\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"MULTIPLE_CHOICE\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Osanda\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"Gemunu\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"Eranga\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Heshan\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Thilina\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1767,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8085/api/questions\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 1430ms\n\n",
											"Response is: \n{\n    \"question\": {\n        \"timeout\": 60,\n        \"media\": \"TEXT\",\n        \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n        \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n        \"promptType\": \"TEXT\"\n    },\n    \"stats\": {\n        \"questionId\": 0,\n        \"userId\": 0,\n        \"boxId\": 0,\n        \"skips\": 0,\n        \"lastAswered\": 1514804400000,\n        \"inCorrectAttempts\": 0,\n        \"correctAttempts\": 1\n    },\n    \"kind\": \"MULTIPLE_CHOICE\",\n    \"learningObjectives\": [\n        \"learningObjective1\"\n    ],\n    \"rationale\": \"rationale\",\n    \"tags\": [\n        \"MaxSoft\"\n    ],\n    \"creatorId\": \"osanda12\",\n    \"deckId\": \"5b3772c80b9f171bcb85f170\",\n    \"creatoredType\": \"Manual\",\n    \"creatorPlatform\": \"Web\",\n    \"creatoredSource\": \"App\",\n    \"parentId\": null,\n    \"tempQuestionId\": \"testId\",\n    \"epochTime\": {\n        \"createdAt\": 1530360524083,\n        \"updatedAt\": 1530360524083\n    },\n    \"answers\": [\n        {\n            \"id\": 2,\n            \"value\": \"Gemunu\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": true\n        },\n        {\n            \"id\": 1,\n            \"value\": \"Osanda\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": false\n        },\n        {\n            \"id\": 5,\n            \"value\": \"Thilina\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": false\n        },\n        {\n            \"id\": 4,\n            \"value\": \"Heshan\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": false\n        },\n        {\n            \"id\": 3,\n            \"value\": \"Eranga\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": true\n        }\n    ],\n    \"correctAnswers\": [\n        1,\n        2\n    ],\n    \"id\": \"5b3772cce4b08588e200696d\",\n    \"createdAt\": \"2018-06-30T12:08:44.083Z\",\n    \"updatedAt\": \"2018-06-30T12:08:44.084Z\",\n    \"deleted\": false,\n    \"archived\": false\n}\n\n",
											"Response Headers are: \ncorrelation-id=8eb0acbd-9c0c-4806-8cb7-bde9778dc3b7\nServer=Apache-Coyote/1.1\nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\nX-Application-Context=flashcardservice:dev:8070\nTransfer-Encoding=chunked\nDate=Sat, 30 Jun 2018 12:08:44 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And save the JSON Path values in the response inside the data stores",
									"table": {
										"headers": [
											"DataStore Type",
											"Variable Name",
											"Value To Be Stored"
										],
										"rows": [
											{
												"cells": [
													"scenario",
													"cardId2",
													"$.id"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 9,
										"skippedReason": "",
										"messages": [
											"\"5b3772cce4b08588e200696d\" is successfully saved as a text in Scenario Data Store [cardId2]"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create MCQ Type Question using Aggregation Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 246,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8085/api/questions\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes using data stores as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Path Value"
										],
										"rows": [
											{
												"cells": [
													"#creatorId",
													"n",
													"",
													"",
													"osanda12"
												]
											},
											{
												"cells": [
													"#creatorPlatform",
													"n",
													"",
													"",
													"Web"
												]
											},
											{
												"cells": [
													"#creatoredSource",
													"n",
													"",
													"",
													"App"
												]
											},
											{
												"cells": [
													"#creatoredType",
													"n",
													"",
													"",
													"Manual"
												]
											},
											{
												"cells": [
													"#deckId",
													"y",
													"spec",
													"myDeckIdWith9Questions",
													"N/A"
												]
											},
											{
												"cells": [
													"#kind",
													"n",
													"",
													"",
													"MULTIPLE_CHOICE"
												]
											},
											{
												"cells": [
													"#isDeleted",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#tempQuestionId",
													"n",
													"",
													"",
													"testId"
												]
											},
											{
												"cells": [
													"#learningObjectives",
													"n",
													"",
													"",
													"learningObjective1"
												]
											},
											{
												"cells": [
													"#imageUrl",
													"n",
													"",
													"",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#media",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#questionPrompt",
													"n",
													"",
													"",
													"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _"
												]
											},
											{
												"cells": [
													"#promptType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#timeout",
													"n",
													"",
													"",
													"60"
												]
											},
											{
												"cells": [
													"#rationale",
													"n",
													"",
													"",
													"rationale"
												]
											},
											{
												"cells": [
													"#boxId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAttempts",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#inCorrectAttempts",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#lastAswered",
													"n",
													"",
													"",
													"2018-01-01T12:00:00+01:00"
												]
											},
											{
												"cells": [
													"#questionId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#skips",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#userId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAnswerList",
													"n",
													"",
													"",
													"1,2"
												]
											},
											{
												"cells": [
													"#answer1Id",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#answer1Value",
													"n",
													"",
													"",
													"Osanda"
												]
											},
											{
												"cells": [
													"#answer1Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer1CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#answer2Id",
													"n",
													"",
													"",
													"2"
												]
											},
											{
												"cells": [
													"#answer2Value",
													"n",
													"",
													"",
													"Gemunu"
												]
											},
											{
												"cells": [
													"#answer2Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer2CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#answer3Id",
													"n",
													"",
													"",
													"3"
												]
											},
											{
												"cells": [
													"#answer3Value",
													"n",
													"",
													"",
													"Eranga"
												]
											},
											{
												"cells": [
													"#answer3Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer3CaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#answer4Id",
													"n",
													"",
													"",
													"4"
												]
											},
											{
												"cells": [
													"#answer4Value",
													"n",
													"",
													"",
													"Heshan"
												]
											},
											{
												"cells": [
													"#answer4Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer4CaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#answer5Id",
													"n",
													"",
													"",
													"5"
												]
											},
											{
												"cells": [
													"#answer5Value",
													"n",
													"",
													"",
													"Thilina"
												]
											},
											{
												"cells": [
													"#answer5Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer5CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#tags",
													"n",
													"",
													"",
													"MaxSoft"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 99,
										"skippedReason": "",
										"messages": [
											"Text inside Specification Data Store [myDeckIdWith9Questions] is: \"5b3772c80b9f171bcb85f170\"\n\n",
											"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3772c80b9f171bcb85f170\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"MULTIPLE_CHOICE\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Osanda\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"Gemunu\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"Eranga\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Heshan\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Thilina\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1387,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8085/api/questions\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 937ms\n\n",
											"Response is: \n{\n    \"question\": {\n        \"timeout\": 60,\n        \"media\": \"TEXT\",\n        \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n        \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n        \"promptType\": \"TEXT\"\n    },\n    \"stats\": {\n        \"questionId\": 0,\n        \"userId\": 0,\n        \"boxId\": 0,\n        \"skips\": 0,\n        \"lastAswered\": 1514804400000,\n        \"inCorrectAttempts\": 0,\n        \"correctAttempts\": 1\n    },\n    \"kind\": \"MULTIPLE_CHOICE\",\n    \"learningObjectives\": [\n        \"learningObjective1\"\n    ],\n    \"rationale\": \"rationale\",\n    \"tags\": [\n        \"MaxSoft\"\n    ],\n    \"creatorId\": \"osanda12\",\n    \"deckId\": \"5b3772c80b9f171bcb85f170\",\n    \"creatoredType\": \"Manual\",\n    \"creatorPlatform\": \"Web\",\n    \"creatoredSource\": \"App\",\n    \"parentId\": null,\n    \"tempQuestionId\": \"testId\",\n    \"epochTime\": {\n        \"createdAt\": 1530360526416,\n        \"updatedAt\": 1530360526416\n    },\n    \"answers\": [\n        {\n            \"id\": 3,\n            \"value\": \"Eranga\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": true\n        },\n        {\n            \"id\": 1,\n            \"value\": \"Osanda\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": false\n        },\n        {\n            \"id\": 5,\n            \"value\": \"Thilina\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": false\n        },\n        {\n            \"id\": 2,\n            \"value\": \"Gemunu\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": true\n        },\n        {\n            \"id\": 4,\n            \"value\": \"Heshan\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": false\n        }\n    ],\n    \"correctAnswers\": [\n        1,\n        2\n    ],\n    \"id\": \"5b3772cee4b08588e200696e\",\n    \"createdAt\": \"2018-06-30T12:08:46.416Z\",\n    \"updatedAt\": \"2018-06-30T12:08:46.418Z\",\n    \"deleted\": false,\n    \"archived\": false\n}\n\n",
											"Response Headers are: \ncorrelation-id=0a4fb88d-1e1d-48f2-9552-eaa7aab35775\nServer=Apache-Coyote/1.1\nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\nX-Application-Context=flashcardservice:dev:8070\nTransfer-Encoding=chunked\nDate=Sat, 30 Jun 2018 12:08:46 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create MCQ Type Question using Aggregation Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 299,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8085/api/questions\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes using data stores as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Path Value"
										],
										"rows": [
											{
												"cells": [
													"#creatorId",
													"n",
													"",
													"",
													"osanda12"
												]
											},
											{
												"cells": [
													"#creatorPlatform",
													"n",
													"",
													"",
													"Web"
												]
											},
											{
												"cells": [
													"#creatoredSource",
													"n",
													"",
													"",
													"App"
												]
											},
											{
												"cells": [
													"#creatoredType",
													"n",
													"",
													"",
													"Manual"
												]
											},
											{
												"cells": [
													"#deckId",
													"y",
													"spec",
													"myDeckIdWith9Questions",
													"N/A"
												]
											},
											{
												"cells": [
													"#kind",
													"n",
													"",
													"",
													"MULTIPLE_CHOICE"
												]
											},
											{
												"cells": [
													"#learningObjectives",
													"n",
													"",
													"",
													"learningObjective1"
												]
											},
											{
												"cells": [
													"#isDeleted",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#tempQuestionId",
													"n",
													"",
													"",
													"testId"
												]
											},
											{
												"cells": [
													"#imageUrl",
													"n",
													"",
													"",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#media",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#questionPrompt",
													"n",
													"",
													"",
													"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _"
												]
											},
											{
												"cells": [
													"#promptType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#timeout",
													"n",
													"",
													"",
													"60"
												]
											},
											{
												"cells": [
													"#rationale",
													"n",
													"",
													"",
													"rationale"
												]
											},
											{
												"cells": [
													"#boxId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAttempts",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#inCorrectAttempts",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#lastAswered",
													"n",
													"",
													"",
													"2018-01-01T12:00:00+01:00"
												]
											},
											{
												"cells": [
													"#questionId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#skips",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#userId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAnswerList",
													"n",
													"",
													"",
													"1,2"
												]
											},
											{
												"cells": [
													"#answer1Id",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#answer1Value",
													"n",
													"",
													"",
													"Osanda"
												]
											},
											{
												"cells": [
													"#answer1Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer1CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#answer2Id",
													"n",
													"",
													"",
													"2"
												]
											},
											{
												"cells": [
													"#answer2Value",
													"n",
													"",
													"",
													"Gemunu"
												]
											},
											{
												"cells": [
													"#answer2Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer2CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#answer3Id",
													"n",
													"",
													"",
													"3"
												]
											},
											{
												"cells": [
													"#answer3Value",
													"n",
													"",
													"",
													"Eranga"
												]
											},
											{
												"cells": [
													"#answer3Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer3CaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#answer4Id",
													"n",
													"",
													"",
													"4"
												]
											},
											{
												"cells": [
													"#answer4Value",
													"n",
													"",
													"",
													"Heshan"
												]
											},
											{
												"cells": [
													"#answer4Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer4CaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#answer5Id",
													"n",
													"",
													"",
													"5"
												]
											},
											{
												"cells": [
													"#answer5Value",
													"n",
													"",
													"",
													"Thilina"
												]
											},
											{
												"cells": [
													"#answer5Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer5CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#tags",
													"n",
													"",
													"",
													"MaxSoft"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 152,
										"skippedReason": "",
										"messages": [
											"Text inside Specification Data Store [myDeckIdWith9Questions] is: \"5b3772c80b9f171bcb85f170\"\n\n",
											"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3772c80b9f171bcb85f170\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"MULTIPLE_CHOICE\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Osanda\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"Gemunu\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"Eranga\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Heshan\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Thilina\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1899,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8085/api/questions\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 1030ms\n\n",
											"Response is: \n{\n    \"question\": {\n        \"timeout\": 60,\n        \"media\": \"TEXT\",\n        \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n        \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n        \"promptType\": \"TEXT\"\n    },\n    \"stats\": {\n        \"questionId\": 0,\n        \"userId\": 0,\n        \"boxId\": 0,\n        \"skips\": 0,\n        \"lastAswered\": 1514804400000,\n        \"inCorrectAttempts\": 0,\n        \"correctAttempts\": 1\n    },\n    \"kind\": \"MULTIPLE_CHOICE\",\n    \"learningObjectives\": [\n        \"learningObjective1\"\n    ],\n    \"rationale\": \"rationale\",\n    \"tags\": [\n        \"MaxSoft\"\n    ],\n    \"creatorId\": \"osanda12\",\n    \"deckId\": \"5b3772c80b9f171bcb85f170\",\n    \"creatoredType\": \"Manual\",\n    \"creatorPlatform\": \"Web\",\n    \"creatoredSource\": \"App\",\n    \"parentId\": null,\n    \"tempQuestionId\": \"testId\",\n    \"epochTime\": {\n        \"createdAt\": 1530360528849,\n        \"updatedAt\": 1530360528849\n    },\n    \"answers\": [\n        {\n            \"id\": 5,\n            \"value\": \"Thilina\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": false\n        },\n        {\n            \"id\": 4,\n            \"value\": \"Heshan\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": false\n        },\n        {\n            \"id\": 3,\n            \"value\": \"Eranga\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": true\n        },\n        {\n            \"id\": 2,\n            \"value\": \"Gemunu\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": true\n        },\n        {\n            \"id\": 1,\n            \"value\": \"Osanda\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": false\n        }\n    ],\n    \"correctAnswers\": [\n        1,\n        2\n    ],\n    \"id\": \"5b3772d0e4b08588e200696f\",\n    \"createdAt\": \"2018-06-30T12:08:48.849Z\",\n    \"updatedAt\": \"2018-06-30T12:08:48.850Z\",\n    \"deleted\": false,\n    \"archived\": false\n}\n\n",
											"Response Headers are: \ncorrelation-id=ba3d0134-c7f4-4b90-aa4a-f342905fadfa\nServer=Apache-Coyote/1.1\nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\nX-Application-Context=flashcardservice:dev:8070\nTransfer-Encoding=chunked\nDate=Sat, 30 Jun 2018 12:08:48 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create All Type Question using Aggregation Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 129,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8085/api/questions\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes using data stores as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Path Value"
										],
										"rows": [
											{
												"cells": [
													"#creatorId",
													"n",
													"",
													"",
													"osanda12"
												]
											},
											{
												"cells": [
													"#creatorPlatform",
													"n",
													"",
													"",
													"Web"
												]
											},
											{
												"cells": [
													"#creatoredSource",
													"n",
													"",
													"",
													"App"
												]
											},
											{
												"cells": [
													"#creatoredType",
													"n",
													"",
													"",
													"Manual"
												]
											},
											{
												"cells": [
													"#deckId",
													"y",
													"spec",
													"myDeckIdWith9Questions",
													"N/A"
												]
											},
											{
												"cells": [
													"#kind",
													"n",
													"",
													"",
													"ALL"
												]
											},
											{
												"cells": [
													"#learningObjectives",
													"n",
													"",
													"",
													"learningObjective1"
												]
											},
											{
												"cells": [
													"#isDeleted",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#tempQuestionId",
													"n",
													"",
													"",
													"testId"
												]
											},
											{
												"cells": [
													"#imageUrl",
													"n",
													"",
													"",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#media",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#questionPrompt",
													"n",
													"",
													"",
													"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _"
												]
											},
											{
												"cells": [
													"#promptType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#timeout",
													"n",
													"",
													"",
													"60"
												]
											},
											{
												"cells": [
													"#rationale",
													"n",
													"",
													"",
													"rationale"
												]
											},
											{
												"cells": [
													"#boxId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAttempts",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#inCorrectAttempts",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#lastAswered",
													"n",
													"",
													"",
													"2018-01-01T12:00:00+01:00"
												]
											},
											{
												"cells": [
													"#questionId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#skips",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#userId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAnswerList",
													"n",
													"",
													"",
													"1,2"
												]
											},
											{
												"cells": [
													"#answer1Id",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#answer1Value",
													"n",
													"",
													"",
													"Osanda"
												]
											},
											{
												"cells": [
													"#answer1Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer1CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#answer2Id",
													"n",
													"",
													"",
													"2"
												]
											},
											{
												"cells": [
													"#answer2Value",
													"n",
													"",
													"",
													"Gemunu"
												]
											},
											{
												"cells": [
													"#answer2Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer2CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#answer3Id",
													"n",
													"",
													"",
													"3"
												]
											},
											{
												"cells": [
													"#answer3Value",
													"n",
													"",
													"",
													"Eranga"
												]
											},
											{
												"cells": [
													"#answer3Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer3CaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#answer4Id",
													"n",
													"",
													"",
													"4"
												]
											},
											{
												"cells": [
													"#answer4Value",
													"n",
													"",
													"",
													"Heshan"
												]
											},
											{
												"cells": [
													"#answer4Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer4CaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#answer5Id",
													"n",
													"",
													"",
													"5"
												]
											},
											{
												"cells": [
													"#answer5Value",
													"n",
													"",
													"",
													"Thilina"
												]
											},
											{
												"cells": [
													"#answer5Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer5CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#tags",
													"n",
													"",
													"",
													"MaxSoft"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 48,
										"skippedReason": "",
										"messages": [
											"Text inside Specification Data Store [myDeckIdWith9Questions] is: \"5b3772c80b9f171bcb85f170\"\n\n",
											"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3772c80b9f171bcb85f170\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Osanda\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"Gemunu\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"Eranga\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Heshan\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Thilina\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1242,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8085/api/questions\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 931ms\n\n",
											"Response is: \n{\n    \"question\": {\n        \"timeout\": 60,\n        \"media\": \"TEXT\",\n        \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n        \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n        \"promptType\": \"TEXT\"\n    },\n    \"stats\": {\n        \"questionId\": 0,\n        \"userId\": 0,\n        \"boxId\": 0,\n        \"skips\": 0,\n        \"lastAswered\": 1514804400000,\n        \"inCorrectAttempts\": 0,\n        \"correctAttempts\": 1\n    },\n    \"kind\": \"ALL\",\n    \"learningObjectives\": [\n        \"learningObjective1\"\n    ],\n    \"rationale\": \"rationale\",\n    \"tags\": [\n        \"MaxSoft\"\n    ],\n    \"creatorId\": \"osanda12\",\n    \"deckId\": \"5b3772c80b9f171bcb85f170\",\n    \"creatoredType\": \"Manual\",\n    \"creatorPlatform\": \"Web\",\n    \"creatoredSource\": \"App\",\n    \"parentId\": null,\n    \"tempQuestionId\": \"testId\",\n    \"epochTime\": {\n        \"createdAt\": 1530360530280,\n        \"updatedAt\": 1530360530280\n    },\n    \"answers\": [\n        {\n            \"id\": 1,\n            \"value\": \"Osanda\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": false\n        },\n        {\n            \"id\": 5,\n            \"value\": \"Thilina\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": false\n        },\n        {\n            \"id\": 2,\n            \"value\": \"Gemunu\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": true\n        },\n        {\n            \"id\": 4,\n            \"value\": \"Heshan\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": false\n        },\n        {\n            \"id\": 3,\n            \"value\": \"Eranga\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": true\n        }\n    ],\n    \"correctAnswers\": [\n        1,\n        2\n    ],\n    \"id\": \"5b3772d2e4b08588e2006970\",\n    \"deleted\": false,\n    \"archived\": false\n}\n\n",
											"Response Headers are: \ncorrelation-id=45ec5b20-b1dd-46c1-9030-042eb4756742\nServer=Apache-Coyote/1.1\nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\nX-Application-Context=flashcardservice:dev:8070\nTransfer-Encoding=chunked\nDate=Sat, 30 Jun 2018 12:08:50 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And save the JSON Path values in the response inside the data stores",
									"table": {
										"headers": [
											"DataStore Type",
											"Variable Name",
											"Value To Be Stored"
										],
										"rows": [
											{
												"cells": [
													"scenario",
													"cardId5",
													"$.id"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1,
										"skippedReason": "",
										"messages": [
											"\"5b3772d2e4b08588e2006970\" is successfully saved as a text in Scenario Data Store [cardId5]"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create Short Answer Type Question using Aggregation Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 226,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8085/api/questions\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes using data stores as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#creatorId",
													"n",
													"",
													"",
													"osanda12"
												]
											},
											{
												"cells": [
													"#creatorPlatform",
													"n",
													"",
													"",
													"Web"
												]
											},
											{
												"cells": [
													"#creatoredSource",
													"n",
													"",
													"",
													"App"
												]
											},
											{
												"cells": [
													"#creatoredType",
													"n",
													"",
													"",
													"Manual"
												]
											},
											{
												"cells": [
													"#deckId",
													"y",
													"spec",
													"myDeckIdWith9Questions",
													""
												]
											},
											{
												"cells": [
													"#isDeleted",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#tempQuestionId",
													"n",
													"",
													"",
													"testId"
												]
											},
											{
												"cells": [
													"#kind",
													"n",
													"",
													"",
													"SHORT_ANSWER"
												]
											},
											{
												"cells": [
													"#learningObjectives",
													"n",
													"",
													"",
													""
												]
											},
											{
												"cells": [
													"#imageUrl",
													"n",
													"",
													"",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#media",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#questionPrompt",
													"n",
													"",
													"",
													"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _"
												]
											},
											{
												"cells": [
													"#promptType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#timeout",
													"n",
													"",
													"",
													"60"
												]
											},
											{
												"cells": [
													"#rationale",
													"n",
													"",
													"",
													"rationale"
												]
											},
											{
												"cells": [
													"#boxId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAttempts",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#inCorrectAttempts",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#lastAswered",
													"n",
													"",
													"",
													"2018-01-01T12:00:00+01:00"
												]
											},
											{
												"cells": [
													"#questionId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#skips",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#userId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAnswerId",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#correctAnswerValue",
													"n",
													"",
													"",
													"Osanda Deshan"
												]
											},
											{
												"cells": [
													"#iscorrectAnswerCaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#correctAnswerType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#tags",
													"n",
													"",
													"",
													"MaxSoft"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 77,
										"skippedReason": "",
										"messages": [
											"Text inside Specification Data Store [myDeckIdWith9Questions] is: \"5b3772c80b9f171bcb85f170\"\n\n",
											"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3772c80b9f171bcb85f170\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"SHORT_ANSWER\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"answers\": [\n        {\n          \"id\": 1,\n          \"value\": \"Osanda Deshan\",\n          \"caseSensitive\": false,\n          \"type\": \"TEXT\"\n        }\n  ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1455,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8085/api/questions\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 945ms\n\n",
											"Response is: \n{\n    \"question\": {\n        \"timeout\": 60,\n        \"media\": \"TEXT\",\n        \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n        \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n        \"promptType\": \"TEXT\"\n    },\n    \"stats\": {\n        \"questionId\": 0,\n        \"userId\": 0,\n        \"boxId\": 0,\n        \"skips\": 0,\n        \"lastAswered\": 1514804400000,\n        \"inCorrectAttempts\": 0,\n        \"correctAttempts\": 1\n    },\n    \"kind\": \"SHORT_ANSWER\",\n    \"learningObjectives\": [\n        \"\"\n    ],\n    \"rationale\": \"rationale\",\n    \"tags\": [\n        \"MaxSoft\"\n    ],\n    \"creatorId\": \"osanda12\",\n    \"deckId\": \"5b3772c80b9f171bcb85f170\",\n    \"creatoredType\": \"Manual\",\n    \"creatorPlatform\": \"Web\",\n    \"creatoredSource\": \"App\",\n    \"parentId\": null,\n    \"tempQuestionId\": \"testId\",\n    \"epochTime\": {\n        \"createdAt\": 1530360532079,\n        \"updatedAt\": 1530360532079\n    },\n    \"answers\": [\n        {\n            \"id\": 1,\n            \"value\": \"Osanda Deshan\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": false\n        }\n    ],\n    \"id\": \"5b3772d4e4b08588e2006971\",\n    \"createdAt\": \"2018-06-30T12:08:52.079Z\",\n    \"updatedAt\": \"2018-06-30T12:08:52.080Z\",\n    \"deleted\": false,\n    \"archived\": false\n}\n\n",
											"Response Headers are: \ncorrelation-id=153b731b-dabb-40b5-b623-741ebe25bd3e\nServer=Apache-Coyote/1.1\nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\nX-Application-Context=flashcardservice:dev:8070\nTransfer-Encoding=chunked\nDate=Sat, 30 Jun 2018 12:08:52 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create Short Answer Type Question using Aggregation Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 425,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8085/api/questions\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes using data stores as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#creatorId",
													"n",
													"",
													"",
													"osanda12"
												]
											},
											{
												"cells": [
													"#creatorPlatform",
													"n",
													"",
													"",
													"Web"
												]
											},
											{
												"cells": [
													"#creatoredSource",
													"n",
													"",
													"",
													"App"
												]
											},
											{
												"cells": [
													"#creatoredType",
													"n",
													"",
													"",
													"Manual"
												]
											},
											{
												"cells": [
													"#deckId",
													"y",
													"spec",
													"myDeckIdWith9Questions",
													""
												]
											},
											{
												"cells": [
													"#isDeleted",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#tempQuestionId",
													"n",
													"",
													"",
													"testId"
												]
											},
											{
												"cells": [
													"#kind",
													"n",
													"",
													"",
													"SHORT_ANSWER"
												]
											},
											{
												"cells": [
													"#learningObjectives",
													"n",
													"",
													"",
													""
												]
											},
											{
												"cells": [
													"#imageUrl",
													"n",
													"",
													"",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#media",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#questionPrompt",
													"n",
													"",
													"",
													"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _"
												]
											},
											{
												"cells": [
													"#promptType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#timeout",
													"n",
													"",
													"",
													"60"
												]
											},
											{
												"cells": [
													"#rationale",
													"n",
													"",
													"",
													"rationale"
												]
											},
											{
												"cells": [
													"#boxId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAttempts",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#inCorrectAttempts",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#lastAswered",
													"n",
													"",
													"",
													"2018-01-01T12:00:00+01:00"
												]
											},
											{
												"cells": [
													"#questionId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#skips",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#userId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAnswerId",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#correctAnswerValue",
													"n",
													"",
													"",
													"Osanda Deshan"
												]
											},
											{
												"cells": [
													"#iscorrectAnswerCaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#correctAnswerType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#tags",
													"n",
													"",
													"",
													"MaxSoft"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 129,
										"skippedReason": "",
										"messages": [
											"Text inside Specification Data Store [myDeckIdWith9Questions] is: \"5b3772c80b9f171bcb85f170\"\n\n",
											"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3772c80b9f171bcb85f170\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"SHORT_ANSWER\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"answers\": [\n        {\n          \"id\": 1,\n          \"value\": \"Osanda Deshan\",\n          \"caseSensitive\": false,\n          \"type\": \"TEXT\"\n        }\n  ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1962,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8085/api/questions\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 914ms\n\n",
											"Response is: \n{\n    \"question\": {\n        \"timeout\": 60,\n        \"media\": \"TEXT\",\n        \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n        \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n        \"promptType\": \"TEXT\"\n    },\n    \"stats\": {\n        \"questionId\": 0,\n        \"userId\": 0,\n        \"boxId\": 0,\n        \"skips\": 0,\n        \"lastAswered\": 1514804400000,\n        \"inCorrectAttempts\": 0,\n        \"correctAttempts\": 1\n    },\n    \"kind\": \"SHORT_ANSWER\",\n    \"learningObjectives\": [\n        \"\"\n    ],\n    \"rationale\": \"rationale\",\n    \"tags\": [\n        \"MaxSoft\"\n    ],\n    \"creatorId\": \"osanda12\",\n    \"deckId\": \"5b3772c80b9f171bcb85f170\",\n    \"creatoredType\": \"Manual\",\n    \"creatorPlatform\": \"Web\",\n    \"creatoredSource\": \"App\",\n    \"parentId\": null,\n    \"tempQuestionId\": \"testId\",\n    \"epochTime\": {\n        \"createdAt\": 1530360534949,\n        \"updatedAt\": 1530360534949\n    },\n    \"answers\": [\n        {\n            \"id\": 1,\n            \"value\": \"Osanda Deshan\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": false\n        }\n    ],\n    \"id\": \"5b3772d6e4b08588e2006972\",\n    \"createdAt\": \"2018-06-30T12:08:54.949Z\",\n    \"updatedAt\": \"2018-06-30T12:08:54.950Z\",\n    \"deleted\": false,\n    \"archived\": false\n}\n\n",
											"Response Headers are: \ncorrelation-id=c8ee3f83-2b00-4430-b514-3a281e19aab9\nServer=Apache-Coyote/1.1\nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\nX-Application-Context=flashcardservice:dev:8070\nTransfer-Encoding=chunked\nDate=Sat, 30 Jun 2018 12:08:54 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create Short Answer Type Question using Aggregation Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 174,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8085/api/questions\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes using data stores as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#creatorId",
													"n",
													"",
													"",
													"osanda12"
												]
											},
											{
												"cells": [
													"#creatorPlatform",
													"n",
													"",
													"",
													"Web"
												]
											},
											{
												"cells": [
													"#creatoredSource",
													"n",
													"",
													"",
													"App"
												]
											},
											{
												"cells": [
													"#creatoredType",
													"n",
													"",
													"",
													"Manual"
												]
											},
											{
												"cells": [
													"#deckId",
													"y",
													"spec",
													"myDeckIdWith9Questions",
													""
												]
											},
											{
												"cells": [
													"#isDeleted",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#tempQuestionId",
													"n",
													"",
													"",
													"testId"
												]
											},
											{
												"cells": [
													"#kind",
													"n",
													"",
													"",
													"SHORT_ANSWER"
												]
											},
											{
												"cells": [
													"#learningObjectives",
													"n",
													"",
													"",
													""
												]
											},
											{
												"cells": [
													"#imageUrl",
													"n",
													"",
													"",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#media",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#questionPrompt",
													"n",
													"",
													"",
													"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _"
												]
											},
											{
												"cells": [
													"#promptType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#timeout",
													"n",
													"",
													"",
													"60"
												]
											},
											{
												"cells": [
													"#rationale",
													"n",
													"",
													"",
													"rationale"
												]
											},
											{
												"cells": [
													"#boxId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAttempts",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#inCorrectAttempts",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#lastAswered",
													"n",
													"",
													"",
													"2018-01-01T12:00:00+01:00"
												]
											},
											{
												"cells": [
													"#questionId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#skips",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#userId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAnswerId",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#correctAnswerValue",
													"n",
													"",
													"",
													"Osanda Deshan"
												]
											},
											{
												"cells": [
													"#iscorrectAnswerCaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#correctAnswerType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#tags",
													"n",
													"",
													"",
													"MaxSoft"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 82,
										"skippedReason": "",
										"messages": [
											"Text inside Specification Data Store [myDeckIdWith9Questions] is: \"5b3772c80b9f171bcb85f170\"\n\n",
											"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3772c80b9f171bcb85f170\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"SHORT_ANSWER\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"answers\": [\n        {\n          \"id\": 1,\n          \"value\": \"Osanda Deshan\",\n          \"caseSensitive\": false,\n          \"type\": \"TEXT\"\n        }\n  ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1429,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8085/api/questions\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 944ms\n\n",
											"Response is: \n{\n    \"question\": {\n        \"timeout\": 60,\n        \"media\": \"TEXT\",\n        \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n        \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n        \"promptType\": \"TEXT\"\n    },\n    \"stats\": {\n        \"questionId\": 0,\n        \"userId\": 0,\n        \"boxId\": 0,\n        \"skips\": 0,\n        \"lastAswered\": 1514804400000,\n        \"inCorrectAttempts\": 0,\n        \"correctAttempts\": 1\n    },\n    \"kind\": \"SHORT_ANSWER\",\n    \"learningObjectives\": [\n        \"\"\n    ],\n    \"rationale\": \"rationale\",\n    \"tags\": [\n        \"MaxSoft\"\n    ],\n    \"creatorId\": \"osanda12\",\n    \"deckId\": \"5b3772c80b9f171bcb85f170\",\n    \"creatoredType\": \"Manual\",\n    \"creatorPlatform\": \"Web\",\n    \"creatoredSource\": \"App\",\n    \"parentId\": null,\n    \"tempQuestionId\": \"testId\",\n    \"epochTime\": {\n        \"createdAt\": 1530360536675,\n        \"updatedAt\": 1530360536675\n    },\n    \"answers\": [\n        {\n            \"id\": 1,\n            \"value\": \"Osanda Deshan\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": false\n        }\n    ],\n    \"id\": \"5b3772d8e4b08588e2006973\",\n    \"createdAt\": \"2018-06-30T12:08:56.675Z\",\n    \"updatedAt\": \"2018-06-30T12:08:56.676Z\",\n    \"deleted\": false,\n    \"archived\": false\n}\n\n",
											"Response Headers are: \ncorrelation-id=3286fe12-d027-478d-a958-b38b033747cf\nServer=Apache-Coyote/1.1\nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\nX-Application-Context=flashcardservice:dev:8070\nTransfer-Encoding=chunked\nDate=Sat, 30 Jun 2018 12:08:56 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And save the JSON Path values in the response inside the data stores",
									"table": {
										"headers": [
											"DataStore Type",
											"Variable Name",
											"Value To Be Stored"
										],
										"rows": [
											{
												"cells": [
													"scenario",
													"cardId8",
													"$.id"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [
											"\"5b3772d8e4b08588e2006973\" is successfully saved as a text in Scenario Data Store [cardId8]"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create Short Answer Type Question using Aggregation Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 321,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8085/api/questions\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes using data stores as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#creatorId",
													"n",
													"",
													"",
													"osanda12"
												]
											},
											{
												"cells": [
													"#creatorPlatform",
													"n",
													"",
													"",
													"Web"
												]
											},
											{
												"cells": [
													"#creatoredSource",
													"n",
													"",
													"",
													"App"
												]
											},
											{
												"cells": [
													"#creatoredType",
													"n",
													"",
													"",
													"Manual"
												]
											},
											{
												"cells": [
													"#deckId",
													"y",
													"spec",
													"myDeckIdWith9Questions",
													""
												]
											},
											{
												"cells": [
													"#isDeleted",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#tempQuestionId",
													"n",
													"",
													"",
													"testId"
												]
											},
											{
												"cells": [
													"#kind",
													"n",
													"",
													"",
													"SHORT_ANSWER"
												]
											},
											{
												"cells": [
													"#learningObjectives",
													"n",
													"",
													"",
													""
												]
											},
											{
												"cells": [
													"#imageUrl",
													"n",
													"",
													"",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#media",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#questionPrompt",
													"n",
													"",
													"",
													"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _"
												]
											},
											{
												"cells": [
													"#promptType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#timeout",
													"n",
													"",
													"",
													"60"
												]
											},
											{
												"cells": [
													"#rationale",
													"n",
													"",
													"",
													"rationale"
												]
											},
											{
												"cells": [
													"#boxId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAttempts",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#inCorrectAttempts",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#lastAswered",
													"n",
													"",
													"",
													"2018-01-01T12:00:00+01:00"
												]
											},
											{
												"cells": [
													"#questionId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#skips",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#userId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAnswerId",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#correctAnswerValue",
													"n",
													"",
													"",
													"Osanda Deshan"
												]
											},
											{
												"cells": [
													"#iscorrectAnswerCaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#correctAnswerType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#tags",
													"n",
													"",
													"",
													"MaxSoft"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 148,
										"skippedReason": "",
										"messages": [
											"Text inside Specification Data Store [myDeckIdWith9Questions] is: \"5b3772c80b9f171bcb85f170\"\n\n",
											"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3772c80b9f171bcb85f170\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"SHORT_ANSWER\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"answers\": [\n        {\n          \"id\": 1,\n          \"value\": \"Osanda Deshan\",\n          \"caseSensitive\": false,\n          \"type\": \"TEXT\"\n        }\n  ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1523,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8085/api/questions\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 927ms\n\n",
											"Response is: \n{\n    \"question\": {\n        \"timeout\": 60,\n        \"media\": \"TEXT\",\n        \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n        \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n        \"promptType\": \"TEXT\"\n    },\n    \"stats\": {\n        \"questionId\": 0,\n        \"userId\": 0,\n        \"boxId\": 0,\n        \"skips\": 0,\n        \"lastAswered\": 1514804400000,\n        \"inCorrectAttempts\": 0,\n        \"correctAttempts\": 1\n    },\n    \"kind\": \"SHORT_ANSWER\",\n    \"learningObjectives\": [\n        \"\"\n    ],\n    \"rationale\": \"rationale\",\n    \"tags\": [\n        \"MaxSoft\"\n    ],\n    \"creatorId\": \"osanda12\",\n    \"deckId\": \"5b3772c80b9f171bcb85f170\",\n    \"creatoredType\": \"Manual\",\n    \"creatorPlatform\": \"Web\",\n    \"creatoredSource\": \"App\",\n    \"parentId\": null,\n    \"tempQuestionId\": \"testId\",\n    \"epochTime\": {\n        \"createdAt\": 1530360538734,\n        \"updatedAt\": 1530360538734\n    },\n    \"answers\": [\n        {\n            \"id\": 1,\n            \"value\": \"Osanda Deshan\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": false\n        }\n    ],\n    \"id\": \"5b3772dae4b08588e2006974\",\n    \"createdAt\": \"2018-06-30T12:08:58.734Z\",\n    \"updatedAt\": \"2018-06-30T12:08:58.735Z\",\n    \"deleted\": false,\n    \"archived\": false\n}\n\n",
											"Response Headers are: \ncorrelation-id=417fb37a-3c1e-498f-bf98-0a64935da00a\nServer=Apache-Coyote/1.1\nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\nX-Application-Context=flashcardservice:dev:8070\nTransfer-Encoding=chunked\nDate=Sat, 30 Jun 2018 12:08:58 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And save the JSON Path values in the response inside the data stores",
									"table": {
										"headers": [
											"DataStore Type",
											"Variable Name",
											"Value To Be Stored"
										],
										"rows": [
											{
												"cells": [
													"scenario",
													"questionId",
													"$.id"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1,
										"skippedReason": "",
										"messages": [
											"\"5b3772dae4b08588e2006974\" is successfully saved as a text in Scenario Data Store [questionId]"
										],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get all Questions using Aggregation Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 200,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8085/api/questions\n\n",
									"HTTP Method is: GET\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the query parameters using data stores as follows",
							"table": {
								"headers": [
									"Query Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Query Value"
								],
								"rows": [
									{
										"cells": [
											"deckId",
											"y",
											"spec",
											"myDeckIdWith9Questions",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"Text inside Specification Data Store [myDeckIdWith9Questions] is: \"5b3772c80b9f171bcb85f170\"\n\n",
									"Query parameters which will append to the request URL: ?deckId=5b3772c80b9f171bcb85f170\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2710,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8085/api/questions?deckId=5b3772c80b9f171bcb85f170\n\n",
									"HTTP Method is: GET\n\n",
									"Response Time is: 1213ms\n\n",
									"Response is: \n{\n    \"questions\": [\n        {\n            \"question\": {\n                \"timeout\": 60,\n                \"media\": \"TEXT\",\n                \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n                \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n                \"promptType\": \"TEXT\"\n            },\n            \"stats\": {\n                \"questionId\": 0,\n                \"userId\": 0,\n                \"boxId\": 0,\n                \"skips\": 0,\n                \"lastAswered\": 1514804400000,\n                \"inCorrectAttempts\": 0,\n                \"correctAttempts\": 1\n            },\n            \"kind\": \"SHORT_ANSWER\",\n            \"learningObjectives\": [\n                \"\"\n            ],\n            \"rationale\": \"rationale\",\n            \"tags\": [\n                \"MaxSoft\"\n            ],\n            \"creatorId\": \"osanda12\",\n            \"deckId\": \"5b3772c80b9f171bcb85f170\",\n            \"creatoredType\": \"Manual\",\n            \"creatorPlatform\": \"Web\",\n            \"creatoredSource\": \"App\",\n            \"parentId\": null,\n            \"tempQuestionId\": \"testId\",\n            \"epochTime\": {\n                \"createdAt\": 1530360538734,\n                \"updatedAt\": 1530360538734\n            },\n            \"answers\": [\n                {\n                    \"id\": 1,\n                    \"value\": \"Osanda Deshan\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": false,\n                    \"correct\": false\n                }\n            ],\n            \"id\": \"5b3772dae4b08588e2006974\",\n            \"createdAt\": \"2018-06-30T12:08:58.734Z\",\n            \"updatedAt\": \"2018-06-30T12:08:58.735Z\",\n            \"deleted\": false,\n            \"archived\": false\n        },\n        {\n            \"question\": {\n                \"timeout\": 60,\n                \"media\": \"TEXT\",\n                \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n                \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n                \"promptType\": \"TEXT\"\n            },\n            \"stats\": {\n                \"questionId\": 0,\n                \"userId\": 0,\n                \"boxId\": 0,\n                \"skips\": 0,\n                \"lastAswered\": 1514804400000,\n                \"inCorrectAttempts\": 0,\n                \"correctAttempts\": 1\n            },\n            \"kind\": \"SHORT_ANSWER\",\n            \"learningObjectives\": [\n                \"\"\n            ],\n            \"rationale\": \"rationale\",\n            \"tags\": [\n                \"MaxSoft\"\n            ],\n            \"creatorId\": \"osanda12\",\n            \"deckId\": \"5b3772c80b9f171bcb85f170\",\n            \"creatoredType\": \"Manual\",\n            \"creatorPlatform\": \"Web\",\n            \"creatoredSource\": \"App\",\n            \"parentId\": null,\n            \"tempQuestionId\": \"testId\",\n            \"epochTime\": {\n                \"createdAt\": 1530360536675,\n                \"updatedAt\": 1530360536675\n            },\n            \"answers\": [\n                {\n                    \"id\": 1,\n                    \"value\": \"Osanda Deshan\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": false,\n                    \"correct\": false\n                }\n            ],\n            \"id\": \"5b3772d8e4b08588e2006973\",\n            \"createdAt\": \"2018-06-30T12:08:56.675Z\",\n            \"updatedAt\": \"2018-06-30T12:08:56.676Z\",\n            \"deleted\": false,\n            \"archived\": false\n        },\n        {\n            \"question\": {\n                \"timeout\": 60,\n                \"media\": \"TEXT\",\n                \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n                \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n                \"promptType\": \"TEXT\"\n            },\n            \"stats\": {\n                \"questionId\": 0,\n                \"userId\": 0,\n                \"boxId\": 0,\n                \"skips\": 0,\n                \"lastAswered\": 1514804400000,\n                \"inCorrectAttempts\": 0,\n                \"correctAttempts\": 1\n            },\n            \"kind\": \"MULTIPLE_CHOICE\",\n            \"learningObjectives\": [\n                \"learningObjective1\"\n            ],\n            \"rationale\": \"rationale\",\n            \"tags\": [\n                \"MaxSoft\"\n            ],\n            \"creatorId\": \"osanda12\",\n            \"deckId\": \"5b3772c80b9f171bcb85f170\",\n            \"creatoredType\": \"Manual\",\n            \"creatorPlatform\": \"Web\",\n            \"creatoredSource\": \"App\",\n            \"parentId\": null,\n            \"tempQuestionId\": \"testId\",\n            \"epochTime\": {\n                \"createdAt\": 1530360528849,\n                \"updatedAt\": 1530360528849\n            },\n            \"answers\": [\n                {\n                    \"id\": 4,\n                    \"value\": \"Heshan\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": false,\n                    \"correct\": false\n                },\n                {\n                    \"id\": 5,\n                    \"value\": \"Thilina\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": true,\n                    \"correct\": false\n                },\n                {\n                    \"id\": 3,\n                    \"value\": \"Eranga\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": false,\n                    \"correct\": true\n                },\n                {\n                    \"id\": 2,\n                    \"value\": \"Gemunu\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": true,\n                    \"correct\": true\n                },\n                {\n                    \"id\": 1,\n                    \"value\": \"Osanda\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": true,\n                    \"correct\": false\n                }\n            ],\n            \"correctAnswers\": [\n                1,\n                2\n            ],\n            \"id\": \"5b3772d0e4b08588e200696f\",\n            \"createdAt\": \"2018-06-30T12:08:48.849Z\",\n            \"updatedAt\": \"2018-06-30T12:08:48.850Z\",\n            \"deleted\": false,\n            \"archived\": false\n        },\n        {\n            \"question\": {\n                \"timeout\": 60,\n                \"media\": \"TEXT\",\n                \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n                \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n                \"promptType\": \"TEXT\"\n            },\n            \"stats\": {\n                \"questionId\": 0,\n                \"userId\": 0,\n                \"boxId\": 0,\n                \"skips\": 0,\n                \"lastAswered\": 1514804400000,\n                \"inCorrectAttempts\": 0,\n                \"correctAttempts\": 1\n            },\n            \"kind\": \"MULTIPLE_CHOICE\",\n            \"learningObjectives\": [\n                \"learningObjective1\"\n            ],\n            \"rationale\": \"rationale\",\n            \"tags\": [\n                \"MaxSoft\"\n            ],\n            \"creatorId\": \"osanda12\",\n            \"deckId\": \"5b3772c80b9f171bcb85f170\",\n            \"creatoredType\": \"Manual\",\n            \"creatorPlatform\": \"Web\",\n            \"creatoredSource\": \"App\",\n            \"parentId\": null,\n            \"tempQuestionId\": \"testId\",\n            \"epochTime\": {\n                \"createdAt\": 1530360524083,\n                \"updatedAt\": 1530360524083\n            },\n            \"answers\": [\n                {\n                    \"id\": 5,\n                    \"value\": \"Thilina\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": true,\n                    \"correct\": false\n                },\n                {\n                    \"id\": 2,\n                    \"value\": \"Gemunu\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": true,\n                    \"correct\": true\n                },\n                {\n                    \"id\": 3,\n                    \"value\": \"Eranga\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": false,\n                    \"correct\": true\n                },\n                {\n                    \"id\": 4,\n                    \"value\": \"Heshan\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": false,\n                    \"correct\": false\n                },\n                {\n                    \"id\": 1,\n                    \"value\": \"Osanda\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": true,\n                    \"correct\": false\n                }\n            ],\n            \"correctAnswers\": [\n                1,\n                2\n            ],\n            \"id\": \"5b3772cce4b08588e200696d\",\n            \"createdAt\": \"2018-06-30T12:08:44.083Z\",\n            \"updatedAt\": \"2018-06-30T12:08:44.084Z\",\n            \"deleted\": false,\n            \"archived\": false\n        },\n        {\n            \"question\": {\n                \"timeout\": 60,\n                \"media\": \"TEXT\",\n                \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n                \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n                \"promptType\": \"TEXT\"\n            },\n            \"stats\": {\n                \"questionId\": 0,\n                \"userId\": 0,\n                \"boxId\": 0,\n                \"skips\": 0,\n                \"lastAswered\": 1514804400000,\n                \"inCorrectAttempts\": 0,\n                \"correctAttempts\": 1\n            },\n            \"kind\": \"SHORT_ANSWER\",\n            \"learningObjectives\": [\n                \"\"\n            ],\n            \"rationale\": \"rationale\",\n            \"tags\": [\n                \"MaxSoft\"\n            ],\n            \"creatorId\": \"osanda12\",\n            \"deckId\": \"5b3772c80b9f171bcb85f170\",\n            \"creatoredType\": \"Manual\",\n            \"creatorPlatform\": \"Web\",\n            \"creatoredSource\": \"App\",\n            \"parentId\": null,\n            \"tempQuestionId\": \"testId\",\n            \"epochTime\": {\n                \"createdAt\": 1530360532079,\n                \"updatedAt\": 1530360532079\n            },\n            \"answers\": [\n                {\n                    \"id\": 1,\n                    \"value\": \"Osanda Deshan\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": false,\n                    \"correct\": false\n                }\n            ],\n            \"id\": \"5b3772d4e4b08588e2006971\",\n            \"createdAt\": \"2018-06-30T12:08:52.079Z\",\n            \"updatedAt\": \"2018-06-30T12:08:52.080Z\",\n            \"deleted\": false,\n            \"archived\": false\n        },\n        {\n            \"question\": {\n                \"timeout\": 60,\n                \"media\": \"TEXT\",\n                \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n                \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n                \"promptType\": \"TEXT\"\n            },\n            \"stats\": {\n                \"questionId\": 0,\n                \"userId\": 0,\n                \"boxId\": 0,\n                \"skips\": 0,\n                \"lastAswered\": 1514804400000,\n                \"inCorrectAttempts\": 0,\n                \"correctAttempts\": 1\n            },\n            \"kind\": \"MULTIPLE_CHOICE\",\n            \"learningObjectives\": [\n                \"learningObjective1\"\n            ],\n            \"rationale\": \"rationale\",\n            \"tags\": [\n                \"MaxSoft\"\n            ],\n            \"creatorId\": \"osanda12\",\n            \"deckId\": \"5b3772c80b9f171bcb85f170\",\n            \"creatoredType\": \"Manual\",\n            \"creatorPlatform\": \"Web\",\n            \"creatoredSource\": \"App\",\n            \"parentId\": null,\n            \"tempQuestionId\": \"testId\",\n            \"epochTime\": {\n                \"createdAt\": 1530360522223,\n                \"updatedAt\": 1530360522223\n            },\n            \"answers\": [\n                {\n                    \"id\": 4,\n                    \"value\": \"Heshan\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": false,\n                    \"correct\": false\n                },\n                {\n                    \"id\": 1,\n                    \"value\": \"Osanda\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": true,\n                    \"correct\": false\n                },\n                {\n                    \"id\": 5,\n                    \"value\": \"Thilina\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": true,\n                    \"correct\": false\n                },\n                {\n                    \"id\": 3,\n                    \"value\": \"Eranga\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": false,\n                    \"correct\": true\n                },\n                {\n                    \"id\": 2,\n                    \"value\": \"Gemunu\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": true,\n                    \"correct\": true\n                }\n            ],\n            \"correctAnswers\": [\n                1,\n                2\n            ],\n            \"id\": \"5b3772cae4b08588e200696c\",\n            \"createdAt\": \"2018-06-30T12:08:42.223Z\",\n            \"updatedAt\": \"2018-06-30T12:08:42.225Z\",\n            \"deleted\": false,\n            \"archived\": false\n        },\n        {\n            \"question\": {\n                \"timeout\": 60,\n                \"media\": \"TEXT\",\n                \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n                \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n                \"promptType\": \"TEXT\"\n            },\n            \"stats\": {\n                \"questionId\": 0,\n                \"userId\": 0,\n                \"boxId\": 0,\n                \"skips\": 0,\n                \"lastAswered\": 1514804400000,\n                \"inCorrectAttempts\": 0,\n                \"correctAttempts\": 1\n            },\n            \"kind\": \"ALL\",\n            \"learningObjectives\": [\n                \"learningObjective1\"\n            ],\n            \"rationale\": \"rationale\",\n            \"tags\": [\n                \"MaxSoft\"\n            ],\n            \"creatorId\": \"osanda12\",\n            \"deckId\": \"5b3772c80b9f171bcb85f170\",\n            \"creatoredType\": \"Manual\",\n            \"creatorPlatform\": \"Web\",\n            \"creatoredSource\": \"App\",\n            \"parentId\": null,\n            \"tempQuestionId\": \"testId\",\n            \"epochTime\": {\n                \"createdAt\": 1530360530280,\n                \"updatedAt\": 1530360530280\n            },\n            \"answers\": [\n                {\n                    \"id\": 4,\n                    \"value\": \"Heshan\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": false,\n                    \"correct\": false\n                },\n                {\n                    \"id\": 3,\n                    \"value\": \"Eranga\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": false,\n                    \"correct\": true\n                },\n                {\n                    \"id\": 1,\n                    \"value\": \"Osanda\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": true,\n                    \"correct\": false\n                },\n                {\n                    \"id\": 5,\n                    \"value\": \"Thilina\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": true,\n                    \"correct\": false\n                },\n                {\n                    \"id\": 2,\n                    \"value\": \"Gemunu\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": true,\n                    \"correct\": true\n                }\n            ],\n            \"correctAnswers\": [\n                1,\n                2\n            ],\n            \"id\": \"5b3772d2e4b08588e2006970\",\n            \"deleted\": false,\n            \"archived\": false\n        },\n        {\n            \"question\": {\n                \"timeout\": 60,\n                \"media\": \"TEXT\",\n                \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n                \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n                \"promptType\": \"TEXT\"\n            },\n            \"stats\": {\n                \"questionId\": 0,\n                \"userId\": 0,\n                \"boxId\": 0,\n                \"skips\": 0,\n                \"lastAswered\": 1514804400000,\n                \"inCorrectAttempts\": 0,\n                \"correctAttempts\": 1\n            },\n            \"kind\": \"MULTIPLE_CHOICE\",\n            \"learningObjectives\": [\n                \"learningObjective1\"\n            ],\n            \"rationale\": \"rationale\",\n            \"tags\": [\n                \"MaxSoft\"\n            ],\n            \"creatorId\": \"osanda12\",\n            \"deckId\": \"5b3772c80b9f171bcb85f170\",\n            \"creatoredType\": \"Manual\",\n            \"creatorPlatform\": \"Web\",\n            \"creatoredSource\": \"App\",\n            \"parentId\": null,\n            \"tempQuestionId\": \"testId\",\n            \"epochTime\": {\n                \"createdAt\": 1530360526416,\n                \"updatedAt\": 1530360526416\n            },\n            \"answers\": [\n                {\n                    \"id\": 3,\n                    \"value\": \"Eranga\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": false,\n                    \"correct\": true\n                },\n                {\n                    \"id\": 5,\n                    \"value\": \"Thilina\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": true,\n                    \"correct\": false\n                },\n                {\n                    \"id\": 2,\n                    \"value\": \"Gemunu\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": true,\n                    \"correct\": true\n                },\n                {\n                    \"id\": 1,\n                    \"value\": \"Osanda\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": true,\n                    \"correct\": false\n                },\n                {\n                    \"id\": 4,\n                    \"value\": \"Heshan\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": false,\n                    \"correct\": false\n                }\n            ],\n            \"correctAnswers\": [\n                1,\n                2\n            ],\n            \"id\": \"5b3772cee4b08588e200696e\",\n            \"createdAt\": \"2018-06-30T12:08:46.416Z\",\n            \"updatedAt\": \"2018-06-30T12:08:46.418Z\",\n            \"deleted\": false,\n            \"archived\": false\n        },\n        {\n            \"question\": {\n                \"timeout\": 60,\n                \"media\": \"TEXT\",\n                \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n                \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n                \"promptType\": \"TEXT\"\n            },\n            \"stats\": {\n                \"questionId\": 0,\n                \"userId\": 0,\n                \"boxId\": 0,\n                \"skips\": 0,\n                \"lastAswered\": 1514804400000,\n                \"inCorrectAttempts\": 0,\n                \"correctAttempts\": 1\n            },\n            \"kind\": \"SHORT_ANSWER\",\n            \"learningObjectives\": [\n                \"\"\n            ],\n            \"rationale\": \"rationale\",\n            \"tags\": [\n                \"MaxSoft\"\n            ],\n            \"creatorId\": \"osanda12\",\n            \"deckId\": \"5b3772c80b9f171bcb85f170\",\n            \"creatoredType\": \"Manual\",\n            \"creatorPlatform\": \"Web\",\n            \"creatoredSource\": \"App\",\n            \"parentId\": null,\n            \"tempQuestionId\": \"testId\",\n            \"epochTime\": {\n                \"createdAt\": 1530360534949,\n                \"updatedAt\": 1530360534949\n            },\n            \"answers\": [\n                {\n                    \"id\": 1,\n                    \"value\": \"Osanda Deshan\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": false,\n                    \"correct\": false\n                }\n            ],\n            \"id\": \"5b3772d6e4b08588e2006972\",\n            \"createdAt\": \"2018-06-30T12:08:54.949Z\",\n            \"updatedAt\": \"2018-06-30T12:08:54.950Z\",\n            \"deleted\": false,\n            \"archived\": false\n        }\n    ]\n}\n\n",
									"Response Headers are: \ncorrelation-id=2bb6a5d1-263e-4ac9-bdd4-a3e8d05bf122\nServer=Apache-Coyote/1.1\nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\nX-Application-Context=flashcardservice:dev:8070\nServerTime=2018-06-30 12:09:00\nTransfer-Encoding=chunked\nDate=Sat, 30 Jun 2018 12:09:00 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"200\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.questions.length()",
											"9"
										]
									},
									{
										"cells": [
											"$.questions.[-1:].question.media",
											"TEXT"
										]
									},
									{
										"cells": [
											"$.questions.[-1:].question.promptType",
											"TEXT"
										]
									},
									{
										"cells": [
											"$.questions.[-1:].creatoredSource",
											"App"
										]
									},
									{
										"cells": [
											"$.questions.[-1:].answers.[0].type",
											"TEXT"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 130,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 1,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		}
	],
	"beforeSuiteHookFailure": null,
	"afterSuiteHookFailure": null,
	"passedSpecsCount": 4,
	"failedSpecsCount": 0,
	"skippedSpecsCount": 0,
	"passedScenariosCount": 12,
	"failedScenariosCount": 0,
	"skippedScenariosCount": 0
}