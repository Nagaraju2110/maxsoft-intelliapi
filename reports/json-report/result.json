{
	"projectName": "MaxSoft-IntelliAPI",
	"timestamp": "Jul 4, 2018 at 10:27am",
	"successRate": 0,
	"environment": "default",
	"tags": "",
	"executionTime": 103363,
	"executionStatus": "fail",
	"specResults": [
		{
			"specHeading": "Create All Type Question using Question Service - Negative Data Driven Test Specification2",
			"fileName": "C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Create All Type Question - Negative Data Driven Tests2.spec",
			"tags": [
				"create_question",
				"create_question_all_type",
				"create_question-negative_tests",
				"negative"
			],
			"executionTime": 95967,
			"executionStatus": "fail",
			"scenarios": [
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 9092,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 7359,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 2913,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 286,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 4157,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 2636ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c53b02e02d81b938a79da\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680240457,\n        \"updatedAt\": 1530680240457\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:57:20.457Z\",\n    \"updatedAt\": \"2018-07-04T04:57:20.458Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:57:20 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 3,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 135,
								"skippedReason": "",
								"messages": [
									"\"5b3c53b02e02d81b938a79da\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 225,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manua"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"ALL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"1,2"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 109,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c53b02e02d81b938a79da\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manua\",\n  \"deckId\": \"5b3c53b02e02d81b938a79da\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1263,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 712ms\n\n",
									"Response is: \n{\n    \"message\": \"creatoredType: Invalid value 'Manua'\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=b702bec0-1556-4ef0-90b8-0248e665939c\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:57:22 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"creatoredType: Invalid value 'Manua'"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 0
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 4398,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 2572,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 624,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 180,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1767,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 768ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c53b52e02d81b938a79db\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680245403,\n        \"updatedAt\": 1530680245403\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:57:25.403Z\",\n    \"updatedAt\": \"2018-07-04T04:57:25.405Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:57:25 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"\"5b3c53b52e02d81b938a79db\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 320,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											""
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"ALL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"1,2"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 100,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c53b52e02d81b938a79db\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"\",\n  \"deckId\": \"5b3c53b52e02d81b938a79db\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1405,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 727ms\n\n",
									"Response is: \n{\n    \"message\": \"creatoredType: Invalid value ''\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=e93a967d-545a-4a98-9f6e-1c3c3a7aec4c\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:57:27 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"creatoredType: Invalid value ''"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 1
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 3375,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1561,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 168,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 84,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1309,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 732ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c53b82e02d81b938a79dc\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680248925,\n        \"updatedAt\": 1530680248925\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:57:28.925Z\",\n    \"updatedAt\": \"2018-07-04T04:57:28.926Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:57:28 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"\"5b3c53b82e02d81b938a79dc\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 344,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"AL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"1,2"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 128,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c53b82e02d81b938a79dc\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c53b82e02d81b938a79dc\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"AL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1338,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 706ms\n\n",
									"Response is: \n{\n    \"message\": \"kind: Invalid value 'AL'\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=6bc9f1ec-bb9b-417b-b96d-261a420b3fc1\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:57:30 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"kind: Invalid value 'AL'"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 2
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 3800,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1684,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 319,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 99,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1266,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 703ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c53bc2e02d81b938a79dd\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680252785,\n        \"updatedAt\": 1530680252785\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:57:32.785Z\",\n    \"updatedAt\": \"2018-07-04T04:57:32.786Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:57:32 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"\"5b3c53bc2e02d81b938a79dd\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 242,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											""
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"1,2"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 97,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c53bc2e02d81b938a79dd\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c53bc2e02d81b938a79dd\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1776,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 761ms\n\n",
									"Response is: \n{\n    \"message\": \"kind: Invalid value ''\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=2bcee634-c9a6-40cf-bacc-282fc8c2997e\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:57:34 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"kind: Invalid value ''"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 3
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 3013,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1728,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 264,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 123,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1341,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 696ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c53c02e02d81b938a79de\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680256877,\n        \"updatedAt\": 1530680256877\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:57:36.877Z\",\n    \"updatedAt\": \"2018-07-04T04:57:36.878Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:57:36 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"\"5b3c53c02e02d81b938a79de\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 141,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"ALL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"a"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"1,2"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 57,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c53c02e02d81b938a79de\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c53c02e02d81b938a79de\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": a\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1082,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 698ms\n\n",
									"Response is: \n{\n    \"message\": \"Unrecognized token 'a': was expecting ('true', 'false' or 'null')\\n at [Source: java.io.PushbackInputStream@1d184d36; line: 18, column: 18]\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=386a99f4-5bcb-40b9-a18b-f884e45b6e40\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:57:38 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"Unrecognized token 'a': was expecting ('true', 'false' or 'null')"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 4,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 4
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 3945,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1824,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 294,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 119,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1411,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 701ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c53c42e02d81b938a79df\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680260178,\n        \"updatedAt\": 1530680260178\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:57:40.178Z\",\n    \"updatedAt\": \"2018-07-04T04:57:40.180Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:57:40 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"\"5b3c53c42e02d81b938a79df\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 228,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"ALL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"a"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"1,2"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 139,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c53c42e02d81b938a79df\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c53c42e02d81b938a79df\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": a,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1752,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 715ms\n\n",
									"Response is: \n{\n    \"message\": \"Unrecognized token 'a': was expecting ('true', 'false' or 'null')\\n at [Source: java.io.PushbackInputStream@39d50efa; line: 22, column: 16]\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=4d4c2627-75d2-42f7-a689-3c5caddfb65e\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:57:42 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"Unrecognized token 'a': was expecting ('true', 'false' or 'null')"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 5
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 3221,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1818,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 261,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 132,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1425,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 703ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c53c82e02d81b938a79e0\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680264240,\n        \"updatedAt\": 1530680264240\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:57:44.240Z\",\n    \"updatedAt\": \"2018-07-04T04:57:44.241Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:57:44 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"\"5b3c53c82e02d81b938a79e0\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 174,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"ALL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"a"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"1,2"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 56,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c53c82e02d81b938a79e0\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c53c82e02d81b938a79e0\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": a,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1170,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 715ms\n\n",
									"Response is: \n{\n    \"message\": \"Unrecognized token 'a': was expecting ('true', 'false' or 'null')\\n at [Source: java.io.PushbackInputStream@1721774f; line: 23, column: 26]\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=5de4793f-09fa-426d-8b8a-33794dd785d6\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:57:45 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"Unrecognized token 'a': was expecting ('true', 'false' or 'null')"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 6
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 3749,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1909,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 289,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 97,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1523,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 891ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c53cb2e02d81b938a79e1\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680267866,\n        \"updatedAt\": 1530680267866\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:57:47.866Z\",\n    \"updatedAt\": \"2018-07-04T04:57:47.867Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:57:47 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"\"5b3c53cb2e02d81b938a79e1\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 201,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"ALL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"@"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"1,2"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 107,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c53cb2e02d81b938a79e1\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c53cb2e02d81b938a79e1\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": @,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1529,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 774ms\n\n",
									"Response is: \n{\n    \"message\": \"Unexpected character ('@' (code 64)): expected a valid value (number, String, array, object, 'true', 'false' or 'null')\\n at [Source: java.io.PushbackInputStream@db9b621; line: 23, column: 25]\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=6de8efed-9215-43a0-9460-3c64818cdcc5\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:57:49 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"Unexpected character ('@' (code 64)): expected a valid value (number, String, array, object, 'true', 'false' or 'null')"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 7
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 3358,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1406,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 180,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 73,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1152,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 707ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c53cf2e02d81b938a79e2\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680271389,\n        \"updatedAt\": 1530680271389\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:57:51.389Z\",\n    \"updatedAt\": \"2018-07-04T04:57:51.391Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:57:51 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"\"5b3c53cf2e02d81b938a79e2\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 235,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"ALL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											""
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"1,2"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 127,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c53cf2e02d81b938a79e2\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c53cf2e02d81b938a79e2\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": ,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1587,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 727ms\n\n",
									"Response is: \n{\n    \"message\": \"Unexpected character (',' (code 44)): expected a value\\n at [Source: java.io.PushbackInputStream@3010a980; line: 23, column: 25]\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=2195f892-9023-451f-8845-61d892077a45\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:57:53 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"Unexpected character (',' (code 44)): expected a value"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 8
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 3668,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1705,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 198,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 134,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1373,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 724ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c53d32e02d81b938a79e3\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680275258,\n        \"updatedAt\": 1530680275258\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:57:55.258Z\",\n    \"updatedAt\": \"2018-07-04T04:57:55.260Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:57:55 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"\"5b3c53d32e02d81b938a79e3\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 261,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"ALL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"@"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"1,2"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 138,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c53d32e02d81b938a79e3\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c53d32e02d81b938a79e3\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": @,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1563,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 761ms\n\n",
									"Response is: \n{\n    \"message\": \"Unexpected character ('@' (code 64)): expected a valid value (number, String, array, object, 'true', 'false' or 'null')\\n at [Source: java.io.PushbackInputStream@f42554a; line: 24, column: 27]\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=c1cbdc4e-c5e1-4c9e-83b7-775c086dd87e\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:57:57 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"Unexpected character ('@' (code 64)): expected a valid value (number, String, array, object, 'true', 'false' or 'null')"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 9
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 3044,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1701,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 306,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 82,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1313,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 752ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c53d72e02d81b938a79e4\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680279114,\n        \"updatedAt\": 1530680279114\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:57:59.114Z\",\n    \"updatedAt\": \"2018-07-04T04:57:59.115Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:57:59 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"\"5b3c53d72e02d81b938a79e4\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 184,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"ALL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"a"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"1,2"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 40,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c53d72e02d81b938a79e4\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c53d72e02d81b938a79e4\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": a,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1117,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 699ms\n\n",
									"Response is: \n{\n    \"message\": \"Unrecognized token 'a': was expecting ('true', 'false' or 'null')\\n at [Source: java.io.PushbackInputStream@5566290c; line: 24, column: 28]\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=b702bec0-1556-4ef0-90b8-0248e665939c\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:00 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"Unrecognized token 'a': was expecting ('true', 'false' or 'null')"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 10
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 3414,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1811,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 233,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 133,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1444,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 705ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c53da2e02d81b938a79e5\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680282655,\n        \"updatedAt\": 1530680282655\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:58:02.655Z\",\n    \"updatedAt\": \"2018-07-04T04:58:02.657Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:02 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"\"5b3c53da2e02d81b938a79e5\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 212,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"ALL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"a"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"1,2"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 99,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c53da2e02d81b938a79e5\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c53da2e02d81b938a79e5\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": a,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1289,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 697ms\n\n",
									"Response is: \n{\n    \"message\": \"Unrecognized token 'a': was expecting ('true', 'false' or 'null')\\n at [Source: java.io.PushbackInputStream@41d801a3; line: 26, column: 21]\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=e93a967d-545a-4a98-9f6e-1c3c3a7aec4c\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:04 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"Unrecognized token 'a': was expecting ('true', 'false' or 'null')"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 11
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 3360,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1420,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 146,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 68,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1206,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 699ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c53dd2e02d81b938a79e6\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680285803,\n        \"updatedAt\": 1530680285803\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:58:05.803Z\",\n    \"updatedAt\": \"2018-07-04T04:58:05.804Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:05 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"\"5b3c53dd2e02d81b938a79e6\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 454,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"ALL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"@"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"1,2"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 151,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c53dd2e02d81b938a79e6\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c53dd2e02d81b938a79e6\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": @,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1332,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 739ms\n\n",
									"Response is: \n{\n    \"message\": \"Unexpected character ('@' (code 64)): expected a valid value (number, String, array, object, 'true', 'false' or 'null')\\n at [Source: java.io.PushbackInputStream@785de9d5; line: 26, column: 20]\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=6bc9f1ec-bb9b-417b-b96d-261a420b3fc1\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:07 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"Unexpected character ('@' (code 64)): expected a valid value (number, String, array, object, 'true', 'false' or 'null')"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 12
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 3556,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1731,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 282,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 117,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1332,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 705ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c53e12e02d81b938a79e7\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680289745,\n        \"updatedAt\": 1530680289745\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:58:09.745Z\",\n    \"updatedAt\": \"2018-07-04T04:58:09.747Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:09 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"\"5b3c53e12e02d81b938a79e7\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 254,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"ALL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"@"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"1,2"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 126,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c53e12e02d81b938a79e7\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c53e12e02d81b938a79e7\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": @,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1444,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 705ms\n\n",
									"Response is: \n{\n    \"message\": \"Unexpected character ('@' (code 64)): expected a valid value (number, String, array, object, 'true', 'false' or 'null')\\n at [Source: java.io.PushbackInputStream@698800ca; line: 27, column: 15]\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=2bcee634-c9a6-40cf-bacc-282fc8c2997e\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:11 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"Unexpected character ('@' (code 64)): expected a valid value (number, String, array, object, 'true', 'false' or 'null')"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 13
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 3060,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1319,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 157,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 69,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1093,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 706ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c53e52e02d81b938a79e8\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680293019,\n        \"updatedAt\": 1530680293019\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:58:13.019Z\",\n    \"updatedAt\": \"2018-07-04T04:58:13.022Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:13 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"\"5b3c53e52e02d81b938a79e8\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 250,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"ALL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"a"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"1,2"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 104,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c53e52e02d81b938a79e8\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c53e52e02d81b938a79e8\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": a,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1386,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 708ms\n\n",
									"Response is: \n{\n    \"message\": \"Unrecognized token 'a': was expecting ('true', 'false' or 'null')\\n at [Source: java.io.PushbackInputStream@64d7e0da; line: 27, column: 16]\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=386a99f4-5bcb-40b9-a18b-f884e45b6e40\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:14 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"Unrecognized token 'a': was expecting ('true', 'false' or 'null')"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 14
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 3288,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1660,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 269,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 146,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1245,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 700ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c53e82e02d81b938a79e9\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680296700,\n        \"updatedAt\": 1530680296700\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:58:16.700Z\",\n    \"updatedAt\": \"2018-07-04T04:58:16.701Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:16 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [
									"\"5b3c53e82e02d81b938a79e9\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 202,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"ALL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"a"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"1,2"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 97,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c53e82e02d81b938a79e9\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c53e82e02d81b938a79e9\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": a\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1326,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 694ms\n\n",
									"Response is: \n{\n    \"message\": \"Unrecognized token 'a': was expecting ('true', 'false' or 'null')\\n at [Source: java.io.PushbackInputStream@6790601e; line: 28, column: 17]\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=4d4c2627-75d2-42f7-a689-3c5caddfb65e\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:18 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"Unrecognized token 'a': was expecting ('true', 'false' or 'null')"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 15
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 3085,
					"executionStatus": "fail",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1303,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 159,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 71,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1073,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 696ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c53eb2e02d81b938a79ea\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680299777,\n        \"updatedAt\": 1530680299777\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:58:19.777Z\",\n    \"updatedAt\": \"2018-07-04T04:58:19.779Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:19 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"\"5b3c53eb2e02d81b938a79ea\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 198,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"ALL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"@"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"1,2"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 126,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c53eb2e02d81b938a79ea\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c53eb2e02d81b938a79ea\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": @\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1453,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 698ms\n\n",
									"Response is: \n{\n    \"message\": \"Unexpected character ('@' (code 64)): expected a valid value (number, String, array, object, 'true', 'false' or 'null')\\n at [Source: java.io.PushbackInputStream@23f87dc7; line: 28, column: 16]\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=5de4793f-09fa-426d-8b8a-33794dd785d6\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:21 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"Unexpected character (‘@’ (code 64)): expected a valid value (number, String, array, object, ‘true’, ‘false’ or ‘null’)"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "fail",
								"stackTrace": "org.testng.Assert.fail(Assert.java:94)\norg.testng.Assert.failNotEquals(Assert.java:494)\norg.testng.Assert.assertTrue(Assert.java:42)\ncom.maxsoft.intelliapi.api.Base.jsonPathValueContains(Base.java:1181)\ncom.maxsoft.intelliapi.api.ApiStepImpl.jsonPathValueContains(ApiStepImpl.java:362)\ncom.maxsoft.intelliapi.stepdefinition.AllStepsDefinitions.jsonPathValueContains(AllStepsDefinitions.java:164)\nsun.reflect.GeneratedMethodAccessor135.invoke(Unknown Source)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\ncom.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)\ncom.thoughtworks.gauge.execution.StepExecutionStage.executeStepMethod(StepExecutionStage.java:74)\ncom.thoughtworks.gauge.execution.StepExecutionStage.executeStep(StepExecutionStage.java:67)\ncom.thoughtworks.gauge.execution.StepExecutionStage.execute(StepExecutionStage.java:49)\ncom.thoughtworks.gauge.execution.AbstractExecutionStage.executeNext(AbstractExecutionStage.java:24)\ncom.thoughtworks.gauge.execution.HookExecutionStage.execute(HookExecutionStage.java:43)\ncom.thoughtworks.gauge.execution.ExecutionPipeline.start(ExecutionPipeline.java:29)\ncom.thoughtworks.gauge.processor.ExecuteStepProcessor.process(ExecuteStepProcessor.java:41)\ncom.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:91)\ncom.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:105)\ncom.thoughtworks.gauge.GaugeRuntime.access$100(GaugeRuntime.java:37)\ncom.thoughtworks.gauge.GaugeRuntime$2.run(GaugeRuntime.java:86)\njava.lang.Thread.run(Thread.java:745)\n",
								"screenshot": "",
								"errorMessage": "java.lang.AssertionError: JSON Path value for the \"$.message\" is not contains the expected value.\nJSON Path value is: Unexpected character ('@' (code 64)): expected a valid value (number, String, array, object, 'true', 'false' or 'null')\n at [Source: java.io.PushbackInputStream@23f87dc7; line: 28, column: 16]\nExpected value to be contained is: Unexpected character (‘@’ (code 64)): expected a valid value (number, String, array, object, ‘true’, ‘false’ or ‘null’)\n\n expected [true] but found [false]",
								"executionTime": 4,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 16
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 3447,
					"executionStatus": "fail",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1518,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 281,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 98,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1139,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 710ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c53ef2e02d81b938a79eb\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680303558,\n        \"updatedAt\": 1530680303558\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:58:23.558Z\",\n    \"updatedAt\": \"2018-07-04T04:58:23.559Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:23 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"\"5b3c53ef2e02d81b938a79eb\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 314,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"ALL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"a"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 209,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c53ef2e02d81b938a79eb\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c53ef2e02d81b938a79eb\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        a\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1405,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 698ms\n\n",
									"Response is: \n{\n    \"message\": \"Unrecognized token 'a': was expecting ('true', 'false' or 'null')\\n at [Source: java.io.PushbackInputStream@55a4693a; line: 31, column: 11]\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=6de8efed-9215-43a0-9460-3c64818cdcc5\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:25 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"Unrecognized token ‘a’: was expecting (‘true’, ‘false’ or ‘null’)"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "fail",
								"stackTrace": "org.testng.Assert.fail(Assert.java:94)\norg.testng.Assert.failNotEquals(Assert.java:494)\norg.testng.Assert.assertTrue(Assert.java:42)\ncom.maxsoft.intelliapi.api.Base.jsonPathValueContains(Base.java:1181)\ncom.maxsoft.intelliapi.api.ApiStepImpl.jsonPathValueContains(ApiStepImpl.java:362)\ncom.maxsoft.intelliapi.stepdefinition.AllStepsDefinitions.jsonPathValueContains(AllStepsDefinitions.java:164)\nsun.reflect.GeneratedMethodAccessor135.invoke(Unknown Source)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\ncom.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)\ncom.thoughtworks.gauge.execution.StepExecutionStage.executeStepMethod(StepExecutionStage.java:74)\ncom.thoughtworks.gauge.execution.StepExecutionStage.executeStep(StepExecutionStage.java:67)\ncom.thoughtworks.gauge.execution.StepExecutionStage.execute(StepExecutionStage.java:49)\ncom.thoughtworks.gauge.execution.AbstractExecutionStage.executeNext(AbstractExecutionStage.java:24)\ncom.thoughtworks.gauge.execution.HookExecutionStage.execute(HookExecutionStage.java:43)\ncom.thoughtworks.gauge.execution.ExecutionPipeline.start(ExecutionPipeline.java:29)\ncom.thoughtworks.gauge.processor.ExecuteStepProcessor.process(ExecuteStepProcessor.java:41)\ncom.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:91)\ncom.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:105)\ncom.thoughtworks.gauge.GaugeRuntime.access$100(GaugeRuntime.java:37)\ncom.thoughtworks.gauge.GaugeRuntime$2.run(GaugeRuntime.java:86)\njava.lang.Thread.run(Thread.java:745)\n",
								"screenshot": "",
								"errorMessage": "java.lang.AssertionError: JSON Path value for the \"$.message\" is not contains the expected value.\nJSON Path value is: Unrecognized token 'a': was expecting ('true', 'false' or 'null')\n at [Source: java.io.PushbackInputStream@55a4693a; line: 31, column: 11]\nExpected value to be contained is: Unrecognized token ‘a’: was expecting (‘true’, ‘false’ or ‘null’)\n\n expected [true] but found [false]",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 17
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 3256,
					"executionStatus": "fail",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1396,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 178,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 88,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1130,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 696ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c53f32e02d81b938a79ec\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680307029,\n        \"updatedAt\": 1530680307029\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:58:27.029Z\",\n    \"updatedAt\": \"2018-07-04T04:58:27.031Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:27 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"\"5b3c53f32e02d81b938a79ec\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 224,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"ALL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"@"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 216,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c53f32e02d81b938a79ec\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c53f32e02d81b938a79ec\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        @\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1419,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 703ms\n\n",
									"Response is: \n{\n    \"message\": \"Unexpected character ('@' (code 64)): expected a valid value (number, String, array, object, 'true', 'false' or 'null')\\n at [Source: java.io.PushbackInputStream@140173f4; line: 31, column: 10]\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=2195f892-9023-451f-8845-61d892077a45\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:29 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"Unexpected character (‘@’ (code 64)): expected a valid value (number, String, array, object, ‘true’, ‘false’ or ‘null’)"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "fail",
								"stackTrace": "org.testng.Assert.fail(Assert.java:94)\norg.testng.Assert.failNotEquals(Assert.java:494)\norg.testng.Assert.assertTrue(Assert.java:42)\ncom.maxsoft.intelliapi.api.Base.jsonPathValueContains(Base.java:1181)\ncom.maxsoft.intelliapi.api.ApiStepImpl.jsonPathValueContains(ApiStepImpl.java:362)\ncom.maxsoft.intelliapi.stepdefinition.AllStepsDefinitions.jsonPathValueContains(AllStepsDefinitions.java:164)\nsun.reflect.GeneratedMethodAccessor135.invoke(Unknown Source)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\ncom.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)\ncom.thoughtworks.gauge.execution.StepExecutionStage.executeStepMethod(StepExecutionStage.java:74)\ncom.thoughtworks.gauge.execution.StepExecutionStage.executeStep(StepExecutionStage.java:67)\ncom.thoughtworks.gauge.execution.StepExecutionStage.execute(StepExecutionStage.java:49)\ncom.thoughtworks.gauge.execution.AbstractExecutionStage.executeNext(AbstractExecutionStage.java:24)\ncom.thoughtworks.gauge.execution.HookExecutionStage.execute(HookExecutionStage.java:43)\ncom.thoughtworks.gauge.execution.ExecutionPipeline.start(ExecutionPipeline.java:29)\ncom.thoughtworks.gauge.processor.ExecuteStepProcessor.process(ExecuteStepProcessor.java:41)\ncom.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:91)\ncom.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:105)\ncom.thoughtworks.gauge.GaugeRuntime.access$100(GaugeRuntime.java:37)\ncom.thoughtworks.gauge.GaugeRuntime$2.run(GaugeRuntime.java:86)\njava.lang.Thread.run(Thread.java:745)\n",
								"screenshot": "",
								"errorMessage": "java.lang.AssertionError: JSON Path value for the \"$.message\" is not contains the expected value.\nJSON Path value is: Unexpected character ('@' (code 64)): expected a valid value (number, String, array, object, 'true', 'false' or 'null')\n at [Source: java.io.PushbackInputStream@140173f4; line: 31, column: 10]\nExpected value to be contained is: Unexpected character (‘@’ (code 64)): expected a valid value (number, String, array, object, ‘true’, ‘false’ or ‘null’)\n\n expected [true] but found [false]",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 18
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 2882,
					"executionStatus": "fail",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1582,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 209,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 87,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1285,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 751ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c53f72e02d81b938a79ed\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680311113,\n        \"updatedAt\": 1530680311113\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:58:31.113Z\",\n    \"updatedAt\": \"2018-07-04T04:58:31.114Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:31 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"\"5b3c53f72e02d81b938a79ed\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 140,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"ALL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"\"\""
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 76,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c53f72e02d81b938a79ed\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c53f72e02d81b938a79ed\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        \"\"\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1084,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 692ms\n\n",
									"Response is: \n{\n    \"message\": \"'correctAnswers' cannot be null or empty\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=c1cbdc4e-c5e1-4c9e-83b7-775c086dd87e\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:32 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "fail",
								"stackTrace": "org.testng.Assert.fail(Assert.java:94)\norg.testng.Assert.failNotEquals(Assert.java:494)\norg.testng.Assert.assertEquals(Assert.java:123)\norg.testng.Assert.assertEquals(Assert.java:176)\ncom.maxsoft.intelliapi.api.Base.isResponseStatusCodeEqualTo(Base.java:1094)\ncom.maxsoft.intelliapi.api.ApiStepImpl.isResponseStatusCodeEqualTo(ApiStepImpl.java:351)\ncom.maxsoft.intelliapi.stepdefinition.AllStepsDefinitions.verifyResponseStatusCode(AllStepsDefinitions.java:158)\nsun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\ncom.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)\ncom.thoughtworks.gauge.execution.StepExecutionStage.executeStepMethod(StepExecutionStage.java:74)\ncom.thoughtworks.gauge.execution.StepExecutionStage.executeStep(StepExecutionStage.java:67)\ncom.thoughtworks.gauge.execution.StepExecutionStage.execute(StepExecutionStage.java:49)\ncom.thoughtworks.gauge.execution.AbstractExecutionStage.executeNext(AbstractExecutionStage.java:24)\ncom.thoughtworks.gauge.execution.HookExecutionStage.execute(HookExecutionStage.java:43)\ncom.thoughtworks.gauge.execution.ExecutionPipeline.start(ExecutionPipeline.java:29)\ncom.thoughtworks.gauge.processor.ExecuteStepProcessor.process(ExecuteStepProcessor.java:41)\ncom.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:91)\ncom.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:105)\ncom.thoughtworks.gauge.GaugeRuntime.access$100(GaugeRuntime.java:37)\ncom.thoughtworks.gauge.GaugeRuntime$2.run(GaugeRuntime.java:86)\njava.lang.Thread.run(Thread.java:745)\n",
								"screenshot": "",
								"errorMessage": "java.lang.AssertionError: The expected status code for the request is not equal to the actual status code\n expected [400] but found [404]",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"'correctAnswers' cannot be null or empty"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "not executed",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 19
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 3220,
					"executionStatus": "fail",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1419,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 63,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 33,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1323,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 703ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c53f92e02d81b938a79ee\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680313916,\n        \"updatedAt\": 1530680313916\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:58:33.916Z\",\n    \"updatedAt\": \"2018-07-04T04:58:33.917Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:33 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"\"5b3c53f92e02d81b938a79ee\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 212,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"ALL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"null"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 110,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c53f92e02d81b938a79ee\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c53f92e02d81b938a79ee\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        null\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1478,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 698ms\n\n",
									"Response is: \n{\n    \"message\": \"'correctAnswers' cannot be null or empty\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=b702bec0-1556-4ef0-90b8-0248e665939c\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:35 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "fail",
								"stackTrace": "org.testng.Assert.fail(Assert.java:94)\norg.testng.Assert.failNotEquals(Assert.java:494)\norg.testng.Assert.assertEquals(Assert.java:123)\norg.testng.Assert.assertEquals(Assert.java:176)\ncom.maxsoft.intelliapi.api.Base.isResponseStatusCodeEqualTo(Base.java:1094)\ncom.maxsoft.intelliapi.api.ApiStepImpl.isResponseStatusCodeEqualTo(ApiStepImpl.java:351)\ncom.maxsoft.intelliapi.stepdefinition.AllStepsDefinitions.verifyResponseStatusCode(AllStepsDefinitions.java:158)\nsun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.lang.reflect.Method.invoke(Method.java:498)\ncom.thoughtworks.gauge.execution.MethodExecutor.execute(MethodExecutor.java:38)\ncom.thoughtworks.gauge.execution.StepExecutionStage.executeStepMethod(StepExecutionStage.java:74)\ncom.thoughtworks.gauge.execution.StepExecutionStage.executeStep(StepExecutionStage.java:67)\ncom.thoughtworks.gauge.execution.StepExecutionStage.execute(StepExecutionStage.java:49)\ncom.thoughtworks.gauge.execution.AbstractExecutionStage.executeNext(AbstractExecutionStage.java:24)\ncom.thoughtworks.gauge.execution.HookExecutionStage.execute(HookExecutionStage.java:43)\ncom.thoughtworks.gauge.execution.ExecutionPipeline.start(ExecutionPipeline.java:29)\ncom.thoughtworks.gauge.processor.ExecuteStepProcessor.process(ExecuteStepProcessor.java:41)\ncom.thoughtworks.gauge.connection.MessageDispatcher.dispatchMessages(MessageDispatcher.java:91)\ncom.thoughtworks.gauge.GaugeRuntime.dispatchMessages(GaugeRuntime.java:105)\ncom.thoughtworks.gauge.GaugeRuntime.access$100(GaugeRuntime.java:37)\ncom.thoughtworks.gauge.GaugeRuntime$2.run(GaugeRuntime.java:86)\njava.lang.Thread.run(Thread.java:745)\n",
								"screenshot": "",
								"errorMessage": "java.lang.AssertionError: The expected status code for the request is not equal to the actual status code\n expected [400] but found [404]",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"'correctAnswers' cannot be null or empty"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "not executed",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 20
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 3345,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1783,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 246,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 173,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1362,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 706ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c53fd2e02d81b938a79ef\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680317608,\n        \"updatedAt\": 1530680317608\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:58:37.608Z\",\n    \"updatedAt\": \"2018-07-04T04:58:37.610Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:37 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"\"5b3c53fd2e02d81b938a79ef\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 193,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"ALL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"1,2"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"\"a\""
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 104,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c53fd2e02d81b938a79ef\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c53fd2e02d81b938a79ef\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": \"a\",\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1264,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 696ms\n\n",
									"Response is: \n{\n    \"message\": \"answers: Invalid value 'a'\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=2bcee634-c9a6-40cf-bacc-282fc8c2997e\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:39 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"answers: Invalid value 'a'"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 21
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 2966,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1213,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 128,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 80,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1005,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 691ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c54002e02d81b938a79f0\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680320639,\n        \"updatedAt\": 1530680320639\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:58:40.639Z\",\n    \"updatedAt\": \"2018-07-04T04:58:40.640Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:40 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"\"5b3c54002e02d81b938a79f0\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 281,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"ALL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"1,2"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"\"@\""
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 130,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c54002e02d81b938a79f0\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c54002e02d81b938a79f0\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": \"@\",\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1341,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 700ms\n\n",
									"Response is: \n{\n    \"message\": \"answers: Invalid value '@'\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=386a99f4-5bcb-40b9-a18b-f884e45b6e40\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:42 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"answers: Invalid value '@'"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 22
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 3001,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1360,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 167,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 74,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1119,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 714ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c54032e02d81b938a79f1\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680323852,\n        \"updatedAt\": 1530680323852\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:58:43.852Z\",\n    \"updatedAt\": \"2018-07-04T04:58:43.853Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:43 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"\"5b3c54032e02d81b938a79f1\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 270,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"ALL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"1,2"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"\"a\""
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 81,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c54032e02d81b938a79f1\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c54032e02d81b938a79f1\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": \"a\",\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1289,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 703ms\n\n",
									"Response is: \n{\n    \"message\": \"answers: Invalid value 'a'\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=4d4c2627-75d2-42f7-a689-3c5caddfb65e\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:45 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"answers: Invalid value 'a'"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 23
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 3385,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1553,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 196,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 83,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1274,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 703ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c54072e02d81b938a79f2\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680327220,\n        \"updatedAt\": 1530680327220\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:58:47.220Z\",\n    \"updatedAt\": \"2018-07-04T04:58:47.221Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:47 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"\"5b3c54072e02d81b938a79f2\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 263,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"ALL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"1,2"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"\"@\""
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 125,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c54072e02d81b938a79f2\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c54072e02d81b938a79f2\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": \"@\",\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1444,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 714ms\n\n",
									"Response is: \n{\n    \"message\": \"answers: Invalid value '@'\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=5de4793f-09fa-426d-8b8a-33794dd785d6\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:49 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"answers: Invalid value '@'"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 24
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 3395,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1721,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 228,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 91,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1402,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 698ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c540a2e02d81b938a79f3\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680330909,\n        \"updatedAt\": 1530680330909\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:58:50.909Z\",\n    \"updatedAt\": \"2018-07-04T04:58:50.910Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:50 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"\"5b3c540a2e02d81b938a79f3\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 194,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											"AL"
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											""
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"1,2"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 91,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c540a2e02d81b938a79f3\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c540a2e02d81b938a79f3\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"AL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1388,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 708ms\n\n",
									"Response is: \n{\n    \"message\": \"kind: Invalid value 'AL'\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=6de8efed-9215-43a0-9460-3c64818cdcc5\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:52 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"kind: Invalid value 'AL'"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 25
				},
				{
					"scenarioHeading": "Create a question negative tests",
					"tags": [],
					"executionTime": 2644,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 1444,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 161,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"test description"
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00 AM"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"5"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"34"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 76,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": \"test description\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInfo\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00 AM\",\n    \"notificationFrequency\": \"5\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1207,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://10.199.253.187:8090/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 695ms\n\n",
											"Response is: \n{\n    \"id\": \"5b3c540e2e02d81b938a79f4\",\n    \"title\": \"API Deck3\",\n    \"description\": \"test description\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1512021142001,\n        \"price\": 777.0,\n        \"sku\": \"com.pearson.smartflashcards.test3\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00 AM\",\n        \"notificationFrequency\": \"5\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1530680334319,\n        \"updatedAt\": 1530680334319\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-07-04T04:58:54.319Z\",\n    \"updatedAt\": \"2018-07-04T04:58:54.320Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nX-Application-Context=application:dev:8090\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:54 GMT"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"\"5b3c540e2e02d81b938a79f4\" is successfully saved as a text in Scenario Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \u003capi\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 116,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#creatorId",
											"n",
											"",
											"",
											"osanda12"
										]
									},
									{
										"cells": [
											"#creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"#creatoredSource",
											"n",
											"",
											"",
											"App"
										]
									},
									{
										"cells": [
											"#creatoredType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"scenario",
											"deckId",
											""
										]
									},
									{
										"cells": [
											"#kind",
											"n",
											"",
											"",
											""
										]
									},
									{
										"cells": [
											"#isDeleted",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tempQuestionId",
											"n",
											"",
											"",
											"testId"
										]
									},
									{
										"cells": [
											"#learningObjectives",
											"n",
											"",
											"",
											"learningObjective1"
										]
									},
									{
										"cells": [
											"#imageUrl",
											"n",
											"",
											"",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#media",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#questionPrompt",
											"n",
											"",
											"",
											"Who is the owner of MaxSoft?"
										]
									},
									{
										"cells": [
											"#promptType",
											"n",
											"",
											"",
											"TEX"
										]
									},
									{
										"cells": [
											"#timeout",
											"n",
											"",
											"",
											"60"
										]
									},
									{
										"cells": [
											"#rationale",
											"n",
											"",
											"",
											"rationale"
										]
									},
									{
										"cells": [
											"#boxId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAttempts",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#inCorrectAttempts",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#lastAswered",
											"n",
											"",
											"",
											"2018-01-01T12:00:00+01:00"
										]
									},
									{
										"cells": [
											"#questionId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#skips",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#userId",
											"n",
											"",
											"",
											"0"
										]
									},
									{
										"cells": [
											"#correctAnswerList",
											"n",
											"",
											"",
											"1,2"
										]
									},
									{
										"cells": [
											"#answer1Id",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#answer1Value",
											"n",
											"",
											"",
											"Red"
										]
									},
									{
										"cells": [
											"#answer1Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer1CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer2Id",
											"n",
											"",
											"",
											"2"
										]
									},
									{
										"cells": [
											"#answer2Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer2Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer2CaseSensitive",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#answer3Id",
											"n",
											"",
											"",
											"3"
										]
									},
									{
										"cells": [
											"#answer3Value",
											"n",
											"",
											"",
											"White"
										]
									},
									{
										"cells": [
											"#answer3Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer3CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer4Id",
											"n",
											"",
											"",
											"4"
										]
									},
									{
										"cells": [
											"#answer4Value",
											"n",
											"",
											"",
											"Blue"
										]
									},
									{
										"cells": [
											"#answer4Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer4CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#answer5Id",
											"n",
											"",
											"",
											"5"
										]
									},
									{
										"cells": [
											"#answer5Value",
											"n",
											"",
											"",
											"Orange"
										]
									},
									{
										"cells": [
											"#answer5Type",
											"n",
											"",
											"",
											"TEXT"
										]
									},
									{
										"cells": [
											"#answer5CaseSensitive",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"#tags",
											"n",
											"",
											"",
											"MaxSoft"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 68,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckId] is: \"5b3c540e2e02d81b938a79f4\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b3c540e2e02d81b938a79f4\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft?\",\n    \"promptType\": \"TEX\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Red\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"White\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Blue\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Orange\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1011,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://10.199.253.187:8075/api/questions\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 689ms\n\n",
									"Response is: \n{\n    \"message\": \"kind: Invalid value ''\",\n    \"description\": null,\n    \"fieldErrors\": null\n}\n\n",
									"Response Headers are: \nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\ncorrelation-id=2195f892-9023-451f-8845-61d892077a45\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Wed, 04 Jul 2018 04:58:55 GMT\nConnection=close"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.message",
											"kind: Invalid value ''"
										]
									},
									{
										"cells": [
											"$.description",
											"null"
										]
									},
									{
										"cells": [
											"$.fieldErrors",
											"null"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 5,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 26
				}
			],
			"isTableDriven": true,
			"datatable": {
				"headers": [
					"scenario",
					"api",
					"creatorId",
					"creatorPlatform",
					"creatoredSource",
					"creatoredType",
					"deckId",
					"tempQuestionId",
					"kind",
					"isDeleted",
					"learningObjectives",
					"imageUrl",
					"media",
					"prompt",
					"promptType",
					"timeout",
					"rationale",
					"boxId",
					"correctAttempts",
					"inCorrectAttempts",
					"lastAswered",
					"questionId",
					"skips",
					"userId",
					"correctAnswerList",
					"answer1Id",
					"answer1Value",
					"answer1Type",
					"answer1CaseSensitive",
					"answer2Id",
					"answer2Value",
					"answer2Type",
					"answer2CaseSensitive",
					"answer3Id",
					"answer3Value",
					"answer3Type",
					"answer3CaseSensitive",
					"answer4Id",
					"answer4Value",
					"answer4Type",
					"answer4CaseSensitive",
					"answer5Id",
					"answer5Value",
					"answer5Type",
					"answer5CaseSensitive",
					"tags",
					"message",
					"description",
					"fieldErrors"
				],
				"rows": [
					{
						"cells": [
							"Create a question using an invalid creatoredType",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manua",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"ALL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"60",
							"rationale",
							"0",
							"1",
							"0",
							"2018-01-01T12:00:00+01:00",
							"0",
							"0",
							"0",
							"1,2",
							"1",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"creatoredType: Invalid value 'Manua'",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using an empty creatoredType",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"ALL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"60",
							"rationale",
							"0",
							"1",
							"0",
							"2018-01-01T12:00:00+01:00",
							"0",
							"0",
							"0",
							"1,2",
							"1",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"creatoredType: Invalid value ''",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using an invalid kind",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"AL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"60",
							"rationale",
							"0",
							"1",
							"0",
							"2018-01-01T12:00:00+01:00",
							"0",
							"0",
							"0",
							"1,2",
							"1",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"kind: Invalid value 'AL'",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using an empty kind",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"60",
							"rationale",
							"0",
							"1",
							"0",
							"2018-01-01T12:00:00+01:00",
							"0",
							"0",
							"0",
							"1,2",
							"1",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"kind: Invalid value ''",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using a string as the timeout",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"ALL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"a",
							"rationale",
							"0",
							"1",
							"0",
							"2018-01-01T12:00:00+01:00",
							"0",
							"0",
							"0",
							"1,2",
							"1",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"Unrecognized token 'a': was expecting ('true', 'false' or 'null')",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using a string value as the boxId",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"ALL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"60",
							"rationale",
							"a",
							"1",
							"0",
							"2018-01-01T12:00:00+01:00",
							"0",
							"0",
							"0",
							"1,2",
							"1",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"Unrecognized token 'a': was expecting ('true', 'false' or 'null')",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using a string value as the correctAttempts",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"ALL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"60",
							"rationale",
							"0",
							"a",
							"0",
							"2018-01-01T12:00:00+01:00",
							"0",
							"0",
							"0",
							"1,2",
							"1",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"Unrecognized token 'a': was expecting ('true', 'false' or 'null')",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using a special characters value as the correctAttempts",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"ALL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"60",
							"rationale",
							"0",
							"@",
							"0",
							"2018-01-01T12:00:00+01:00",
							"0",
							"0",
							"0",
							"1,2",
							"1",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"Unexpected character ('@' (code 64)): expected a valid value (number, String, array, object, 'true', 'false' or 'null')",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using an empty value as the correctAttempts",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"ALL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"60",
							"rationale",
							"0",
							"",
							"0",
							"2018-01-01T12:00:00+01:00",
							"0",
							"0",
							"0",
							"1,2",
							"1",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"Unexpected character (',' (code 44)): expected a value",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using a special characters value as the inCorrectAttempts",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"ALL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"60",
							"rationale",
							"0",
							"1",
							"@",
							"2018-01-01T12:00:00+01:00",
							"0",
							"0",
							"0",
							"1,2",
							"1",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"Unexpected character ('@' (code 64)): expected a valid value (number, String, array, object, 'true', 'false' or 'null')",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using a string value as the inCorrectAttempts",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"ALL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"60",
							"rationale",
							"0",
							"1",
							"a",
							"2018-01-01T12:00:00+01:00",
							"0",
							"0",
							"0",
							"1,2",
							"1",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"Unrecognized token 'a': was expecting ('true', 'false' or 'null')",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using a string value as the questionId",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"ALL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"60",
							"rationale",
							"0",
							"1",
							"0",
							"2018-01-01T12:00:00+01:00",
							"a",
							"0",
							"0",
							"1,2",
							"1",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"Unrecognized token 'a': was expecting ('true', 'false' or 'null')",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using a special characters value as the questionId",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"ALL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"60",
							"rationale",
							"0",
							"1",
							"0",
							"2018-01-01T12:00:00+01:00",
							"@",
							"0",
							"0",
							"1,2",
							"1",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"Unexpected character ('@' (code 64)): expected a valid value (number, String, array, object, 'true', 'false' or 'null')",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using a special characters value as the skips",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"ALL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"60",
							"rationale",
							"0",
							"1",
							"0",
							"2018-01-01T12:00:00+01:00",
							"0",
							"@",
							"0",
							"1,2",
							"1",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"Unexpected character ('@' (code 64)): expected a valid value (number, String, array, object, 'true', 'false' or 'null')",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using a string value as the skips",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"ALL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"60",
							"rationale",
							"0",
							"1",
							"0",
							"2018-01-01T12:00:00+01:00",
							"0",
							"a",
							"0",
							"1,2",
							"1",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"Unrecognized token 'a': was expecting ('true', 'false' or 'null')",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using a string value as the userId",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"ALL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"60",
							"rationale",
							"0",
							"1",
							"0",
							"2018-01-01T12:00:00+01:00",
							"0",
							"0",
							"a",
							"1,2",
							"1",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"Unrecognized token 'a': was expecting ('true', 'false' or 'null')",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using a special character as the userId",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"ALL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"60",
							"rationale",
							"0",
							"1",
							"0",
							"2018-01-01T12:00:00+01:00",
							"0",
							"0",
							"@",
							"1,2",
							"1",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"Unexpected character (‘@’ (code 64)): expected a valid value (number, String, array, object, ‘true’, ‘false’ or ‘null’)",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using a string value as the correctAnswerList",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"ALL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"60",
							"rationale",
							"0",
							"1",
							"0",
							"2018-01-01T12:00:00+01:00",
							"0",
							"0",
							"0",
							"a",
							"1",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"Unrecognized token ‘a’: was expecting (‘true’, ‘false’ or ‘null’)",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using a special character as the correctAnswerList",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"ALL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"60",
							"rationale",
							"0",
							"1",
							"0",
							"2018-01-01T12:00:00+01:00",
							"0",
							"0",
							"0",
							"@",
							"1",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"Unexpected character (‘@’ (code 64)): expected a valid value (number, String, array, object, ‘true’, ‘false’ or ‘null’)",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using an empty string as the correctAnswerList",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"ALL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"60",
							"rationale",
							"0",
							"1",
							"0",
							"2018-01-01T12:00:00+01:00",
							"0",
							"0",
							"0",
							"\"\"",
							"1",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"'correctAnswers' cannot be null or empty",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using null value as the correctAnswerList",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"ALL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"60",
							"rationale",
							"0",
							"1",
							"0",
							"2018-01-01T12:00:00+01:00",
							"0",
							"0",
							"0",
							"null",
							"1",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"'correctAnswers' cannot be null or empty",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using a string value as the answer1Id",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"ALL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"60",
							"rationale",
							"0",
							"1",
							"0",
							"2018-01-01T12:00:00+01:00",
							"0",
							"0",
							"0",
							"1,2",
							"\"a\"",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"answers: Invalid value 'a'",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using a special character as the answer1Id",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"ALL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"60",
							"rationale",
							"0",
							"1",
							"0",
							"2018-01-01T12:00:00+01:00",
							"0",
							"0",
							"0",
							"1,2",
							"\"@\"",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"answers: Invalid value '@'",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using a string value as the answer2Id",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"ALL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"60",
							"rationale",
							"0",
							"1",
							"0",
							"2018-01-01T12:00:00+01:00",
							"0",
							"0",
							"0",
							"1,2",
							"1",
							"Red",
							"TEXT",
							"true",
							"\"a\"",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"answers: Invalid value 'a'",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using a special character as the answer2Id",
							"Create All Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"ALL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEXT",
							"60",
							"rationale",
							"0",
							"1",
							"0",
							"2018-01-01T12:00:00+01:00",
							"0",
							"0",
							"0",
							"1,2",
							"1",
							"Red",
							"TEXT",
							"true",
							"\"@\"",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"answers: Invalid value '@'",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using an empty questionPrompt",
							"Create MCQ Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"AL",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"",
							"TEXT",
							"60",
							"rationale",
							"0",
							"1",
							"0",
							"2018-01-01T12:00:00+01:00",
							"0",
							"0",
							"0",
							"1,2",
							"1",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"kind: Invalid value 'AL'",
							"null",
							"null"
						]
					},
					{
						"cells": [
							"Create a question using an invalid promptType",
							"Create MCQ Type Question using Question Service",
							"osanda12",
							"Web",
							"App",
							"Manual",
							"5a964b2d2e02d845dec509ef",
							"testId",
							"",
							"false",
							"learningObjective1",
							"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL",
							"TEXT",
							"Who is the owner of MaxSoft?",
							"TEX",
							"60",
							"rationale",
							"0",
							"1",
							"0",
							"2018-01-01T12:00:00+01:00",
							"0",
							"0",
							"0",
							"1,2",
							"1",
							"Red",
							"TEXT",
							"true",
							"2",
							"White",
							"TEXT",
							"true",
							"3",
							"White",
							"TEXT",
							"false",
							"4",
							"Blue",
							"TEXT",
							"false",
							"5",
							"Orange",
							"TEXT",
							"false",
							"MaxSoft",
							"kind: Invalid value ''",
							"null",
							"null"
						]
					}
				]
			},
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 0,
			"failedScenarioCount": 1,
			"skippedScenarioCount": 0
		}
	],
	"beforeSuiteHookFailure": null,
	"afterSuiteHookFailure": null,
	"passedSpecsCount": 0,
	"failedSpecsCount": 1,
	"skippedSpecsCount": 0,
	"passedScenariosCount": 0,
	"failedScenariosCount": 1,
	"skippedScenariosCount": 0
}