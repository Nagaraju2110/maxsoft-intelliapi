{
	"projectName": "MaxSoft-IntelliAPI",
	"timestamp": "Apr 29, 2019 at 9:12am",
	"successRate": 93,
	"environment": "default",
	"tags": "",
	"executionTime": 106210,
	"executionStatus": "fail",
	"specResults": [
		{
			"specHeading": "Text Files Operations Specification",
			"fileName": "C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Other\\Text Files Operations.spec",
			"tags": [],
			"executionTime": 2842,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Get all decks of a user",
					"tags": [],
					"executionTime": 724,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get All Decks Of User\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 34,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/decks/users\n\n",
									"HTTP Method is: GET\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user saves test data inside excel file into data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Excel Sheet Name",
									"Key Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"varUserId",
											"Deck_Test_Data",
											"userId"
										]
									},
									{
										"cells": [
											"Scenario",
											"varSampleDeckTitle",
											"Deck_Test_Data",
											"sampleDeckTitle"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 24,
								"skippedReason": "",
								"messages": [
									"\"ffffffff5badc1cdbe64ee171a740bed\" is successfully saved as a text in Scenario Data Store [varUserId]",
									"\"Sample Expert Deck - Try It!\" is successfully saved as a text in Scenario Data Store [varSampleDeckTitle]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters using data stores as follows",
							"table": {
								"headers": [
									"Path Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"userId",
											"yes",
											"Scenario",
											"varUserId",
											""
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [varUserId] is: \"ffffffff5badc1cdbe64ee171a740bed\"\n\n",
									"Path parameters which will append to the request URL:/ffffffff5badc1cdbe64ee171a740bed\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"No"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMDU5LCJpYXQiOjE1NTY1MDkyNTgsInNlc3NpZCI6ImViMWVlYzA2LTczYjItNGY2Yy1iMTgxLWY1Njc2MjNiMjQ1YyJ9.EfREjWygLJsReB_pm-mQawerMJV-RkTbrOmsaQKwIl5gmdSXsqozVmuAY8fOS5rSoF3YsG4k6RAwtO-wyEV9xwzB8Fuu7tdbBp-dIYztjrppKCrkuLRYoobclxzHwFRCZGie8qzWzRtWTpkjassee2WsjHh4_a4T597JZDzWx3s"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 658,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/decks/users/ffffffff5badc1cdbe64ee171a740bed\n\n",
									"HTTP Method is: GET\n\n",
									"Response Time is: 553ms\n\n",
									"Response is: \n[\n    {\n        \"id\": \"5c88c8c295d4db0010bec3b7\",\n        \"title\": \"Sample Expert Deck - Try It!\",\n        \"description\": \"\",\n        \"tags\": [\n            \n        ],\n        \"keywords\": [\n            \"string\",\n            \"prep_cat_v2\"\n        ],\n        \"subjectId\": \"Test\",\n        \"book\": {\n            \"bookTitle\": \"Pearson\",\n            \"bookAuthor\": \"Pearson\",\n            \"chapter\": \"0\"\n        },\n        \"purchaseInfo\": {\n            \"purchasedDate\": 1512378509134,\n            \"price\": 0.0,\n            \"sku\": \"com.pearsoned.smartflashcardsmvp.expertdecktier0\",\n            \"status\": \"AVAILABLE\"\n        },\n        \"notificationSettings\": {\n            \"areNotificationsEnabled\": false\n        },\n        \"epochTime\": {\n            \"createdAt\": 1552468162853,\n            \"updatedAt\": 1552468162853\n        },\n        \"userId\": \"ffffffff5badc1cdbe64ee171a740bed\",\n        \"parentDeckId\": \"5b36a4a793cee27c9a02da3b\",\n        \"createdAt\": \"2019-03-13T09:09:22.853Z\",\n        \"updatedAt\": \"2019-03-13T09:09:22.855Z\",\n        \"archived\": false,\n        \"cardPreview\": true,\n        \"noOfCards\": 0,\n        \"progress\": 0,\n        \"downloads\": 0,\n        \"deckAuthor\": \"\",\n        \"deckAuthorId\": \"0\",\n        \"thumbnailUrl\": \"string\",\n        \"status\": \"active\",\n        \"starred\": false,\n        \"examReminder\": {\n            \n        },\n        \"expert\": true\n    }\n]\n\n",
									"Response Headers are: \nContent-Type=application/json;charset=UTF-8\ncorrelation-id=1894cb43-eff6-47ea-a7d7-da6ff8c9115b\nDate=Mon, 29 Apr 2019 03:42:16 GMT\nServer=nginx\nX-Content-Type-Options=nosniff\nX-Loadbalancer-Id=nginx-ingress-63qw2\nX-XSS-Protection=1; mode=block\nContent-Length=850\nConnection=keep-alive"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"200\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the values inside the data stores",
							"table": {
								"headers": [
									"JSON Path",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"$[0].title",
											"yes",
											"Scenario",
											"varSampleDeckTitle",
											""
										]
									},
									{
										"cells": [
											"$[0].userId",
											"yes",
											"Scenario",
											"varUserId",
											""
										]
									},
									{
										"cells": [
											"$[0].archived",
											"no",
											"",
											"",
											"false"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 5,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [varSampleDeckTitle] is: \"Sample Expert Deck - Try It!\"\n\n",
									"Text inside Scenario Data Store [varUserId] is: \"ffffffff5badc1cdbe64ee171a740bed\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Invoke Auth API using valid username and password using request attributes from text files",
					"tags": [
						"get_auth_token"
					],
					"executionTime": 1489,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get Auth Token\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 35,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"username",
											"osanda12"
										]
									},
									{
										"cells": [
											"Specification",
											"variable6",
											"Osanda Nimalarathna"
										]
									},
									{
										"cells": [
											"Scenario",
											"variable7",
											"Software Automation"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3,
								"skippedReason": "",
								"messages": [
									"\"osanda12\" is successfully saved as a text in Scenario Data Store [username]",
									"\"Osanda Nimalarathna\" is successfully saved as a text in Specification Data Store [variable6]",
									"\"Software Automation\" is successfully saved as a text in Scenario Data Store [variable7]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request headers using data stores as follows",
							"table": {
								"headers": [
									"Header Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Header Value"
								],
								"rows": [
									{
										"cells": [
											"header1",
											"n",
											"",
											"",
											"header1"
										]
									},
									{
										"cells": [
											"header2",
											"n",
											"",
											"",
											"header1"
										]
									},
									{
										"cells": [
											"header3",
											"n",
											"",
											"",
											"header1"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"Header List: ",
									"header1 = header1",
									"header2 = header1",
									"header3 = header1"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#username",
											"y",
											"scenario",
											"username",
											"N/A"
										]
									},
									{
										"cells": [
											"#password",
											"n",
											"N/A",
											"N/A",
											"Password1"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 18,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [username] is: \"osanda12\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n \"userName\": \"osanda12\",\n \"password\": \"Password1\"\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1421,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 1318ms\n\n",
									"Response is: \n{\n    \"status\": \"success\",\n    \"data\": \"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTM4LCJpYXQiOjE1NTY1MDkzMzcsInNlc3NpZCI6IjM2ZjJjMmNjLWNmOTAtNDVjOC1iM2RmLTdjZDBjMDg2Mzg4OSJ9.hHhDR1IdI9pjMmIGYsCMIMDn1zNnKc9dNk2YtK1m7_3se4PhXprJb26ZHjn32iaDHgyHx-Wtsel7U7jE1IYF9nsOguCWPFAFcR9HPwe2Yk4oBMiyqqo6iu-MuLFqHtj_SgDP6LgYCIf89qtUvOnpbSRXu42v0DfXUKmLvYdy7Qw\"\n}\n\n",
									"Response Headers are: \nDate=Mon, 29 Apr 2019 03:42:17 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nConnection=keep-alive\nSet-Cookie=AWSALB=+3l5nWeVqX2zD63dTlB5Ct/YMZrkrz9DW6AXJNzEvJU6dWE4RjzhBYy/tTjCKsmUg1wpjXyqDeRf+3HLT/iL+j/0CxHgpi30z2TpmegAggYVfSN8Yzmsb+i8vTep; Expires=Mon, 06 May 2019 03:42:17 GMT; Path=/\nServer=nginx/1.15.7\nCorrelation-Id=aff0d2b7-00b1-4218-8b1a-e66bf5c91abc\nLocation=https://int-piapi-internal.stg-openclass.com/tokens/eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTM4LCJpYXQiOjE1NTY1MDkzMzcsInNlc3NpZCI6IjM2ZjJjMmNjLWNmOTAtNDVjOC1iM2RmLTdjZDBjMDg2Mzg4OSJ9.hHhDR1IdI9pjMmIGYsCMIMDn1zNnKc9dNk2YtK1m7_3se4PhXprJb26ZHjn32iaDHgyHx-Wtsel7U7jE1IYF9nsOguCWPFAFcR9HPwe2Yk4oBMiyqqo6iu-MuLFqHtj_SgDP6LgYCIf89qtUvOnpbSRXu42v0DfXUKmLvYdy7Qw"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"status",
											"$.status"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"\"success\" is successfully saved as a text in Scenario Data Store [status]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"isContains"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"success"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the values inside the data stores",
							"table": {
								"headers": [
									"JSON Path",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"y",
											"scenario",
											"status",
											"N/A"
										]
									},
									{
										"cells": [
											"$.status",
											"n",
											"",
											"",
											"success"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [status] is: \"success\"\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should not contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"notContains"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"fail"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should not contains the values inside the data stores",
							"table": {
								"headers": [
									"JSON Path",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"y",
											"scenario",
											"variable7",
											"N/A"
										]
									},
									{
										"cells": [
											"$.status",
											"n",
											"",
											"",
											"fail"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [variable7] is: \"Software Automation\"\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"success"
										]
									},
									{
										"cells": [
											"$.status",
											"success"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should not be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"fail"
										]
									},
									{
										"cells": [
											"$.status",
											"fail"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the values inside the data stores",
							"table": {
								"headers": [
									"JSON Path",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"y",
											"scenario",
											"status",
											"N/A"
										]
									},
									{
										"cells": [
											"$.status",
											"n",
											"N/A",
											"N/A",
											"success"
										]
									},
									{
										"cells": [
											"$.status",
											"n",
											"N/A",
											"N/A",
											"success"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [status] is: \"success\"\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should not be equal to the values inside the data stores",
							"table": {
								"headers": [
									"JSON Path",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"n",
											"N/A",
											"N/A",
											"fail"
										]
									},
									{
										"cells": [
											"$.status",
											"n",
											"N/A",
											"N/A",
											"fail"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the access token in the response which is located inside the JSON Path of \"$.data\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [
									"Successfully saved the access token into the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\""
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Existence in the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"isExists"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"true"
										]
									},
									{
										"cells": [
											"$.osa",
											"false"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the query parameters as follows",
							"table": {
								"headers": [
									"Query Parameter",
									"Query Value"
								],
								"rows": [
									{
										"cells": [
											"Id",
											"osanda12"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"Query parameters which will append to the request URL: ?Id=osanda12\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters as follows",
							"table": {
								"headers": [
									"Path Parameter",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"Id",
											"osanda12"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"Path parameters which will append to the request URL:/osanda12\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the query parameters using data stores as follows",
							"table": {
								"headers": [
									"Query Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Query Value"
								],
								"rows": [
									{
										"cells": [
											"username",
											"y",
											"scenario",
											"username",
											"N/A"
										]
									},
									{
										"cells": [
											"password",
											"n",
											"N/A",
											"N/A",
											"Password1"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [username] is: \"osanda12\"\n\n",
									"Query parameters which will append to the request URL: ?username=osanda12\u0026password=Password1\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters using data stores as follows",
							"table": {
								"headers": [
									"Path Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"#username",
											"y",
											"scenario",
											"username",
											"N/A"
										]
									},
									{
										"cells": [
											"#password",
											"n",
											"N/A",
											"N/A",
											"Password1"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [username] is: \"osanda12\"\n\n",
									"Path parameters which will append to the request URL:/osanda12/Password1\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Replace API Endpoint placeholders",
					"tags": [],
					"executionTime": 629,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Purchase Validator API\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 34,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://www.googleapis.com/androidpublisher/v3/applications/com.pearsoned.smartflashcards/purchases/products/#skuid/tokens/#purchaseToken?access_token=#access_token\n\n",
									"HTTP Method is: GET\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set values to the API endpoint placeholders as follows",
							"table": {
								"headers": [
									"Placeholder In JSON Template",
									"Replacement Text"
								],
								"rows": [
									{
										"cells": [
											"#skuid",
											"com.pearsoned.smartflashcards.expert.elementary"
										]
									},
									{
										"cells": [
											"#purchaseToken",
											"jghpbegbjgnpfdfgjjkhdpeo.AO-J1OwpcCUVIa0vhCEpnsaQzG4LiWlLPnzZZ8lurqkUwQOdEayJt-594AJ0ZXAD157IP8l0v-pHedljh50abW2HG50dAdzOQcLz_mE_5oqOApbkuC2X4mOlf8vJ09qul3zrAy30O3luyUqwOUOkJ1L2XhwrLhKROMAMXpx11t81UENIUxq0zaE"
										]
									},
									{
										"cells": [
											"#access_token",
											"ya29.Gl02BlxksX1OjOxBRrI2znyQc3xdqvDXkh0NU7GxEw5_2EfMvysYUNqjhcLTj8BaO9GIk6KJQBbEMzYde7tDCCUNCyW_fGlHr-9mHplWfr69Vwdz2xnvhfZcLPjCvcA"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 15,
								"skippedReason": "",
								"messages": [
									"https://www.googleapis.com/androidpublisher/v3/applications/com.pearsoned.smartflashcards/purchases/products/com.pearsoned.smartflashcards.expert.elementary/tokens/jghpbegbjgnpfdfgjjkhdpeo.AO-J1OwpcCUVIa0vhCEpnsaQzG4LiWlLPnzZZ8lurqkUwQOdEayJt-594AJ0ZXAD157IP8l0v-pHedljh50abW2HG50dAdzOQcLz_mE_5oqOApbkuC2X4mOlf8vJ09qul3zrAy30O3luyUqwOUOkJ1L2XhwrLhKROMAMXpx11t81UENIUxq0zaE?access_token=ya29.Gl02BlxksX1OjOxBRrI2znyQc3xdqvDXkh0NU7GxEw5_2EfMvysYUNqjhcLTj8BaO9GIk6KJQBbEMzYde7tDCCUNCyW_fGlHr-9mHplWfr69Vwdz2xnvhfZcLPjCvcA"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 579,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://www.googleapis.com/androidpublisher/v3/applications/com.pearsoned.smartflashcards/purchases/products/com.pearsoned.smartflashcards.expert.elementary/tokens/jghpbegbjgnpfdfgjjkhdpeo.AO-J1OwpcCUVIa0vhCEpnsaQzG4LiWlLPnzZZ8lurqkUwQOdEayJt-594AJ0ZXAD157IP8l0v-pHedljh50abW2HG50dAdzOQcLz_mE_5oqOApbkuC2X4mOlf8vJ09qul3zrAy30O3luyUqwOUOkJ1L2XhwrLhKROMAMXpx11t81UENIUxq0zaE?access_token=ya29.Gl02BlxksX1OjOxBRrI2znyQc3xdqvDXkh0NU7GxEw5_2EfMvysYUNqjhcLTj8BaO9GIk6KJQBbEMzYde7tDCCUNCyW_fGlHr-9mHplWfr69Vwdz2xnvhfZcLPjCvcA\n\n",
									"HTTP Method is: GET\n\n",
									"Response Time is: 497ms\n\n",
									"Response is: \n{\n    \"error\": {\n        \"errors\": [\n            {\n                \"domain\": \"global\",\n                \"reason\": \"authError\",\n                \"message\": \"Invalid Credentials\",\n                \"locationType\": \"header\",\n                \"location\": \"Authorization\"\n            }\n        ],\n        \"code\": 401,\n        \"message\": \"Invalid Credentials\"\n    }\n}\n\n",
									"Response Headers are: \nVary=Origin\nVary=X-Origin\nWWW-Authenticate=Bearer realm=\"https://accounts.google.com/\", error=invalid_token\nContent-Type=application/json; charset=UTF-8\nContent-Encoding=gzip\nDate=Mon, 29 Apr 2019 03:42:18 GMT\nExpires=Mon, 29 Apr 2019 03:42:18 GMT\nCache-Control=private, max-age=0\nX-Content-Type-Options=nosniff\nX-Frame-Options=SAMEORIGIN\nX-XSS-Protection=1; mode=block\nServer=GSE\nAlt-Svc=quic=\":443\"; ma=2592000; v=\"46,44,43,39\"\nTransfer-Encoding=chunked"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"401\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.error.errors[0].reason",
											"authError"
										]
									},
									{
										"cells": [
											"$.error.errors[0].message",
											"Invalid Credentials"
										]
									},
									{
										"cells": [
											"$.error.code",
											"401"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 3,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		},
		{
			"specHeading": "Data Store Comparison Specification",
			"fileName": "C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Data Stores\\Data Store Comparison.spec",
			"tags": [
				"data_store"
			],
			"executionTime": 11461,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Equality of data store values with hard coded values",
					"tags": [],
					"executionTime": 1445,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get Auth Token\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 34,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"No"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"N/A"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request payload as follows \u003cfile:/resources/payloads/login.txt\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\r\n \"userName\": \"osanda12\",\r\n \"password\": \"Password1\"\r\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1396,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 1296ms\n\n",
									"Response is: \n{\n    \"status\": \"success\",\n    \"data\": \"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTUxLCJpYXQiOjE1NTY1MDkzNTAsInNlc3NpZCI6IjVkNDA1MDViLTg4MWMtNGU2Yy05NDNjLTU2OWIyOWZkYjNkYyJ9.FXbZ_O8-BMmY729aYK6kTdHmAW3_gegvwxMLztUEYXPv8OZWtE1mwvNUc7HyX3dpYkpXBfn2GCghL0ynOIw2LC99ip2hg7km3fKZ-_fIYqcwH5eafcIwFE9vGgSAZTnZil5wOde4I76R98REYz-YAtw-RdloS4d4SHAxk7KRwRM\"\n}\n\n",
									"Response Headers are: \nDate=Mon, 29 Apr 2019 03:42:30 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nConnection=keep-alive\nSet-Cookie=AWSALB=810uVkk7LjgDiWUaD5KwNWUfUvA158X5dELPJ4/uY4SyWJcyzdL5SgTr39ogwbCkZAEHpwktF+K3tSSd2zm8Icp65Tckt6cSk1EJjAy+5nZQCaHs52D4djUMu3No; Expires=Mon, 06 May 2019 03:42:30 GMT; Path=/\nServer=nginx/1.15.7\nCorrelation-Id=6bfc57e8-6308-42ba-bf9e-0672d4bf0b56\nLocation=https://int-piapi-internal.stg-openclass.com/tokens/eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTUxLCJpYXQiOjE1NTY1MDkzNTAsInNlc3NpZCI6IjVkNDA1MDViLTg4MWMtNGU2Yy05NDNjLTU2OWIyOWZkYjNkYyJ9.FXbZ_O8-BMmY729aYK6kTdHmAW3_gegvwxMLztUEYXPv8OZWtE1mwvNUc7HyX3dpYkpXBfn2GCghL0ynOIw2LC99ip2hg7km3fKZ-_fIYqcwH5eafcIwFE9vGgSAZTnZil5wOde4I76R98REYz-YAtw-RdloS4d4SHAxk7KRwRM"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"status",
											"$.status"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 4,
								"skippedReason": "",
								"messages": [
									"\"success\" is successfully saved as a text in Scenario Data Store [status]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"username",
											"osanda12"
										]
									},
									{
										"cells": [
											"Scenario",
											"mobileUserName",
											"osanda12"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 6,
								"skippedReason": "",
								"messages": [
									"\"osanda12\" is successfully saved as a text in Scenario Data Store [username]",
									"\"osanda12\" is successfully saved as a text in Scenario Data Store [mobileUserName]"
								],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the values inside the data stores equal to the following",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"username",
											"osanda12"
										]
									},
									{
										"cells": [
											"Scenario",
											"status",
											"success"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 5,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [username] is: \"osanda12\"\n\n",
									"Text inside Scenario Data Store [status] is: \"success\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Equality of data store values with another data store values",
					"tags": [],
					"executionTime": 1428,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get Auth Token\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 34,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"No"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"N/A"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request payload as follows \u003cfile:/resources/payloads/login.txt\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\r\n \"userName\": \"osanda12\",\r\n \"password\": \"Password1\"\r\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1378,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 1280ms\n\n",
									"Response is: \n{\n    \"status\": \"success\",\n    \"data\": \"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTUyLCJpYXQiOjE1NTY1MDkzNTIsInNlc3NpZCI6ImNkN2RhODFkLTgyZWQtNDA1My04MDdjLTRlMmZlODdhNGU2MyJ9.KplTupuotruclJzAs-pIbAKkKfyiVmUNuHjkaI-AGAW-xLYwDGyLqLs3b4Xz077jal5sEab0kcl-HKW3jaNKbn9YGQzS8bqgXNzDgUYrr8kQJCelGY5ZdGUHdkAaJ5NPWW3ajtPeZb2hvred3imlD1Z9NAglr0ivuL56KMP8L3Q\"\n}\n\n",
									"Response Headers are: \nDate=Mon, 29 Apr 2019 03:42:32 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nConnection=keep-alive\nSet-Cookie=AWSALB=iXyNf1y5FQxLP63AVpAGQ0UAHFDNZ7wmmUZTsQ6G2cxt3Pfvicf9T4ObnUoiSUMK5KI49Rma3ad/GwcBksKNtDnrkV2LV1V4Ek9ued5eEfBQhpPP22gx07DOx8gk; Expires=Mon, 06 May 2019 03:42:32 GMT; Path=/\nServer=nginx/1.15.7\nCorrelation-Id=2c3a9feb-4417-40ab-8ca1-89a25d79f4b5\nLocation=https://int-piapi-internal.stg-openclass.com/tokens/eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTUyLCJpYXQiOjE1NTY1MDkzNTIsInNlc3NpZCI6ImNkN2RhODFkLTgyZWQtNDA1My04MDdjLTRlMmZlODdhNGU2MyJ9.KplTupuotruclJzAs-pIbAKkKfyiVmUNuHjkaI-AGAW-xLYwDGyLqLs3b4Xz077jal5sEab0kcl-HKW3jaNKbn9YGQzS8bqgXNzDgUYrr8kQJCelGY5ZdGUHdkAaJ5NPWW3ajtPeZb2hvred3imlD1Z9NAglr0ivuL56KMP8L3Q"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"status",
											"$.status"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3,
								"skippedReason": "",
								"messages": [
									"\"success\" is successfully saved as a text in Scenario Data Store [status]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"username",
											"osanda12"
										]
									},
									{
										"cells": [
											"Scenario",
											"mobileUserName",
											"osanda12"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 7,
								"skippedReason": "",
								"messages": [
									"\"osanda12\" is successfully saved as a text in Scenario Data Store [username]",
									"\"osanda12\" is successfully saved as a text in Scenario Data Store [mobileUserName]"
								],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the values inside two data stores should be equal",
							"table": {
								"headers": [
									"DataStore 1 Type",
									"Variable 1 Name",
									"DataStore 2 Type",
									"Variable 2 Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"username",
											"Scenario",
											"mobileUserName"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 6,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [username] is: \"osanda12\"\n\n",
									"Text inside Scenario Data Store [mobileUserName] is: \"osanda12\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Not equality of data store values with hard coded values",
					"tags": [],
					"executionTime": 1437,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get Auth Token\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 32,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"No"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"N/A"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request payload as follows \u003cfile:/resources/payloads/login.txt\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\r\n \"userName\": \"osanda12\",\r\n \"password\": \"Password1\"\r\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1389,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 1296ms\n\n",
									"Response is: \n{\n    \"status\": \"success\",\n    \"data\": \"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTU0LCJpYXQiOjE1NTY1MDkzNTMsInNlc3NpZCI6IjMyYzAzOTg5LWNhYWYtNGUwZS1iMGM3LTgzZjFlZjVjOGVjZiJ9.GkMyNVEse-VV04VO9InsphfK7OrnXJbMpggp9jP-hmsujpwg78UFDYmviGru-TTPEBAq8RIVFln0amfQ1qiQMfkW9N9mphnf77YFm48e5BE4641QiFZe0c5iPdnkUbiqLcF05CPm0ZMjaeF6UC1R6BifoOE2BdxEFexAPKsTtu4\"\n}\n\n",
									"Response Headers are: \nDate=Mon, 29 Apr 2019 03:42:33 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nConnection=keep-alive\nSet-Cookie=AWSALB=1vflsrvc7Opyhj5i+5nloHsKXMdUZ0bBJCJQBTbmq/OiF6O4eKhuB8/QWoLMyJyVTf6UpKskwLd/nnQwE89N0YEe0fD6HOhBXMQZpRR+JemB1g0l59+poLEwcPq4; Expires=Mon, 06 May 2019 03:42:33 GMT; Path=/\nServer=nginx/1.15.7\nCorrelation-Id=6ef67d07-9785-406e-bfdf-bffb35651796\nLocation=https://int-piapi-internal.stg-openclass.com/tokens/eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTU0LCJpYXQiOjE1NTY1MDkzNTMsInNlc3NpZCI6IjMyYzAzOTg5LWNhYWYtNGUwZS1iMGM3LTgzZjFlZjVjOGVjZiJ9.GkMyNVEse-VV04VO9InsphfK7OrnXJbMpggp9jP-hmsujpwg78UFDYmviGru-TTPEBAq8RIVFln0amfQ1qiQMfkW9N9mphnf77YFm48e5BE4641QiFZe0c5iPdnkUbiqLcF05CPm0ZMjaeF6UC1R6BifoOE2BdxEFexAPKsTtu4"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"status",
											"$.status"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 4,
								"skippedReason": "",
								"messages": [
									"\"success\" is successfully saved as a text in Scenario Data Store [status]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"username",
											"osanda12"
										]
									},
									{
										"cells": [
											"Scenario",
											"mobileUserName",
											"osanda12"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 6,
								"skippedReason": "",
								"messages": [
									"\"osanda12\" is successfully saved as a text in Scenario Data Store [username]",
									"\"osanda12\" is successfully saved as a text in Scenario Data Store [mobileUserName]"
								],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the values inside the data stores not equal to the following",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"username",
											"osanda"
										]
									},
									{
										"cells": [
											"Scenario",
											"status",
											"succes"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 6,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [username] is: \"osanda12\"\n\n",
									"Text inside Scenario Data Store [status] is: \"success\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Not equality of data store values with another data store values",
					"tags": [],
					"executionTime": 1456,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get Auth Token\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 43,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"No"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"N/A"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request payload as follows \u003cfile:/resources/payloads/login.txt\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\r\n \"userName\": \"osanda12\",\r\n \"password\": \"Password1\"\r\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1398,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 1273ms\n\n",
									"Response is: \n{\n    \"status\": \"success\",\n    \"data\": \"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTU1LCJpYXQiOjE1NTY1MDkzNTUsInNlc3NpZCI6IjM3YTVlZjdkLTRjNWUtNDJlNS1iYWU5LTM3MTI2OWEyZDhjNiJ9.FTAEbrRJkOGERBy7dGqhJ70Z1nWoXVJFULbNGsDYybIMhOjASZrYURWFg6PpRKyaDo3E7IIMCPVk2_N22W88WudF26lr85Cj0ZeVszX96xLX4Yr9GK70vEI90HU0FKMMlXIL264Vg3Fpb_bMC2ECS0KBXjuRQYBHbQdtcPkv5Pw\"\n}\n\n",
									"Response Headers are: \nDate=Mon, 29 Apr 2019 03:42:35 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nConnection=keep-alive\nSet-Cookie=AWSALB=X/yZo4upqx3ZzUTG/rEUK6ue0bRZ+wN6m+UjpZhh6Ke7cK9nOmdG3Y47a1niV6tbmZnok5R6ejiFhmJgv8HV1/bXOBdWfmjLNuXv09Zr9yI6kJQtsHBcWMHrKJ3t; Expires=Mon, 06 May 2019 03:42:35 GMT; Path=/\nServer=nginx/1.15.7\nCorrelation-Id=7e0d8201-d282-4e10-9f35-68f39da5a331\nLocation=https://int-piapi-internal.stg-openclass.com/tokens/eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTU1LCJpYXQiOjE1NTY1MDkzNTUsInNlc3NpZCI6IjM3YTVlZjdkLTRjNWUtNDJlNS1iYWU5LTM3MTI2OWEyZDhjNiJ9.FTAEbrRJkOGERBy7dGqhJ70Z1nWoXVJFULbNGsDYybIMhOjASZrYURWFg6PpRKyaDo3E7IIMCPVk2_N22W88WudF26lr85Cj0ZeVszX96xLX4Yr9GK70vEI90HU0FKMMlXIL264Vg3Fpb_bMC2ECS0KBXjuRQYBHbQdtcPkv5Pw"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"status",
											"$.status"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3,
								"skippedReason": "",
								"messages": [
									"\"success\" is successfully saved as a text in Scenario Data Store [status]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"username",
											"osanda12"
										]
									},
									{
										"cells": [
											"Scenario",
											"mobileUserName",
											"osanda12"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 6,
								"skippedReason": "",
								"messages": [
									"\"osanda12\" is successfully saved as a text in Scenario Data Store [username]",
									"\"osanda12\" is successfully saved as a text in Scenario Data Store [mobileUserName]"
								],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the values inside two data stores should not be equal",
							"table": {
								"headers": [
									"DataStore 1 Type",
									"Variable 1 Name",
									"DataStore 2 Type",
									"Variable 2 Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"username",
											"Scenario",
											"status"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 6,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [username] is: \"osanda12\"\n\n",
									"Text inside Scenario Data Store [status] is: \"success\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Contains of data store values with hard coded values",
					"tags": [],
					"executionTime": 1431,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get Auth Token\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 33,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"No"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"N/A"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request payload as follows \u003cfile:/resources/payloads/login.txt\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\r\n \"userName\": \"osanda12\",\r\n \"password\": \"Password1\"\r\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1381,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 1273ms\n\n",
									"Response is: \n{\n    \"status\": \"success\",\n    \"data\": \"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTU3LCJpYXQiOjE1NTY1MDkzNTYsInNlc3NpZCI6ImVlNDNkNTNhLTlhOWUtNDUxNC1iMjgzLTFjZTAwYjIzNGQ3YSJ9.csl8J8P0e5PeBwkpCzHR6icsKM31Z81_D3LRrGmHtmI7PAF5v1kwxYVF9b4gqvALCYRT6Qylhes838k_VKP57WzxA22tQecZp1QCg8gNhMKycVLXIA9ZP_295dveSIPivAIPGnuja-Twpw-KeJUfYqDrGCUMXw93_9UtwWCJpXM\"\n}\n\n",
									"Response Headers are: \nDate=Mon, 29 Apr 2019 03:42:36 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nConnection=keep-alive\nSet-Cookie=AWSALB=KoczB1fk2/QlOartStUCYDvwMnE0CeN8VAUGb+S2i178OYDiJQUXtC3Oy/9JvOuIWPdyFbl0srhQ9tpbqodMIUHzHbYt5/UGS5I3oRt8hWNUkBVpdpl9t73L8nYm; Expires=Mon, 06 May 2019 03:42:36 GMT; Path=/\nServer=nginx/1.15.7\nCorrelation-Id=4090d2c5-0b0e-428c-8986-8d5fff630d8a\nLocation=https://int-piapi-internal.stg-openclass.com/tokens/eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTU3LCJpYXQiOjE1NTY1MDkzNTYsInNlc3NpZCI6ImVlNDNkNTNhLTlhOWUtNDUxNC1iMjgzLTFjZTAwYjIzNGQ3YSJ9.csl8J8P0e5PeBwkpCzHR6icsKM31Z81_D3LRrGmHtmI7PAF5v1kwxYVF9b4gqvALCYRT6Qylhes838k_VKP57WzxA22tQecZp1QCg8gNhMKycVLXIA9ZP_295dveSIPivAIPGnuja-Twpw-KeJUfYqDrGCUMXw93_9UtwWCJpXM"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"status",
											"$.status"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 4,
								"skippedReason": "",
								"messages": [
									"\"success\" is successfully saved as a text in Scenario Data Store [status]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"username",
											"osanda12"
										]
									},
									{
										"cells": [
											"Scenario",
											"mobileUserName",
											"osanda12"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 7,
								"skippedReason": "",
								"messages": [
									"\"osanda12\" is successfully saved as a text in Scenario Data Store [username]",
									"\"osanda12\" is successfully saved as a text in Scenario Data Store [mobileUserName]"
								],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the values inside the data stores contain the following",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"username",
											"osanda"
										]
									},
									{
										"cells": [
											"Scenario",
											"status",
											"succes"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 6,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [username] is: \"osanda12\"\n\n",
									"Text inside Scenario Data Store [status] is: \"success\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Contains of data store values with another data store values",
					"tags": [],
					"executionTime": 1389,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get Auth Token\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 34,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"No"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"N/A"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request payload as follows \u003cfile:/resources/payloads/login.txt\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\r\n \"userName\": \"osanda12\",\r\n \"password\": \"Password1\"\r\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1336,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 1220ms\n\n",
									"Response is: \n{\n    \"status\": \"success\",\n    \"data\": \"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTU4LCJpYXQiOjE1NTY1MDkzNTgsInNlc3NpZCI6IjFhYmUxMGRjLWU4NGItNDQ5My04M2YxLTk5NTcxNzhlYjljNSJ9.T5lSR_XWEMWuwO97spKa3qOObakPXFZJDkIVqfI8-BgzKd0XlVQDkE80_ScXYkOm9h8yHqFZlq3jaaKOe8zosIAKoLipWndIUO6SBZcds6Nh2q5NXcVe73W9l2DDSvEnUejjEyBPAOqN2fx3YB5c8iaFPhdgPL5RsCFJkr1Ak14\"\n}\n\n",
									"Response Headers are: \nDate=Mon, 29 Apr 2019 03:42:38 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nConnection=keep-alive\nSet-Cookie=AWSALB=hv7eNyg16z8ZXZhIbBPccct73MCHshRY7Meigdm920HWJ1lLrzC42HcgyS5wJH2xgqMg4dFGMYMeyZThyLpEYZAyFadd7Ga3PN3oRJJN8w1BoJFQeUFY3l58BlQe; Expires=Mon, 06 May 2019 03:42:37 GMT; Path=/\nServer=nginx/1.15.7\nCorrelation-Id=04396023-6575-4846-932d-73f79aec127c\nLocation=https://int-piapi-internal.stg-openclass.com/tokens/eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTU4LCJpYXQiOjE1NTY1MDkzNTgsInNlc3NpZCI6IjFhYmUxMGRjLWU4NGItNDQ5My04M2YxLTk5NTcxNzhlYjljNSJ9.T5lSR_XWEMWuwO97spKa3qOObakPXFZJDkIVqfI8-BgzKd0XlVQDkE80_ScXYkOm9h8yHqFZlq3jaaKOe8zosIAKoLipWndIUO6SBZcds6Nh2q5NXcVe73W9l2DDSvEnUejjEyBPAOqN2fx3YB5c8iaFPhdgPL5RsCFJkr1Ak14"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"status",
											"$.status"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 5,
								"skippedReason": "",
								"messages": [
									"\"success\" is successfully saved as a text in Scenario Data Store [status]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"username",
											"osanda12"
										]
									},
									{
										"cells": [
											"Scenario",
											"mobileUserName",
											"osanda12"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 7,
								"skippedReason": "",
								"messages": [
									"\"osanda12\" is successfully saved as a text in Scenario Data Store [username]",
									"\"osanda12\" is successfully saved as a text in Scenario Data Store [mobileUserName]"
								],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the value inside a data store should contain the value of the other data store",
							"table": {
								"headers": [
									"DataStore 1 Type",
									"Variable 1 Name",
									"DataStore 2 Type",
									"Variable 2 Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"username",
											"Scenario",
											"mobileUserName"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 6,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [username] is: \"osanda12\"\n\n",
									"Text inside Scenario Data Store [mobileUserName] is: \"osanda12\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Not contains of data store values with hard coded values",
					"tags": [],
					"executionTime": 1418,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get Auth Token\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 32,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"No"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"N/A"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request payload as follows \u003cfile:/resources/payloads/login.txt\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\r\n \"userName\": \"osanda12\",\r\n \"password\": \"Password1\"\r\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1364,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 1266ms\n\n",
									"Response is: \n{\n    \"status\": \"success\",\n    \"data\": \"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTU5LCJpYXQiOjE1NTY1MDkzNTksInNlc3NpZCI6IjJiZmFjZjVhLTU2ZmUtNDI3Ny1hYjIzLWU0MDlkNjA4ZTBiOSJ9.A5aDrY8FtCqsDbZCd0-amNIdMDSedBV8WGiaHCYKM_8kZmWiy8jXbWFmwFtTYn1mUXBM46Bm07sWkHOOY9Q4BwRWrt1LpDuXZGxx5w5f5cOI4tkJ9jeKcsdFFyOITDEfqsLiyNMYHaEkQ7hPuIQo-1dVnNiqCStlqx09AO-xF1I\"\n}\n\n",
									"Response Headers are: \nDate=Mon, 29 Apr 2019 03:42:39 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nConnection=keep-alive\nSet-Cookie=AWSALB=C9s6uf+mTOTYdTvws42f2uSo+8Xlv4QoySI/ZGOuA42S3W4lG7Q/1c1EdsZ2XnSofTmktAUkYR25AraaAY35b9M+2A2/5RKUyADgRl0UDQxsRM5gi7E3W57Ry9dQ; Expires=Mon, 06 May 2019 03:42:39 GMT; Path=/\nServer=nginx/1.15.7\nCorrelation-Id=6819ed9e-b97a-446d-8328-5df1c4cdc105\nLocation=https://int-piapi-internal.stg-openclass.com/tokens/eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTU5LCJpYXQiOjE1NTY1MDkzNTksInNlc3NpZCI6IjJiZmFjZjVhLTU2ZmUtNDI3Ny1hYjIzLWU0MDlkNjA4ZTBiOSJ9.A5aDrY8FtCqsDbZCd0-amNIdMDSedBV8WGiaHCYKM_8kZmWiy8jXbWFmwFtTYn1mUXBM46Bm07sWkHOOY9Q4BwRWrt1LpDuXZGxx5w5f5cOI4tkJ9jeKcsdFFyOITDEfqsLiyNMYHaEkQ7hPuIQo-1dVnNiqCStlqx09AO-xF1I"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"status",
											"$.status"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 4,
								"skippedReason": "",
								"messages": [
									"\"success\" is successfully saved as a text in Scenario Data Store [status]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"username",
											"osanda12"
										]
									},
									{
										"cells": [
											"Scenario",
											"mobileUserName",
											"osanda12"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 10,
								"skippedReason": "",
								"messages": [
									"\"osanda12\" is successfully saved as a text in Scenario Data Store [username]",
									"\"osanda12\" is successfully saved as a text in Scenario Data Store [mobileUserName]"
								],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the values inside the data stores not contain the following",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"username",
											"deshan"
										]
									},
									{
										"cells": [
											"Scenario",
											"status",
											"fail"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 7,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [username] is: \"osanda12\"\n\n",
									"Text inside Scenario Data Store [status] is: \"success\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Not contains of data store values with another data store values",
					"tags": [],
					"executionTime": 1457,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get Auth Token\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 34,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"No"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"N/A"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request payload as follows \u003cfile:/resources/payloads/login.txt\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\r\n \"userName\": \"osanda12\",\r\n \"password\": \"Password1\"\r\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1403,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 1290ms\n\n",
									"Response is: \n{\n    \"status\": \"success\",\n    \"data\": \"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTYxLCJpYXQiOjE1NTY1MDkzNjAsInNlc3NpZCI6IjkwOTU3YzkwLTcxODctNDQzNy05NjNlLWUwM2IwYTNkMmNjZCJ9.XdNxyCgxUS6CTVK_o3F30Q0eo0ii0EFxE4EXEOEsF7bEuOI88CjDDo-mRwJw0hYA7qQwqq4Mv446He1P1V-sYW2XFqkGULaqVCOBVPZWcutcq0P4NUWwBWxdvZ0u1w0ArNxqKbv0ls8s7RJKZGHmFHfqBwO0Z_Z6W919oFUaSJs\"\n}\n\n",
									"Response Headers are: \nDate=Mon, 29 Apr 2019 03:42:40 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nConnection=keep-alive\nSet-Cookie=AWSALB=9Wl8ZkdDZTFKeKKLEvgiUJ3VBE64ZgTi4SfeTosbxfjor6ULYDZUz042uT2xoEtI2sJy7jDYI96PotCZep9zCkskvgqcrhpTGb1fmA0IeHNNZKPQSAtTyyrWp2nj; Expires=Mon, 06 May 2019 03:42:40 GMT; Path=/\nServer=nginx/1.15.7\nCorrelation-Id=388281aa-6493-49da-baee-79bfe15794a2\nLocation=https://int-piapi-internal.stg-openclass.com/tokens/eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTYxLCJpYXQiOjE1NTY1MDkzNjAsInNlc3NpZCI6IjkwOTU3YzkwLTcxODctNDQzNy05NjNlLWUwM2IwYTNkMmNjZCJ9.XdNxyCgxUS6CTVK_o3F30Q0eo0ii0EFxE4EXEOEsF7bEuOI88CjDDo-mRwJw0hYA7qQwqq4Mv446He1P1V-sYW2XFqkGULaqVCOBVPZWcutcq0P4NUWwBWxdvZ0u1w0ArNxqKbv0ls8s7RJKZGHmFHfqBwO0Z_Z6W919oFUaSJs"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"status",
											"$.status"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 6,
								"skippedReason": "",
								"messages": [
									"\"success\" is successfully saved as a text in Scenario Data Store [status]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"username",
											"osanda12"
										]
									},
									{
										"cells": [
											"Scenario",
											"mobileUserName",
											"osanda12"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 7,
								"skippedReason": "",
								"messages": [
									"\"osanda12\" is successfully saved as a text in Scenario Data Store [username]",
									"\"osanda12\" is successfully saved as a text in Scenario Data Store [mobileUserName]"
								],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the value inside a data store should not contain the value of the other data store",
							"table": {
								"headers": [
									"DataStore 1 Type",
									"Variable 1 Name",
									"DataStore 2 Type",
									"Variable 2 Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"username",
											"Scenario",
											"status"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 7,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [username] is: \"osanda12\"\n\n",
									"Text inside Scenario Data Store [status] is: \"success\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 8,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		},
		{
			"specHeading": "Epoch Time Specification",
			"fileName": "C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Other\\Epoch Time.spec",
			"tags": [],
			"executionTime": 29,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Current Epoch time",
					"tags": [],
					"executionTime": 16,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user saves the current epoch time in \"Seconds\" inside data stores",
							"table": {
								"headers": [
									"Data Store Type",
									"Data Store Variable Name"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"currentEpochTime"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 10,
								"skippedReason": "",
								"messages": [
									"\"1556509431\" is successfully saved as a text in Scenario Data Store [currentEpochTime]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user saves the current epoch time in \"Milliseconds\" inside data stores",
							"table": {
								"headers": [
									"Data Store Type",
									"Data Store Variable Name"
								],
								"rows": [
									{
										"cells": [
											"suite",
											"currentEpochTime"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 6,
								"skippedReason": "",
								"messages": [
									"\"1556509431024\" is successfully saved as a text in Suite Data Store [currentEpochTime]"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Epoch time for a given timestamp",
					"tags": [],
					"executionTime": 13,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user converts the \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\" formatted \"2018-09-25T11:56:00.000-0000\" timestamp into epoch time in \"Seconds\" and saves inside data stores",
							"table": {
								"headers": [
									"Data Store Type",
									"Data Store Variable Name"
								],
								"rows": [
									{
										"cells": [
											"scenario",
											"epochTime"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 6,
								"skippedReason": "",
								"messages": [
									"\"1537876560\" is successfully saved as a text in Scenario Data Store [epochTime]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user converts the \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\" formatted \"2018-09-25T11:56:00.000-0000\" timestamp into epoch time in \"Milliseconds\" and saves inside data stores",
							"table": {
								"headers": [
									"Data Store Type",
									"Data Store Variable Name"
								],
								"rows": [
									{
										"cells": [
											"suite",
											"epochTime"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 7,
								"skippedReason": "",
								"messages": [
									"\"1537876560000\" is successfully saved as a text in Suite Data Store [epochTime]"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 2,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		},
		{
			"specHeading": "Data Store Arithmetic Operations Specification",
			"fileName": "C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Data Stores\\Data Store Arithmetic Operations.spec",
			"tags": [
				"data_store"
			],
			"executionTime": 392,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Add integer values in data stores and save it in a new data store",
					"tags": [],
					"executionTime": 42,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"val1",
											"14"
										]
									},
									{
										"cells": [
											"Scenario",
											"val2",
											"10"
										]
									},
									{
										"cells": [
											"Scenario",
											"val3",
											"12"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 16,
								"skippedReason": "",
								"messages": [
									"\"14\" is successfully saved as a text in Scenario Data Store [val1]",
									"\"10\" is successfully saved as a text in Scenario Data Store [val2]",
									"\"12\" is successfully saved as a text in Scenario Data Store [val3]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Add the integer values in data stores and save it in a \"Scenario\" type data store named \"totalVal\"",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"val1"
										]
									},
									{
										"cells": [
											"Scenario",
											"val2"
										]
									},
									{
										"cells": [
											"Scenario",
											"val3"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 21,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [val1] is: \"14\"\n\n",
									"Text inside Scenario Data Store [val2] is: \"10\"\n\n",
									"Text inside Scenario Data Store [val3] is: \"12\"\n\n",
									"\"36\" is successfully saved as a text in Scenario Data Store [totalVal]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the values inside the data stores equal to the following",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"totalVal",
											"36"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 5,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [totalVal] is: \"36\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Subtract integer values in data stores and save it in a new data store",
					"tags": [],
					"executionTime": 57,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"val1",
											"14"
										]
									},
									{
										"cells": [
											"Scenario",
											"val2",
											"10"
										]
									},
									{
										"cells": [
											"Scenario",
											"val3",
											"12"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 16,
								"skippedReason": "",
								"messages": [
									"\"14\" is successfully saved as a text in Scenario Data Store [val1]",
									"\"10\" is successfully saved as a text in Scenario Data Store [val2]",
									"\"12\" is successfully saved as a text in Scenario Data Store [val3]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Add the integer values in data stores and save it in a \"Scenario\" type data store named \"val4\"",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"val1"
										]
									},
									{
										"cells": [
											"Scenario",
											"val2"
										]
									},
									{
										"cells": [
											"Scenario",
											"val3"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 19,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [val1] is: \"14\"\n\n",
									"Text inside Scenario Data Store [val2] is: \"10\"\n\n",
									"Text inside Scenario Data Store [val3] is: \"12\"\n\n",
									"\"36\" is successfully saved as a text in Scenario Data Store [val4]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Subtract the integer values in data stores and save it in a \"Scenario\" type data store named \"totalVal2\"",
							"table": {
								"headers": [
									"First DataStore Type",
									"First Variable Name",
									"Second DataStore Type",
									"Second Variable Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"val2",
											"Scenario",
											"val4"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 17,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [val2] is: \"10\"\n\n",
									"Text inside Scenario Data Store [val4] is: \"36\"\n\n",
									"\"-26\" is successfully saved as a text in Scenario Data Store [totalVal2]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the values inside the data stores equal to the following",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"totalVal2",
											"-26"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 5,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [totalVal2] is: \"-26\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Divide integer values in data stores and save it in a new data store",
					"tags": [],
					"executionTime": 36,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"val1",
											"14"
										]
									},
									{
										"cells": [
											"Scenario",
											"val2",
											"10"
										]
									},
									{
										"cells": [
											"Scenario",
											"val3",
											"12"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 16,
								"skippedReason": "",
								"messages": [
									"\"14\" is successfully saved as a text in Scenario Data Store [val1]",
									"\"10\" is successfully saved as a text in Scenario Data Store [val2]",
									"\"12\" is successfully saved as a text in Scenario Data Store [val3]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Divide the integer values in data stores and save it in a \"Scenario\" type data store named \"totalVal3\"",
							"table": {
								"headers": [
									"First DataStore Type",
									"First Variable Name",
									"Second DataStore Type",
									"Second Variable Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"val1",
											"Scenario",
											"val2"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 15,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [val1] is: \"14\"\n\n",
									"Text inside Scenario Data Store [val2] is: \"10\"\n\n",
									"\"1.4\" is successfully saved as a text in Scenario Data Store [totalVal3]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the values inside the data stores equal to the following",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"totalVal3",
											"1.4"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 5,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [totalVal3] is: \"1.4\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Multiply integer values in data stores and save it in a new data store",
					"tags": [],
					"executionTime": 40,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"val1",
											"14"
										]
									},
									{
										"cells": [
											"Scenario",
											"val2",
											"10"
										]
									},
									{
										"cells": [
											"Scenario",
											"val3",
											"12"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 15,
								"skippedReason": "",
								"messages": [
									"\"14\" is successfully saved as a text in Scenario Data Store [val1]",
									"\"10\" is successfully saved as a text in Scenario Data Store [val2]",
									"\"12\" is successfully saved as a text in Scenario Data Store [val3]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Multiply the integer values in data stores and save it in a \"Scenario\" type data store named \"totalVal4\"",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"val1"
										]
									},
									{
										"cells": [
											"Scenario",
											"val2"
										]
									},
									{
										"cells": [
											"Scenario",
											"val3"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 20,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [val1] is: \"14\"\n\n",
									"Text inside Scenario Data Store [val2] is: \"10\"\n\n",
									"Text inside Scenario Data Store [val3] is: \"12\"\n\n",
									"\"1680\" is successfully saved as a text in Scenario Data Store [totalVal4]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the values inside the data stores equal to the following",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"totalVal4",
											"1680"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 5,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [totalVal4] is: \"1680\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Add decimal values in data stores and save it in a new data store",
					"tags": [],
					"executionTime": 39,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"val1",
											"14.2"
										]
									},
									{
										"cells": [
											"Scenario",
											"val2",
											"10.326"
										]
									},
									{
										"cells": [
											"Scenario",
											"val3",
											"12"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 15,
								"skippedReason": "",
								"messages": [
									"\"14.2\" is successfully saved as a text in Scenario Data Store [val1]",
									"\"10.326\" is successfully saved as a text in Scenario Data Store [val2]",
									"\"12\" is successfully saved as a text in Scenario Data Store [val3]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Add the decimal values in data stores and save it in a \"Scenario\" type data store named \"totalVal\"",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"val1"
										]
									},
									{
										"cells": [
											"Scenario",
											"val2"
										]
									},
									{
										"cells": [
											"Scenario",
											"val3"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 19,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [val1] is: \"14.2\"\n\n",
									"Text inside Scenario Data Store [val2] is: \"10.326\"\n\n",
									"Text inside Scenario Data Store [val3] is: \"12\"\n\n",
									"\"36.526\" is successfully saved as a text in Scenario Data Store [totalVal]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the values inside the data stores equal to the following",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"totalVal",
											"36.526"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 5,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [totalVal] is: \"36.526\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Subtract decimal values in data stores and save it in a new data store",
					"tags": [],
					"executionTime": 63,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"val1",
											"14.2"
										]
									},
									{
										"cells": [
											"Scenario",
											"val2",
											"10.326"
										]
									},
									{
										"cells": [
											"Scenario",
											"val3",
											"12"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 18,
								"skippedReason": "",
								"messages": [
									"\"14.2\" is successfully saved as a text in Scenario Data Store [val1]",
									"\"10.326\" is successfully saved as a text in Scenario Data Store [val2]",
									"\"12\" is successfully saved as a text in Scenario Data Store [val3]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Add the decimal values in data stores and save it in a \"Scenario\" type data store named \"val4\"",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"val1"
										]
									},
									{
										"cells": [
											"Scenario",
											"val2"
										]
									},
									{
										"cells": [
											"Scenario",
											"val3"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 23,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [val1] is: \"14.2\"\n\n",
									"Text inside Scenario Data Store [val2] is: \"10.326\"\n\n",
									"Text inside Scenario Data Store [val3] is: \"12\"\n\n",
									"\"36.526\" is successfully saved as a text in Scenario Data Store [val4]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Subtract the decimal values in data stores and save it in a \"Scenario\" type data store named \"totalVal2\"",
							"table": {
								"headers": [
									"First DataStore Type",
									"First Variable Name",
									"Second DataStore Type",
									"Second Variable Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"val2",
											"Scenario",
											"val4"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 17,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [val2] is: \"10.326\"\n\n",
									"Text inside Scenario Data Store [val4] is: \"36.526\"\n\n",
									"\"-26.2\" is successfully saved as a text in Scenario Data Store [totalVal2]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the values inside the data stores equal to the following",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"totalVal2",
											"-26.2"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 5,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [totalVal2] is: \"-26.2\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Divide decimal values in data stores and save it in a new data store",
					"tags": [],
					"executionTime": 60,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"val1",
											"14.125"
										]
									},
									{
										"cells": [
											"Scenario",
											"val2",
											"10.23"
										]
									},
									{
										"cells": [
											"Scenario",
											"val3",
											"0.125"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 17,
								"skippedReason": "",
								"messages": [
									"\"14.125\" is successfully saved as a text in Scenario Data Store [val1]",
									"\"10.23\" is successfully saved as a text in Scenario Data Store [val2]",
									"\"0.125\" is successfully saved as a text in Scenario Data Store [val3]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Divide the decimal values in data stores and save it in a \"Scenario\" type data store named \"totalVal3\"",
							"table": {
								"headers": [
									"First DataStore Type",
									"First Variable Name",
									"Second DataStore Type",
									"Second Variable Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"val1",
											"Scenario",
											"val2"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 16,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [val1] is: \"14.125\"\n\n",
									"Text inside Scenario Data Store [val2] is: \"10.23\"\n\n",
									"\"1.380743\" is successfully saved as a text in Scenario Data Store [totalVal3]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the values inside the data stores equal to the following",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"totalVal3",
											"1.380743"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 6,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [totalVal3] is: \"1.380743\"\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Divide the decimal values in data stores and save it in a \"Scenario\" type data store named \"totalVal4\"",
							"table": {
								"headers": [
									"First DataStore Type",
									"First Variable Name",
									"Second DataStore Type",
									"Second Variable Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"val1",
											"Scenario",
											"val3"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 16,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [val1] is: \"14.125\"\n\n",
									"Text inside Scenario Data Store [val3] is: \"0.125\"\n\n",
									"\"113.0\" is successfully saved as a text in Scenario Data Store [totalVal4]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the values inside the data stores equal to the following",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"totalVal4",
											"113.0"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 5,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [totalVal4] is: \"113.0\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Multiply decimal values in data stores and save it in a new data store",
					"tags": [],
					"executionTime": 55,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"val1",
											"14.023"
										]
									},
									{
										"cells": [
											"Scenario",
											"val2",
											"10.108"
										]
									},
									{
										"cells": [
											"Scenario",
											"val3",
											"12.1"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 19,
								"skippedReason": "",
								"messages": [
									"\"14.023\" is successfully saved as a text in Scenario Data Store [val1]",
									"\"10.108\" is successfully saved as a text in Scenario Data Store [val2]",
									"\"12.1\" is successfully saved as a text in Scenario Data Store [val3]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Multiply the decimal values in data stores and save it in a \"Scenario\" type data store named \"totalVal4\"",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"val1"
										]
									},
									{
										"cells": [
											"Scenario",
											"val2"
										]
									},
									{
										"cells": [
											"Scenario",
											"val3"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 31,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [val1] is: \"14.023\"\n\n",
									"Text inside Scenario Data Store [val2] is: \"10.108\"\n\n",
									"Text inside Scenario Data Store [val3] is: \"12.1\"\n\n",
									"\"1715.1083\" is successfully saved as a text in Scenario Data Store [totalVal4]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the values inside the data stores equal to the following",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"totalVal4",
											"1715.1083"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 5,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [totalVal4] is: \"1715.1083\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 8,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		},
		{
			"specHeading": "Form-Data Example Specification",
			"fileName": "C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Other\\Form-Data Example.spec",
			"tags": [],
			"executionTime": 4908,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Get Google OAuth Access token",
					"tags": [],
					"executionTime": 535,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get OAuth Access Token from Refresh Token\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 32,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://accounts.google.com/o/oauth2/token\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the form-data key value pairs as follows",
							"table": {
								"headers": [
									"Key",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"grant_type",
											"refresh_token"
										]
									},
									{
										"cells": [
											"client_id",
											"211897666304-ii96f12k6tf8h5k15sp41reo92osrgnm.apps.googleusercontent.com"
										]
									},
									{
										"cells": [
											"client_secret",
											"fILuyCiaWDRElAP6MdWcJIdK"
										]
									},
									{
										"cells": [
											"refresh_token",
											"1/3wu2nvsunxK3mYRDTPun_8t8GeBEKkY--LYfEr9SIvU"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 11,
								"skippedReason": "",
								"messages": [
									"Form Params Map: \n\n",
									"refresh_token = 1/3wu2nvsunxK3mYRDTPun_8t8GeBEKkY--LYfEr9SIvU",
									"grant_type = refresh_token",
									"client_secret = fILuyCiaWDRElAP6MdWcJIdK",
									"client_id = 211897666304-ii96f12k6tf8h5k15sp41reo92osrgnm.apps.googleusercontent.com"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 492,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://accounts.google.com/o/oauth2/token\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 373ms\n\n",
									"Response is: \n{\n    \"access_token\": \"ya29.Gl36BonsGhV9u4Qb15AkR7klvxsFjDlqKttmAWKeq7T-BZawg1OwQRmI2WQXnKSODy5m5BbDI2LhhHPfnXI8ibfEULWucwdNzSJvz43jpqpuybDsy_TKCEaBQBWvAuo\",\n    \"expires_in\": 3600,\n    \"scope\": \"https://www.googleapis.com/auth/androidpublisher\",\n    \"token_type\": \"Bearer\"\n}\n\n",
									"Response Headers are: \nContent-Type=application/json; charset=utf-8\nVary=Origin\nVary=X-Origin\nVary=Referer\nContent-Encoding=gzip\nDate=Mon, 29 Apr 2019 03:42:25 GMT\nServer=ESF\nCache-Control=private\nX-XSS-Protection=0\nX-Frame-Options=SAMEORIGIN\nX-Content-Type-Options=nosniff\nAlt-Svc=quic=\":443\"; ma=2592000; v=\"46,44,43,39\"\nTransfer-Encoding=chunked"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"200\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.expires_in",
											"3600"
										]
									},
									{
										"cells": [
											"$.token_type",
											"Bearer"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Upload file",
					"tags": [],
					"executionTime": 4373,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 696,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create Deck\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 32,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user saves test data inside excel file into data stores",
									"table": {
										"headers": [
											"DataStore Type",
											"Variable Name",
											"Excel Sheet Name",
											"Key Name"
										],
										"rows": [
											{
												"cells": [
													"Scenario",
													"varUserId",
													"Deck_Test_Data",
													"userId"
												]
											},
											{
												"cells": [
													"Scenario",
													"varDeckTitle",
													"Deck_Test_Data",
													"deckTitle"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 22,
										"skippedReason": "",
										"messages": [
											"\"ffffffff5badc1cdbe64ee171a740bed\" is successfully saved as a text in Scenario Data Store [varUserId]",
											"\"Trigonometry Ch.1\" is successfully saved as a text in Scenario Data Store [varDeckTitle]"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes using data stores as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Attibute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#deckTitle",
													"yes",
													"Scenario",
													"varDeckTitle",
													""
												]
											},
											{
												"cells": [
													"#userId",
													"yes",
													"Scenario",
													"varUserId",
													""
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 18,
										"skippedReason": "",
										"messages": [
											"Text inside Scenario Data Store [varDeckTitle] is: \"Trigonometry Ch.1\"\n\n",
											"Text inside Scenario Data Store [varUserId] is: \"ffffffff5badc1cdbe64ee171a740bed\"\n\n",
											"The JSON request body that you are going to use for the API is:\n{\n        \"title\": \"Trigonometry Ch.1\",\n        \"userId\": \"ffffffff5badc1cdbe64ee171a740bed\"\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 619,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 521ms\n\n",
											"Response is: \n{\n    \"id\": \"5cc672a1954c030011c98968\",\n    \"title\": \"Trigonometry Ch.1\",\n    \"book\": {\n        \n    },\n    \"purchaseInfo\": {\n        \"price\": 0.0\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": false\n    },\n    \"epochTime\": {\n        \"createdAt\": 1556509345626,\n        \"updatedAt\": 1556509345626\n    },\n    \"userId\": \"ffffffff5badc1cdbe64ee171a740bed\",\n    \"createdAt\": \"2019-04-29T03:42:25.626Z\",\n    \"updatedAt\": \"2019-04-29T03:42:25.628Z\",\n    \"archived\": false,\n    \"cardPreview\": false,\n    \"noOfCards\": 0,\n    \"progress\": 0,\n    \"downloads\": 0,\n    \"starred\": false,\n    \"examReminder\": {\n        \n    },\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nContent-Type=application/json;charset=UTF-8\ncorrelation-id=bceed276-b4da-44cb-a1da-d09e1cfd6ba4\nDate=Mon, 29 Apr 2019 03:42:25 GMT\nServer=nginx\nX-Content-Type-Options=nosniff\nX-Loadbalancer-Id=nginx-ingress-nvll1\nX-XSS-Protection=1; mode=block\nContent-Length=472\nConnection=keep-alive"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the JSON Path Assertions for the response should be equal to the values inside the data stores",
									"table": {
										"headers": [
											"JSON Path",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Expected Value"
										],
										"rows": [
											{
												"cells": [
													"$.title",
													"yes",
													"Scenario",
													"varDeckTitle",
													""
												]
											},
											{
												"cells": [
													"$.userId",
													"yes",
													"Scenario",
													"varUserId",
													""
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 5,
										"skippedReason": "",
										"messages": [
											"Text inside Scenario Data Store [varDeckTitle] is: \"Trigonometry Ch.1\"\n\n",
											"Text inside Scenario Data Store [varUserId] is: \"ffffffff5badc1cdbe64ee171a740bed\"\n\n"
										],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"varDeckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [
									"\"5cc672a1954c030011c98968\" is successfully saved as a text in Scenario Data Store [varDeckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"File Upload\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 33,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/cards/file\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the form-data key value pairs using data stores as follows",
							"table": {
								"headers": [
									"Key",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"title",
											"n",
											"",
											"",
											"DOCX file"
										]
									},
									{
										"cells": [
											"creatorId",
											"n",
											"",
											"",
											"tester1"
										]
									},
									{
										"cells": [
											"creatorPlatform",
											"n",
											"",
											"",
											"Web"
										]
									},
									{
										"cells": [
											"creatoredSource",
											"n",
											"",
											"",
											"File"
										]
									},
									{
										"cells": [
											"creatoredType",
											"n",
											"",
											"",
											"Auto"
										]
									},
									{
										"cells": [
											"deckId",
											"y",
											"Scenario",
											"varDeckId",
											""
										]
									},
									{
										"cells": [
											"isExpert",
											"n",
											"",
											"",
											"false"
										]
									},
									{
										"cells": [
											"examDate",
											"n",
											"",
											"",
											""
										]
									},
									{
										"cells": [
											"userId",
											"n",
											"",
											"",
											"tester1"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 25,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [varDeckId] is: \"5cc672a1954c030011c98968\"\n\n",
									"Form Params Map: \n\n",
									"isExpert = false",
									"examDate = ",
									"creatorPlatform = Web",
									"creatoredType = Auto",
									"deckId = 5cc672a1954c030011c98968",
									"creatorId = tester1",
									"creatoredSource = File",
									"title = DOCX file",
									"userId = tester1"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the multipart file key value pairs as follows",
							"table": {
								"headers": [
									"Key",
									"File Path",
									"Mime Type"
								],
								"rows": [
									{
										"cells": [
											"file",
											"/resources/docx_files/DOCX file1.docx",
											"application/vnd.openxmlformats-officedocument.wordprocessingml.document"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2910,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/cards/file\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 2731ms\n\n",
									"Response is: \n[\n    {\n        \"id\": \"5cc672a33b58f10010d103b2\",\n        \"question\": {\n            \"timeout\": 0,\n            \"media\": null,\n            \"prompt\": \"Click Insert and then choose the elements you want from the different _ _ _ _ _.\",\n            \"imageUrl\": \"\",\n            \"promptType\": \"TEXT\"\n        },\n        \"stats\": null,\n        \"kind\": \"SHORT_ANSWER\",\n        \"learningObjectives\": [\n            \"Empty\"\n        ],\n        \"rationale\": \"Test Rationalae\",\n        \"tags\": [\n            \"Empty\"\n        ],\n        \"creatorId\": \"tester1\",\n        \"deckId\": \"5cc672a1954c030011c98968\",\n        \"creatoredType\": \"Auto\",\n        \"creatorPlatform\": \"Web\",\n        \"creatoredSource\": \"File\",\n        \"correctAnswers\": [\n            1\n        ],\n        \"answers\": [\n            {\n                \"id\": 1,\n                \"value\": \"galleries\",\n                \"type\": \"TEXT\",\n                \"caseSensitive\": false,\n                \"correct\": false\n            }\n        ],\n        \"tempQuestionId\": \"tempQuestionId\"\n    },\n    {\n        \"id\": \"5cc672a33b58f10010d103b3\",\n        \"question\": {\n            \"timeout\": 0,\n            \"media\": null,\n            \"prompt\": \"For example, you can add a matching cover page, header, and _ _ _ _.\",\n            \"imageUrl\": \"\",\n            \"promptType\": \"TEXT\"\n        },\n        \"stats\": null,\n        \"kind\": \"SHORT_ANSWER\",\n        \"learningObjectives\": [\n            \"Empty\"\n        ],\n        \"rationale\": \"Test Rationalae\",\n        \"tags\": [\n            \"Empty\"\n        ],\n        \"creatorId\": \"tester1\",\n        \"deckId\": \"5cc672a1954c030011c98968\",\n        \"creatoredType\": \"Auto\",\n        \"creatorPlatform\": \"Web\",\n        \"creatoredSource\": \"File\",\n        \"correctAnswers\": [\n            1\n        ],\n        \"answers\": [\n            {\n                \"id\": 1,\n                \"value\": \"sidebar\",\n                \"type\": \"TEXT\",\n                \"caseSensitive\": false,\n                \"correct\": false\n            }\n        ],\n        \"tempQuestionId\": \"tempQuestionId\"\n    },\n    {\n        \"id\": \"5cc672a33b58f10010d103b4\",\n        \"question\": {\n            \"timeout\": 0,\n            \"media\": null,\n            \"prompt\": \"If you need to stop reading before you reach the end, _ _  remembers where you left off - even on another device.\",\n            \"imageUrl\": \"\",\n            \"promptType\": \"TEXT\"\n        },\n        \"stats\": null,\n        \"kind\": \"SHORT_ANSWER\",\n        \"learningObjectives\": [\n            \"Empty\"\n        ],\n        \"rationale\": \"Test Rationalae\",\n        \"tags\": [\n            \"Empty\"\n        ],\n        \"creatorId\": \"tester1\",\n        \"deckId\": \"5cc672a1954c030011c98968\",\n        \"creatoredType\": \"Auto\",\n        \"creatorPlatform\": \"Web\",\n        \"creatoredSource\": \"File\",\n        \"correctAnswers\": [\n            1\n        ],\n        \"answers\": [\n            {\n                \"id\": 1,\n                \"value\": \"Word\",\n                \"type\": \"TEXT\",\n                \"caseSensitive\": false,\n                \"correct\": false\n            }\n        ],\n        \"tempQuestionId\": \"tempQuestionId\"\n    },\n    {\n        \"id\": \"5cc672a33b58f10010d103b5\",\n        \"question\": {\n            \"timeout\": 0,\n            \"media\": null,\n            \"prompt\": \"Reading is easier, too, in the new Reading _ _ .\",\n            \"imageUrl\": \"\",\n            \"promptType\": \"TEXT\"\n        },\n        \"stats\": null,\n        \"kind\": \"SHORT_ANSWER\",\n        \"learningObjectives\": [\n            \"Empty\"\n        ],\n        \"rationale\": \"Test Rationalae\",\n        \"tags\": [\n            \"Empty\"\n        ],\n        \"creatorId\": \"tester1\",\n        \"deckId\": \"5cc672a1954c030011c98968\",\n        \"creatoredType\": \"Auto\",\n        \"creatorPlatform\": \"Web\",\n        \"creatoredSource\": \"File\",\n        \"correctAnswers\": [\n            1\n        ],\n        \"answers\": [\n            {\n                \"id\": 1,\n                \"value\": \"view\",\n                \"type\": \"TEXT\",\n                \"caseSensitive\": false,\n                \"correct\": false\n            }\n        ],\n        \"tempQuestionId\": \"tempQuestionId\"\n    },\n    {\n        \"id\": \"5cc672a33b58f10010d103b6\",\n        \"question\": {\n            \"timeout\": 0,\n            \"media\": null,\n            \"prompt\": \"Save time in Word with new buttons that show up where you _ _  them.\",\n            \"imageUrl\": \"\",\n            \"promptType\": \"TEXT\"\n        },\n        \"stats\": null,\n        \"kind\": \"SHORT_ANSWER\",\n        \"learningObjectives\": [\n            \"Empty\"\n        ],\n        \"rationale\": \"Test Rationalae\",\n        \"tags\": [\n            \"Empty\"\n        ],\n        \"creatorId\": \"tester1\",\n        \"deckId\": \"5cc672a1954c030011c98968\",\n        \"creatoredType\": \"Auto\",\n        \"creatorPlatform\": \"Web\",\n        \"creatoredSource\": \"File\",\n        \"correctAnswers\": [\n            1\n        ],\n        \"answers\": [\n            {\n                \"id\": 1,\n                \"value\": \"need\",\n                \"type\": \"TEXT\",\n                \"caseSensitive\": false,\n                \"correct\": false\n            }\n        ],\n        \"tempQuestionId\": \"tempQuestionId\"\n    },\n    {\n        \"id\": \"5cc672a43b58f10010d103b7\",\n        \"question\": {\n            \"timeout\": 0,\n            \"media\": null,\n            \"prompt\": \"_ _ _  and styles also help keep your document coordinated.\",\n            \"imageUrl\": \"\",\n            \"promptType\": \"TEXT\"\n        },\n        \"stats\": null,\n        \"kind\": \"SHORT_ANSWER\",\n        \"learningObjectives\": [\n            \"Empty\"\n        ],\n        \"rationale\": \"Test Rationalae\",\n        \"tags\": [\n            \"Empty\"\n        ],\n        \"creatorId\": \"tester1\",\n        \"deckId\": \"5cc672a1954c030011c98968\",\n        \"creatoredType\": \"Auto\",\n        \"creatorPlatform\": \"Web\",\n        \"creatoredSource\": \"File\",\n        \"correctAnswers\": [\n            1\n        ],\n        \"answers\": [\n            {\n                \"id\": 1,\n                \"value\": \"Themes\",\n                \"type\": \"TEXT\",\n                \"caseSensitive\": false,\n                \"correct\": false\n            }\n        ],\n        \"tempQuestionId\": \"tempQuestionId\"\n    },\n    {\n        \"id\": \"5cc672a43b58f10010d103b8\",\n        \"question\": {\n            \"timeout\": 0,\n            \"media\": null,\n            \"prompt\": \"To change the way a picture fits in your document, click it and a button for layout _ _ _ _ appears next to it.\",\n            \"imageUrl\": \"\",\n            \"promptType\": \"TEXT\"\n        },\n        \"stats\": null,\n        \"kind\": \"SHORT_ANSWER\",\n        \"learningObjectives\": [\n            \"Empty\"\n        ],\n        \"rationale\": \"Test Rationalae\",\n        \"tags\": [\n            \"Empty\"\n        ],\n        \"creatorId\": \"tester1\",\n        \"deckId\": \"5cc672a1954c030011c98968\",\n        \"creatoredType\": \"Auto\",\n        \"creatorPlatform\": \"Web\",\n        \"creatoredSource\": \"File\",\n        \"correctAnswers\": [\n            1\n        ],\n        \"answers\": [\n            {\n                \"id\": 1,\n                \"value\": \"options\",\n                \"type\": \"TEXT\",\n                \"caseSensitive\": false,\n                \"correct\": false\n            }\n        ],\n        \"tempQuestionId\": \"tempQuestionId\"\n    },\n    {\n        \"id\": \"5cc672a43b58f10010d103b9\",\n        \"question\": {\n            \"timeout\": 0,\n            \"media\": null,\n            \"prompt\": \"To make your document look professionally produced, _ _  provides header, footer, cover page, and text box designs that complement each other.\",\n            \"imageUrl\": \"\",\n            \"promptType\": \"TEXT\"\n        },\n        \"stats\": null,\n        \"kind\": \"SHORT_ANSWER\",\n        \"learningObjectives\": [\n            \"Empty\"\n        ],\n        \"rationale\": \"Test Rationalae\",\n        \"tags\": [\n            \"Empty\"\n        ],\n        \"creatorId\": \"tester1\",\n        \"deckId\": \"5cc672a1954c030011c98968\",\n        \"creatoredType\": \"Auto\",\n        \"creatorPlatform\": \"Web\",\n        \"creatoredSource\": \"File\",\n        \"correctAnswers\": [\n            1\n        ],\n        \"answers\": [\n            {\n                \"id\": 1,\n                \"value\": \"Word\",\n                \"type\": \"TEXT\",\n                \"caseSensitive\": false,\n                \"correct\": false\n            }\n        ],\n        \"tempQuestionId\": \"tempQuestionId\"\n    },\n    {\n        \"id\": \"5cc672a43b58f10010d103ba\",\n        \"question\": {\n            \"timeout\": 0,\n            \"media\": null,\n            \"prompt\": \"_ _ _ provides a powerful way to help you prove your point.\",\n            \"imageUrl\": \"\",\n            \"promptType\": \"TEXT\"\n        },\n        \"stats\": null,\n        \"kind\": \"SHORT_ANSWER\",\n        \"learningObjectives\": [\n            \"Empty\"\n        ],\n        \"rationale\": \"Test Rationalae\",\n        \"tags\": [\n            \"Empty\"\n        ],\n        \"creatorId\": \"tester1\",\n        \"deckId\": \"5cc672a1954c030011c98968\",\n        \"creatoredType\": \"Auto\",\n        \"creatorPlatform\": \"Web\",\n        \"creatoredSource\": \"File\",\n        \"correctAnswers\": [\n            1\n        ],\n        \"answers\": [\n            {\n                \"id\": 1,\n                \"value\": \"Video\",\n                \"type\": \"TEXT\",\n                \"caseSensitive\": false,\n                \"correct\": false\n            }\n        ],\n        \"tempQuestionId\": \"tempQuestionId\"\n    },\n    {\n        \"id\": \"5cc672a43b58f10010d103bb\",\n        \"question\": {\n            \"timeout\": 0,\n            \"media\": null,\n            \"prompt\": \"When you apply styles, your headings change to match the new _ _ _.\",\n            \"imageUrl\": \"\",\n            \"promptType\": \"TEXT\"\n        },\n        \"stats\": null,\n        \"kind\": \"SHORT_ANSWER\",\n        \"learningObjectives\": [\n            \"Empty\"\n        ],\n        \"rationale\": \"Test Rationalae\",\n        \"tags\": [\n            \"Empty\"\n        ],\n        \"creatorId\": \"tester1\",\n        \"deckId\": \"5cc672a1954c030011c98968\",\n        \"creatoredType\": \"Auto\",\n        \"creatorPlatform\": \"Web\",\n        \"creatoredSource\": \"File\",\n        \"correctAnswers\": [\n            1\n        ],\n        \"answers\": [\n            {\n                \"id\": 1,\n                \"value\": \"theme\",\n                \"type\": \"TEXT\",\n                \"caseSensitive\": false,\n                \"correct\": false\n            }\n        ],\n        \"tempQuestionId\": \"tempQuestionId\"\n    },\n    {\n        \"id\": \"5cc672a43b58f10010d103bc\",\n        \"question\": {\n            \"timeout\": 0,\n            \"media\": null,\n            \"prompt\": \"When you click Design and choose a new Theme, the pictures, charts, and _ _ _ _  graphics change to match your new theme.\",\n            \"imageUrl\": \"\",\n            \"promptType\": \"TEXT\"\n        },\n        \"stats\": null,\n        \"kind\": \"SHORT_ANSWER\",\n        \"learningObjectives\": [\n            \"Empty\"\n        ],\n        \"rationale\": \"Test Rationalae\",\n        \"tags\": [\n            \"Empty\"\n        ],\n        \"creatorId\": \"tester1\",\n        \"deckId\": \"5cc672a1954c030011c98968\",\n        \"creatoredType\": \"Auto\",\n        \"creatorPlatform\": \"Web\",\n        \"creatoredSource\": \"File\",\n        \"correctAnswers\": [\n            1\n        ],\n        \"answers\": [\n            {\n                \"id\": 1,\n                \"value\": \"SmartArt\",\n                \"type\": \"TEXT\",\n                \"caseSensitive\": false,\n                \"correct\": false\n            }\n        ],\n        \"tempQuestionId\": \"tempQuestionId\"\n    },\n    {\n        \"id\": \"5cc672a43b58f10010d103bd\",\n        \"question\": {\n            \"timeout\": 0,\n            \"media\": null,\n            \"prompt\": \"When you click Online Video, you can paste in the embed code for the video you want to _ _.\",\n            \"imageUrl\": \"\",\n            \"promptType\": \"TEXT\"\n        },\n        \"stats\": null,\n        \"kind\": \"SHORT_ANSWER\",\n        \"learningObjectives\": [\n            \"Empty\"\n        ],\n        \"rationale\": \"Test Rationalae\",\n        \"tags\": [\n            \"Empty\"\n        ],\n        \"creatorId\": \"tester1\",\n        \"deckId\": \"5cc672a1954c030011c98968\",\n        \"creatoredType\": \"Auto\",\n        \"creatorPlatform\": \"Web\",\n        \"creatoredSource\": \"File\",\n        \"correctAnswers\": [\n            1\n        ],\n        \"answers\": [\n            {\n                \"id\": 1,\n                \"value\": \"add\",\n                \"type\": \"TEXT\",\n                \"caseSensitive\": false,\n                \"correct\": false\n            }\n        ],\n        \"tempQuestionId\": \"tempQuestionId\"\n    },\n    {\n        \"id\": \"5cc672a43b58f10010d103be\",\n        \"question\": {\n            \"timeout\": 0,\n            \"media\": null,\n            \"prompt\": \"When you work on a table, click where you want to add a row or a column, and then click the plus _ _ .\",\n            \"imageUrl\": \"\",\n            \"promptType\": \"TEXT\"\n        },\n        \"stats\": null,\n        \"kind\": \"SHORT_ANSWER\",\n        \"learningObjectives\": [\n            \"Empty\"\n        ],\n        \"rationale\": \"Test Rationalae\",\n        \"tags\": [\n            \"Empty\"\n        ],\n        \"creatorId\": \"tester1\",\n        \"deckId\": \"5cc672a1954c030011c98968\",\n        \"creatoredType\": \"Auto\",\n        \"creatorPlatform\": \"Web\",\n        \"creatoredSource\": \"File\",\n        \"correctAnswers\": [\n            1\n        ],\n        \"answers\": [\n            {\n                \"id\": 1,\n                \"value\": \"sign\",\n                \"type\": \"TEXT\",\n                \"caseSensitive\": false,\n                \"correct\": false\n            }\n        ],\n        \"tempQuestionId\": \"tempQuestionId\"\n    },\n    {\n        \"id\": \"5cc672a43b58f10010d103bf\",\n        \"question\": {\n            \"timeout\": 0,\n            \"media\": null,\n            \"prompt\": \"You can also type a keyword to search online for the video that best fits your _ _ _ _ .\",\n            \"imageUrl\": \"\",\n            \"promptType\": \"TEXT\"\n        },\n        \"stats\": null,\n        \"kind\": \"SHORT_ANSWER\",\n        \"learningObjectives\": [\n            \"Empty\"\n        ],\n        \"rationale\": \"Test Rationalae\",\n        \"tags\": [\n            \"Empty\"\n        ],\n        \"creatorId\": \"tester1\",\n        \"deckId\": \"5cc672a1954c030011c98968\",\n        \"creatoredType\": \"Auto\",\n        \"creatorPlatform\": \"Web\",\n        \"creatoredSource\": \"File\",\n        \"correctAnswers\": [\n            1\n        ],\n        \"answers\": [\n            {\n                \"id\": 1,\n                \"value\": \"document\",\n                \"type\": \"TEXT\",\n                \"caseSensitive\": false,\n                \"correct\": false\n            }\n        ],\n        \"tempQuestionId\": \"tempQuestionId\"\n    },\n    {\n        \"id\": \"5cc672a43b58f10010d103c0\",\n        \"question\": {\n            \"timeout\": 0,\n            \"media\": null,\n            \"prompt\": \"You can collapse parts of the document and focus on the text you _ _ .\",\n            \"imageUrl\": \"\",\n            \"promptType\": \"TEXT\"\n        },\n        \"stats\": null,\n        \"kind\": \"SHORT_ANSWER\",\n        \"learningObjectives\": [\n            \"Empty\"\n        ],\n        \"rationale\": \"Test Rationalae\",\n        \"tags\": [\n            \"Empty\"\n        ],\n        \"creatorId\": \"tester1\",\n        \"deckId\": \"5cc672a1954c030011c98968\",\n        \"creatoredType\": \"Auto\",\n        \"creatorPlatform\": \"Web\",\n        \"creatoredSource\": \"File\",\n        \"correctAnswers\": [\n            1\n        ],\n        \"answers\": [\n            {\n                \"id\": 1,\n                \"value\": \"want\",\n                \"type\": \"TEXT\",\n                \"caseSensitive\": false,\n                \"correct\": false\n            }\n        ],\n        \"tempQuestionId\": \"tempQuestionId\"\n    }\n]\n\n",
									"Response Headers are: \nContent-Type=application/json;charset=UTF-8\ncorrelation-id=1de52a12-f30c-4f82-b6b4-3d292de38625\nDate=Mon, 29 Apr 2019 03:42:28 GMT\nServer=nginx\nX-Content-Type-Options=nosniff\nX-Loadbalancer-Id=nginx-ingress-v61xk\nX-XSS-Protection=1; mode=block\ntransfer-encoding=chunked\nConnection=keep-alive"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.length()",
											"15"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 5,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Delete deck by deckId saved in \u003cdataStoreType\u003e type data store named \u003cdataStoreVariableName\u003e",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 701,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Delete Deck\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 42,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/decks\n\n",
											"HTTP Method is: DELETE\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the path parameters using data stores as follows",
									"table": {
										"headers": [
											"Path Name",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Path Value"
										],
										"rows": [
											{
												"cells": [
													"deckId",
													"yes",
													"Scenario",
													"varDeckId",
													""
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 3,
										"skippedReason": "",
										"messages": [
											"Text inside Scenario Data Store [varDeckId] is: \"5cc672a1954c030011c98968\"\n\n",
											"Path parameters which will append to the request URL:/5cc672a1954c030011c98968\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 656,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/decks/5cc672a1954c030011c98968\n\n",
											"HTTP Method is: DELETE\n\n",
											"Response Time is: 563ms\n\n",
											"Response is Empty\n\n",
											"Response Headers are: \ncorrelation-id=1940e788-7388-4139-a2a4-10d1450cdef2\nDate=Mon, 29 Apr 2019 03:42:29 GMT\nServer=nginx\nX-Content-Type-Options=nosniff\nX-Loadbalancer-Id=nginx-ingress-2j49k\nX-XSS-Protection=1; mode=block\nConnection=keep-alive"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"204\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 2,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		},
		{
			"specHeading": "Reading Values From Data Stores Specification",
			"fileName": "C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Data Stores\\Reading Values From Data Stores.spec",
			"tags": [
				"data_store"
			],
			"executionTime": 16,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Saving values to data stores",
					"tags": [],
					"executionTime": 7,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"variable1",
											"Osanda Deshan"
										]
									},
									{
										"cells": [
											"Spec",
											"variable2",
											"Gauge Framework"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 7,
								"skippedReason": "",
								"messages": [
									"\"Osanda Deshan\" is successfully saved as a text in Scenario Data Store [variable1]",
									"\"Gauge Framework\" is successfully saved as a text in Specification Data Store [variable2]"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Reading values from data stores",
					"tags": [],
					"executionTime": 9,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user read the values from data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name"
								],
								"rows": [
									{
										"cells": [
											"Spec",
											"variable2"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 4,
								"skippedReason": "",
								"messages": [
									"Text inside Specification Data Store [variable2] is: \"Gauge Framework\"\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the values inside the data stores equal to the following",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"Spec",
											"variable2",
											"Gauge Framework"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [
									"Text inside Specification Data Store [variable2] is: \"Gauge Framework\"\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the values inside the data stores not equal to the following",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"Spec",
											"variable2",
											"Gauge Framewor"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3,
								"skippedReason": "",
								"messages": [
									"Text inside Specification Data Store [variable2] is: \"Gauge Framework\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 2,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		},
		{
			"specHeading": "Creating A List From Data Store Values Specification",
			"fileName": "C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Data Stores\\Creating A List From Data Store Values.spec",
			"tags": [
				"data_store"
			],
			"executionTime": 34,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Create a list from data store values",
					"tags": [],
					"executionTime": 34,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"variable1",
											"Osanda Deshan"
										]
									},
									{
										"cells": [
											"Specification",
											"variable2",
											"Osanda Nimalarathna"
										]
									},
									{
										"cells": [
											"Scenario",
											"variable3",
											"Software Automation"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 13,
								"skippedReason": "",
								"messages": [
									"\"Osanda Deshan\" is successfully saved as a text in Scenario Data Store [variable1]",
									"\"Osanda Nimalarathna\" is successfully saved as a text in Specification Data Store [variable2]",
									"\"Software Automation\" is successfully saved as a text in Scenario Data Store [variable3]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as a \"String\" data type list into \"Scenario\" type data store by referencing the variable name as \"var1\"",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"variable1"
										]
									},
									{
										"cells": [
											"Specification",
											"variable2"
										]
									},
									{
										"cells": [
											"Scenario",
											"variable3"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 17,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [variable1] is: \"Osanda Deshan\"\n\n",
									"Text inside Specification Data Store [variable2] is: \"Osanda Nimalarathna\"\n\n",
									"Text inside Scenario Data Store [variable3] is: \"Software Automation\"\n\n",
									"\"\"Osanda Deshan\",\"Osanda Nimalarathna\",\"Software Automation\"\" is successfully saved as a text in Scenario Data Store [var1]",
									"Value List: \"Osanda Deshan\",\"Osanda Nimalarathna\",\"Software Automation\""
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user read the values from data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"var1"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 4,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [var1] is: \"\"Osanda Deshan\",\"Osanda Nimalarathna\",\"Software Automation\"\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 1,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		},
		{
			"specHeading": "MongoDB Test Specification",
			"fileName": "C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\DB Test\\MongoDB Test.spec",
			"tags": [],
			"executionTime": 60478,
			"executionStatus": "fail",
			"scenarios": [
				{
					"scenarioHeading": "MongoDB Test - Without data stores",
					"tags": [],
					"executionTime": 30456,
					"executionStatus": "fail",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given a user need to connect to the \"deckservice_qaint\" Mongo database and \"user_decks\" collection",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the MongoDB authentication as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication credentials required?",
											"No"
										]
									},
									{
										"cells": [
											"Username",
											"N/A"
										]
									},
									{
										"cells": [
											"Source",
											"N/A"
										]
									},
									{
										"cells": [
											"Password",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user executes the Mongo query using key as \"title\" and value as \"API Deck3\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "fail",
								"stackTrace": "com.mongodb.connection.BaseCluster.createTimeoutException(BaseCluster.java:375)\ncom.mongodb.connection.BaseCluster.selectServer(BaseCluster.java:104)\ncom.mongodb.binding.ClusterBinding$ClusterBindingConnectionSource.\u003cinit\u003e(ClusterBinding.java:75)\ncom.mongodb.binding.ClusterBinding$ClusterBindingConnectionSource.\u003cinit\u003e(ClusterBinding.java:71)\ncom.mongodb.binding.ClusterBinding.getReadConnectionSource(ClusterBinding.java:63)\ncom.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:404)\ncom.mongodb.operation.FindOperation.execute(FindOperation.java:709)\ncom.mongodb.operation.FindOperation.execute(FindOperation.java:81)\ncom.mongodb.Mongo.execute(Mongo.java:810)\ncom.mongodb.Mongo$2.execute(Mongo.java:797)\ncom.mongodb.FindIterableImpl$FindOperationIterable.first(FindIterableImpl.java:273)\ncom.mongodb.FindIterableImpl.first(FindIterableImpl.java:205)\ncom.maxsoft.intelliapi.util.database.mongo.MongoOperator.executeQuery(MongoOperator.java:54)\ncom.maxsoft.intelliapi.database.mongo.MongoStepImpl.executeMongoDbQuery(MongoStepImpl.java:83)\ncom.maxsoft.intelliapi.stepdefinition.AllStepsDefinitions.executeMongoQuery(AllStepsDefinitions.java:422)\n",
								"screenshot": "",
								"errorMessage": "com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches ReadPreferenceServerSelector{readPreference=primary}. Client view of cluster state is {type=UNKNOWN, servers=[{address=10.199.253.208:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.SocketTimeoutException: connect timed out}}]",
								"executionTime": 30455,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "MongoDB Test - With data stores",
					"tags": [],
					"executionTime": 30022,
					"executionStatus": "fail",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given a user need to connect to the \"deckservice_qaint\" Mongo database and \"user_decks\" collection",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the MongoDB authentication as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication credentials required?",
											"No"
										]
									},
									{
										"cells": [
											"Username",
											"N/A"
										]
									},
									{
										"cells": [
											"Source",
											"N/A"
										]
									},
									{
										"cells": [
											"Password",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"deckTitle",
											"API Deck3"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 12,
								"skippedReason": "",
								"messages": [
									"\"API Deck3\" is successfully saved as a text in Scenario Data Store [deckTitle]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user executes the Mongo query using data stores as follows",
							"table": {
								"headers": [
									"Key",
									"Is Data Store Used For Value?",
									"Data Store Type",
									"Data Store Variable Name",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"title",
											"y",
											"scenario",
											"deckTitle",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "fail",
								"stackTrace": "com.mongodb.connection.BaseCluster.createTimeoutException(BaseCluster.java:375)\ncom.mongodb.connection.BaseCluster.selectServer(BaseCluster.java:104)\ncom.mongodb.binding.ClusterBinding$ClusterBindingConnectionSource.\u003cinit\u003e(ClusterBinding.java:75)\ncom.mongodb.binding.ClusterBinding$ClusterBindingConnectionSource.\u003cinit\u003e(ClusterBinding.java:71)\ncom.mongodb.binding.ClusterBinding.getReadConnectionSource(ClusterBinding.java:63)\ncom.mongodb.operation.OperationHelper.withConnection(OperationHelper.java:404)\ncom.mongodb.operation.FindOperation.execute(FindOperation.java:709)\ncom.mongodb.operation.FindOperation.execute(FindOperation.java:81)\ncom.mongodb.Mongo.execute(Mongo.java:810)\ncom.mongodb.Mongo$2.execute(Mongo.java:797)\ncom.mongodb.FindIterableImpl$FindOperationIterable.first(FindIterableImpl.java:273)\ncom.mongodb.FindIterableImpl.first(FindIterableImpl.java:205)\ncom.maxsoft.intelliapi.util.database.mongo.MongoOperator.executeQuery(MongoOperator.java:54)\ncom.maxsoft.intelliapi.database.mongo.MongoStepImpl.readDataStoreAndExecuteMongoDbQuery(MongoStepImpl.java:133)\ncom.maxsoft.intelliapi.stepdefinition.AllStepsDefinitions.readDataStoreAndExecuteMongoDbQuery(AllStepsDefinitions.java:427)\n",
								"screenshot": "",
								"errorMessage": "com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches ReadPreferenceServerSelector{readPreference=primary}. Client view of cluster state is {type=UNKNOWN, servers=[{address=10.199.253.208:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.SocketTimeoutException: connect timed out}}]",
								"executionTime": 30009,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [deckTitle] is: \"API Deck3\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 0,
			"failedScenarioCount": 2,
			"skippedScenarioCount": 0
		},
		{
			"specHeading": "Get Auth Token Specification",
			"fileName": "C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Access Token\\Get Auth Token.spec",
			"tags": [
				"get_auth_token"
			],
			"executionTime": 4347,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Invoke Auth API using valid username and password and save the access token inside the text file",
					"tags": [],
					"executionTime": 4347,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get Auth Token\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1145,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#username",
											"osanda12"
										]
									},
									{
										"cells": [
											"#password",
											"Password1"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 139,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\n \"userName\": \"osanda12\",\n \"password\": \"Password1\"\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3008,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 2427ms\n\n",
									"Response is: \n{\n    \"status\": \"success\",\n    \"data\": \"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTMyLCJpYXQiOjE1NTY1MDkzMzEsInNlc3NpZCI6ImMwZmQ1NzJkLTcxOGEtNGNiMC1hNGEyLTRlNjk0M2E3OWI0YyJ9.EKjQpQbKVY2a5j4tRtqAkuYziCgXh4F5kvTyr0ubkFQc91q_0n2CKGqsivq5BahCnv6FUnrb1sRQRau3nr6KVUjydEqSggLI9QSn9yrj8-tSWJn452csW8Ze8xz6ZtNVW3kCo15dp4yhbwFuKRUPeRGJl-_zzqCwEOEHjTsroGI\"\n}\n\n",
									"Response Headers are: \nDate=Mon, 29 Apr 2019 03:42:11 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nConnection=keep-alive\nSet-Cookie=AWSALB=fSnLhuVjzuYozKhlQz6xsZeE/+R/nvrkX6x05cKAkiXbPfL7T0nW1KWchzZI555NKNLBWaKZfjH+gRoDB2BCREHanLOryn6fke1a8sE/eVJV06N3NDMHRM9DEj0X; Expires=Mon, 06 May 2019 03:42:11 GMT; Path=/\nServer=nginx/1.15.7\nCorrelation-Id=e4bc6d27-6955-4c78-9e08-209b22a88ed4\nLocation=https://int-piapi-internal.stg-openclass.com/tokens/eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTMyLCJpYXQiOjE1NTY1MDkzMzEsInNlc3NpZCI6ImMwZmQ1NzJkLTcxOGEtNGNiMC1hNGEyLTRlNjk0M2E3OWI0YyJ9.EKjQpQbKVY2a5j4tRtqAkuYziCgXh4F5kvTyr0ubkFQc91q_0n2CKGqsivq5BahCnv6FUnrb1sRQRau3nr6KVUjydEqSggLI9QSn9yrj8-tSWJn452csW8Ze8xz6ZtNVW3kCo15dp4yhbwFuKRUPeRGJl-_zzqCwEOEHjTsroGI"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"success"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 48,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the access token in the response which is located inside the JSON Path of \"$.data\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 5,
								"skippedReason": "",
								"messages": [
									"Successfully saved the access token into the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\""
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 1,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		},
		{
			"specHeading": "Read CSV File Saved In Pre Test Specification",
			"fileName": "C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Other\\Read CSV File Saved In Pre Test.spec",
			"tags": [],
			"executionTime": 3925,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Delete questions by questionIds which was saved in a CSV file from the pre test",
					"tags": [],
					"executionTime": 1419,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Delete Question\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 80,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/questions\n\n",
									"HTTP Method is: DELETE\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters as follows",
							"table": {
								"headers": [
									"Path Parameter",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"questionId",
											"5cc67252fc63c2000fcff722"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"Path parameters which will append to the request URL:/5cc67252fc63c2000fcff722\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1338,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/questions/5cc67252fc63c2000fcff722\n\n",
									"HTTP Method is: DELETE\n\n",
									"Response Time is: 1150ms\n\n",
									"Response is Empty\n\n",
									"Response Headers are: \ncorrelation-id=34ab982a-e049-45df-b6ed-75d147580e1e\nDate=Mon, 29 Apr 2019 03:42:13 GMT\nServer=nginx\nX-Content-Type-Options=nosniff\nX-Loadbalancer-Id=nginx-ingress-2j1v1\nX-XSS-Protection=1; mode=block\nConnection=keep-alive"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"204\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 0
				},
				{
					"scenarioHeading": "Delete questions by questionIds which was saved in a CSV file from the pre test",
					"tags": [],
					"executionTime": 952,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Delete Question\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 68,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/questions\n\n",
									"HTTP Method is: DELETE\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters as follows",
							"table": {
								"headers": [
									"Path Parameter",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"questionId",
											"5cc672533b58f10010d103b0"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"Path parameters which will append to the request URL:/5cc672533b58f10010d103b0\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 883,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/questions/5cc672533b58f10010d103b0\n\n",
									"HTTP Method is: DELETE\n\n",
									"Response Time is: 740ms\n\n",
									"Response is Empty\n\n",
									"Response Headers are: \ncorrelation-id=8b706851-4abf-4f76-88bd-995f4759bd4d\nDate=Mon, 29 Apr 2019 03:42:14 GMT\nServer=nginx\nX-Content-Type-Options=nosniff\nX-Loadbalancer-Id=nginx-ingress-lxkkr\nX-XSS-Protection=1; mode=block\nConnection=keep-alive"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"204\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 1
				},
				{
					"scenarioHeading": "Delete questions by questionIds which was saved in a CSV file from the pre test",
					"tags": [],
					"executionTime": 831,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Delete Question\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 61,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/questions\n\n",
									"HTTP Method is: DELETE\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters as follows",
							"table": {
								"headers": [
									"Path Parameter",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"questionId",
											"5cc67254d441be00118b7d0e"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"Path parameters which will append to the request URL:/5cc67254d441be00118b7d0e\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 770,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/questions/5cc67254d441be00118b7d0e\n\n",
									"HTTP Method is: DELETE\n\n",
									"Response Time is: 615ms\n\n",
									"Response is Empty\n\n",
									"Response Headers are: \ncorrelation-id=1d5e5637-7963-4b6d-8559-072cdc2f2dc4\nDate=Mon, 29 Apr 2019 03:42:15 GMT\nServer=nginx\nX-Content-Type-Options=nosniff\nX-Loadbalancer-Id=nginx-ingress-lxkkr\nX-XSS-Protection=1; mode=block\nConnection=keep-alive"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"204\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 2
				},
				{
					"scenarioHeading": "Delete questions by questionIds which was saved in a CSV file from the pre test",
					"tags": [],
					"executionTime": 723,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Delete Question\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 44,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/questions\n\n",
									"HTTP Method is: DELETE\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters as follows",
							"table": {
								"headers": [
									"Path Parameter",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"questionId",
											"5cc672563b58f10010d103b1"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"Path parameters which will append to the request URL:/5cc672563b58f10010d103b1\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 678,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/questions/5cc672563b58f10010d103b1\n\n",
									"HTTP Method is: DELETE\n\n",
									"Response Time is: 575ms\n\n",
									"Response is Empty\n\n",
									"Response Headers are: \ncorrelation-id=9937345f-f305-4b4b-bebb-88e62621d14c\nDate=Mon, 29 Apr 2019 03:42:15 GMT\nServer=nginx\nX-Content-Type-Options=nosniff\nX-Loadbalancer-Id=nginx-ingress-2j49k\nX-XSS-Protection=1; mode=block\nConnection=keep-alive"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"204\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": 3
				}
			],
			"isTableDriven": true,
			"datatable": {
				"headers": [
					"questionId"
				],
				"rows": [
					{
						"cells": [
							"5cc67252fc63c2000fcff722"
						]
					},
					{
						"cells": [
							"5cc672533b58f10010d103b0"
						]
					},
					{
						"cells": [
							"5cc67254d441be00118b7d0e"
						]
					},
					{
						"cells": [
							"5cc672563b58f10010d103b1"
						]
					}
				]
			},
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 4,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		},
		{
			"specHeading": "CRUD In One Scenario Specification",
			"fileName": "C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Other\\CRUD In One Scenario.spec",
			"tags": [],
			"executionTime": 3105,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "CRUD operation for a deck",
					"tags": [],
					"executionTime": 3105,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a deck",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 719,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create Deck\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 36,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/decks\n\n",
											"HTTP Method is: POST\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user saves test data inside excel file into data stores",
									"table": {
										"headers": [
											"DataStore Type",
											"Variable Name",
											"Excel Sheet Name",
											"Key Name"
										],
										"rows": [
											{
												"cells": [
													"Scenario",
													"varUserId",
													"Deck_Test_Data",
													"userId"
												]
											},
											{
												"cells": [
													"Scenario",
													"varDeckTitle",
													"Deck_Test_Data",
													"deckTitle"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 27,
										"skippedReason": "",
										"messages": [
											"\"ffffffff5badc1cdbe64ee171a740bed\" is successfully saved as a text in Scenario Data Store [varUserId]",
											"\"Trigonometry Ch.1\" is successfully saved as a text in Scenario Data Store [varDeckTitle]"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes using data stores as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Attibute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#deckTitle",
													"yes",
													"Scenario",
													"varDeckTitle",
													""
												]
											},
											{
												"cells": [
													"#userId",
													"yes",
													"Scenario",
													"varUserId",
													""
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 20,
										"skippedReason": "",
										"messages": [
											"Text inside Scenario Data Store [varDeckTitle] is: \"Trigonometry Ch.1\"\n\n",
											"Text inside Scenario Data Store [varUserId] is: \"ffffffff5badc1cdbe64ee171a740bed\"\n\n",
											"The JSON request body that you are going to use for the API is:\n{\n        \"title\": \"Trigonometry Ch.1\",\n        \"userId\": \"ffffffff5badc1cdbe64ee171a740bed\"\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 627,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/decks\n\n",
											"HTTP Method is: POST\n\n",
											"Response Time is: 523ms\n\n",
											"Response is: \n{\n    \"id\": \"5cc672b1a452d60010df7703\",\n    \"title\": \"Trigonometry Ch.1\",\n    \"book\": {\n        \n    },\n    \"purchaseInfo\": {\n        \"price\": 0.0\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": false\n    },\n    \"epochTime\": {\n        \"createdAt\": 1556509361639,\n        \"updatedAt\": 1556509361639\n    },\n    \"userId\": \"ffffffff5badc1cdbe64ee171a740bed\",\n    \"createdAt\": \"2019-04-29T03:42:41.639Z\",\n    \"updatedAt\": \"2019-04-29T03:42:41.641Z\",\n    \"archived\": false,\n    \"cardPreview\": false,\n    \"noOfCards\": 0,\n    \"progress\": 0,\n    \"downloads\": 0,\n    \"starred\": false,\n    \"examReminder\": {\n        \n    },\n    \"expert\": false\n}\n\n",
											"Response Headers are: \nContent-Type=application/json;charset=UTF-8\ncorrelation-id=6f4695e5-41b7-4376-8fe7-e7375fc69f71\nDate=Mon, 29 Apr 2019 03:42:41 GMT\nServer=nginx\nX-Content-Type-Options=nosniff\nX-Loadbalancer-Id=nginx-ingress-j023n\nX-XSS-Protection=1; mode=block\nContent-Length=472\nConnection=keep-alive"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the JSON Path Assertions for the response should be equal to the values inside the data stores",
									"table": {
										"headers": [
											"JSON Path",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Expected Value"
										],
										"rows": [
											{
												"cells": [
													"$.title",
													"yes",
													"Scenario",
													"varDeckTitle",
													""
												]
											},
											{
												"cells": [
													"$.userId",
													"yes",
													"Scenario",
													"varUserId",
													""
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 9,
										"skippedReason": "",
										"messages": [
											"Text inside Scenario Data Store [varDeckTitle] is: \"Trigonometry Ch.1\"\n\n",
											"Text inside Scenario Data Store [varUserId] is: \"ffffffff5badc1cdbe64ee171a740bed\"\n\n"
										],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"varDeckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 4,
								"skippedReason": "",
								"messages": [
									"\"5cc672b1a452d60010df7703\" is successfully saved as a text in Scenario Data Store [varDeckId]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Edit Deck\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 34,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/decks\n\n",
									"HTTP Method is: PUT\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user saves test data inside excel file into data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Excel Sheet Name",
									"Key Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"varUserId",
											"Deck_Test_Data",
											"userId"
										]
									},
									{
										"cells": [
											"Scenario",
											"varEditedDeckTitle",
											"Deck_Test_Data",
											"editedDeckTitle"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 25,
								"skippedReason": "",
								"messages": [
									"\"ffffffff5badc1cdbe64ee171a740bed\" is successfully saved as a text in Scenario Data Store [varUserId]",
									"\"Trigonometry Ch.2\" is successfully saved as a text in Scenario Data Store [varEditedDeckTitle]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters using data stores as follows",
							"table": {
								"headers": [
									"Path Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"deckId",
											"yes",
											"Scenario",
											"varDeckId",
											""
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 4,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [varDeckId] is: \"5cc672b1a452d60010df7703\"\n\n",
									"Path parameters which will append to the request URL:/5cc672b1a452d60010df7703\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attibute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#deckTitle",
											"yes",
											"Scenario",
											"varEditedDeckTitle",
											""
										]
									},
									{
										"cells": [
											"#userId",
											"yes",
											"Scenario",
											"varUserId",
											""
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 27,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [varEditedDeckTitle] is: \"Trigonometry Ch.2\"\n\n",
									"Text inside Scenario Data Store [varUserId] is: \"ffffffff5badc1cdbe64ee171a740bed\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n        \"title\": \"Trigonometry Ch.2\",\n        \"userId\": \"ffffffff5badc1cdbe64ee171a740bed\"\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 707,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/decks/5cc672b1a452d60010df7703\n\n",
									"HTTP Method is: PUT\n\n",
									"Response Time is: 596ms\n\n",
									"Response is: \n{\n    \"id\": \"5cc672b1a452d60010df7703\",\n    \"title\": \"Trigonometry Ch.2\",\n    \"book\": {\n        \n    },\n    \"purchaseInfo\": {\n        \"price\": 0.0\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": false\n    },\n    \"epochTime\": {\n        \"createdAt\": 1556509361639,\n        \"updatedAt\": 1556509362476\n    },\n    \"userId\": \"ffffffff5badc1cdbe64ee171a740bed\",\n    \"createdAt\": \"2019-04-29T03:42:41.639Z\",\n    \"updatedAt\": \"2019-04-29T03:42:42.477Z\",\n    \"archived\": false,\n    \"cardPreview\": false,\n    \"noOfCards\": 0,\n    \"progress\": 0,\n    \"downloads\": 0,\n    \"starred\": false,\n    \"examReminder\": {\n        \n    },\n    \"expert\": false\n}\n\n",
									"Response Headers are: \nContent-Type=application/json;charset=UTF-8\ncorrelation-id=e578c16f-40e3-4189-8503-be0b4ca74ed0\nDate=Mon, 29 Apr 2019 03:42:42 GMT\nServer=nginx\nX-Content-Type-Options=nosniff\nX-Loadbalancer-Id=nginx-ingress-lxkkr\nX-XSS-Protection=1; mode=block\nContent-Length=472\nConnection=keep-alive"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"200\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the values inside the data stores",
							"table": {
								"headers": [
									"JSON Path",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"$.title",
											"yes",
											"Scenario",
											"varEditedDeckTitle",
											""
										]
									},
									{
										"cells": [
											"$.userId",
											"yes",
											"Scenario",
											"varUserId",
											""
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 9,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [varEditedDeckTitle] is: \"Trigonometry Ch.2\"\n\n",
									"Text inside Scenario Data Store [varUserId] is: \"ffffffff5badc1cdbe64ee171a740bed\"\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get Deck\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 33,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/decks\n\n",
									"HTTP Method is: GET\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters using data stores as follows",
							"table": {
								"headers": [
									"Path Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"deckId",
											"yes",
											"Scenario",
											"varDeckId",
											""
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 4,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [varDeckId] is: \"5cc672b1a452d60010df7703\"\n\n",
									"Path parameters which will append to the request URL:/5cc672b1a452d60010df7703\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 854,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/decks/5cc672b1a452d60010df7703\n\n",
									"HTTP Method is: GET\n\n",
									"Response Time is: 764ms\n\n",
									"Response is: \n{\n    \"id\": \"5cc672b1a452d60010df7703\",\n    \"title\": \"Trigonometry Ch.2\",\n    \"book\": {\n        \n    },\n    \"purchaseInfo\": {\n        \"price\": 0.0\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": false\n    },\n    \"epochTime\": {\n        \"createdAt\": 1556509361639,\n        \"updatedAt\": 1556509362476\n    },\n    \"userId\": \"ffffffff5badc1cdbe64ee171a740bed\",\n    \"createdAt\": \"2019-04-29T03:42:41.639Z\",\n    \"updatedAt\": \"2019-04-29T03:42:42.477Z\",\n    \"archived\": false,\n    \"cardPreview\": false,\n    \"noOfCards\": 0,\n    \"progress\": 0,\n    \"downloads\": 0,\n    \"starred\": false,\n    \"examReminder\": {\n        \n    },\n    \"expert\": false\n}\n\n",
									"Response Headers are: \nContent-Type=application/json;charset=UTF-8\ncorrelation-id=15b2b9df-fbd5-4c91-ab22-295ecf5292e7\nDate=Mon, 29 Apr 2019 03:42:43 GMT\nServer=nginx\nX-Content-Type-Options=nosniff\nX-Loadbalancer-Id=nginx-ingress-v61xk\nX-XSS-Protection=1; mode=block\nContent-Length=472\nConnection=keep-alive"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"200\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the values inside the data stores",
							"table": {
								"headers": [
									"JSON Path",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"$.title",
											"yes",
											"Scenario",
											"varEditedDeckTitle",
											""
										]
									},
									{
										"cells": [
											"$.userId",
											"yes",
											"Scenario",
											"varUserId",
											""
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 13,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [varEditedDeckTitle] is: \"Trigonometry Ch.2\"\n\n",
									"Text inside Scenario Data Store [varUserId] is: \"ffffffff5badc1cdbe64ee171a740bed\"\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Delete deck by deckId saved in \u003cdataStoreType\u003e type data store named \u003cdataStoreVariableName\u003e",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 672,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Delete Deck\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 35,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/decks\n\n",
											"HTTP Method is: DELETE\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the path parameters using data stores as follows",
									"table": {
										"headers": [
											"Path Name",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Path Value"
										],
										"rows": [
											{
												"cells": [
													"deckId",
													"yes",
													"Scenario",
													"varDeckId",
													""
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 5,
										"skippedReason": "",
										"messages": [
											"Text inside Scenario Data Store [varDeckId] is: \"5cc672b1a452d60010df7703\"\n\n",
											"Path parameters which will append to the request URL:/5cc672b1a452d60010df7703\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 632,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/decks/5cc672b1a452d60010df7703\n\n",
											"HTTP Method is: DELETE\n\n",
											"Response Time is: 532ms\n\n",
											"Response is Empty\n\n",
											"Response Headers are: \ncorrelation-id=7e37a7dd-ea76-47f0-8301-be10dbd61b39\nDate=Mon, 29 Apr 2019 03:42:44 GMT\nServer=nginx\nX-Content-Type-Options=nosniff\nX-Loadbalancer-Id=nginx-ingress-v61xk\nX-XSS-Protection=1; mode=block\nConnection=keep-alive"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"204\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 1,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		},
		{
			"specHeading": "Replace Request Placeholders Specification",
			"fileName": "C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Other\\Replace Request Placeholders.spec",
			"tags": [],
			"executionTime": 6258,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Saving values to Data Store",
					"tags": [],
					"executionTime": 13,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"username",
											"Osanda12"
										]
									},
									{
										"cells": [
											"Specification",
											"username",
											"Osanda12"
										]
									},
									{
										"cells": [
											"Specification",
											"password",
											"Password1"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 13,
								"skippedReason": "",
								"messages": [
									"\"Osanda12\" is successfully saved as a text in Scenario Data Store [username]",
									"\"Osanda12\" is successfully saved as a text in Specification Data Store [username]",
									"\"Password1\" is successfully saved as a text in Specification Data Store [password]"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Replace request placeholders from values",
					"tags": [],
					"executionTime": 1680,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get Auth Token\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 34,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request payload as follows \u003cfile:/resources/payloads/login_placeholders.txt\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\r\n \"userName\": \"#username\",\r\n \"password\": \"#password\"\r\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set values to the request payload placeholders as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#username",
											"osanda12"
										]
									},
									{
										"cells": [
											"#password",
											"Password1"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"The final JSON request body that you are going to use for the API is:\n{\r\n \"userName\": \"osanda12\",\r\n \"password\": \"Password1\"\r\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1645,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 1529ms\n\n",
									"Response is: \n{\n    \"status\": \"success\",\n    \"data\": \"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTY2LCJpYXQiOjE1NTY1MDkzNjUsInNlc3NpZCI6IjY5MzM1OGRkLTg4YjMtNGMyMi04NDY0LWEyOTZlYTZiY2FiZSJ9.YvZ4HZPRxk3V0UAmBhhzXg3_SKt00eHJJKMzv_J6xyCkZ3l5txTtyyeAd8iu8aQVwCUUyx6e9g7ZIFNyjwqMLPBiUycZLkGnzFFI2Sn1IUVQmOAhY8Lrq0Z3Nhyc7lmRqaRFODrMt7gwFF7KZdVeNW3ZmIWA8az_f73n-6omAVQ\"\n}\n\n",
									"Response Headers are: \nDate=Mon, 29 Apr 2019 03:42:45 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nConnection=keep-alive\nSet-Cookie=AWSALB=5SzsP2ux2rvq+9wm3eBbpUVdGN0BEPss8eNfmRXyrhTUzGwDgvikPIvoeqwpTb+UdJUGIuYM5juuAN8UNrvgN61JrKD2xhHWmzr8RaSu5YpZHdGMMRI7TUIdrm0d; Expires=Mon, 06 May 2019 03:42:45 GMT; Path=/\nServer=nginx/1.15.7\nCorrelation-Id=3e0a3e63-4db8-4587-b211-918bb38a916d\nLocation=https://int-piapi-internal.stg-openclass.com/tokens/eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTY2LCJpYXQiOjE1NTY1MDkzNjUsInNlc3NpZCI6IjY5MzM1OGRkLTg4YjMtNGMyMi04NDY0LWEyOTZlYTZiY2FiZSJ9.YvZ4HZPRxk3V0UAmBhhzXg3_SKt00eHJJKMzv_J6xyCkZ3l5txTtyyeAd8iu8aQVwCUUyx6e9g7ZIFNyjwqMLPBiUycZLkGnzFFI2Sn1IUVQmOAhY8Lrq0Z3Nhyc7lmRqaRFODrMt7gwFF7KZdVeNW3ZmIWA8az_f73n-6omAVQ"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"success"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Replace one request placeholders from values",
					"tags": [],
					"executionTime": 1418,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get Auth Token\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 35,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request payload as follows \u003cfile:/resources/payloads/login_placeholder.txt\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\r\n \"userName\": \"#username\",\r\n \"password\": \"Password1\"\r\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set values to the request payload placeholders as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#username",
											"osanda12"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"The final JSON request body that you are going to use for the API is:\n{\r\n \"userName\": \"osanda12\",\r\n \"password\": \"Password1\"\r\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1382,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 1268ms\n\n",
									"Response is: \n{\n    \"status\": \"success\",\n    \"data\": \"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTY3LCJpYXQiOjE1NTY1MDkzNjcsInNlc3NpZCI6Ijg1MzQzMGUyLWQ0MmItNGE5Zi04MDUyLTZkMzhjNGI4Zjk5ZSJ9.SMOwxv39Tx-xnZ9MrE3UElxzG_GHeGnX_5oCM9NVD9vCDc5PJFQPj9TiC0Vm51BoAdWyOXhFMY7gaAZKAwUseH4RH25iwz9aufRAiRfet0jYA7gbnV67GkgB_F-NcnAyG3xjdVkwbZR-4v4Fh1RS2keiz1dUbdfJtgj9KUN0nuE\"\n}\n\n",
									"Response Headers are: \nDate=Mon, 29 Apr 2019 03:42:47 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nConnection=keep-alive\nSet-Cookie=AWSALB=frgRt0qVitbbBzvT6co2DlZjK7oqFr0O3h0kXumfGzmw1P9V0YrcQofvY+cqQNPDgj4qELOsPxHEV/29sjHM5mkp/ZgljKy0h+By/6bAqJd0QXF3qcBsS5nTvnp/; Expires=Mon, 06 May 2019 03:42:47 GMT; Path=/\nServer=nginx/1.15.7\nCorrelation-Id=10aea006-032b-4a84-80f0-affade9fb196\nLocation=https://int-piapi-internal.stg-openclass.com/tokens/eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTY3LCJpYXQiOjE1NTY1MDkzNjcsInNlc3NpZCI6Ijg1MzQzMGUyLWQ0MmItNGE5Zi04MDUyLTZkMzhjNGI4Zjk5ZSJ9.SMOwxv39Tx-xnZ9MrE3UElxzG_GHeGnX_5oCM9NVD9vCDc5PJFQPj9TiC0Vm51BoAdWyOXhFMY7gaAZKAwUseH4RH25iwz9aufRAiRfet0jYA7gbnV67GkgB_F-NcnAyG3xjdVkwbZR-4v4Fh1RS2keiz1dUbdfJtgj9KUN0nuE"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"success"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Replace request placeholders from data store values",
					"tags": [],
					"executionTime": 1689,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get Auth Token\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 36,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request payload as follows \u003cfile:/resources/payloads/login_placeholders.txt\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\r\n \"userName\": \"#username\",\r\n \"password\": \"#password\"\r\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set values to the request payload placeholders using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#username",
											"y",
											"spec",
											"username",
											""
										]
									},
									{
										"cells": [
											"#password",
											"y",
											"spec",
											"password",
											""
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 15,
								"skippedReason": "",
								"messages": [
									"Text inside Specification Data Store [username] is: \"Osanda12\"\n\n",
									"Text inside Specification Data Store [password] is: \"Password1\"\n\n",
									"The final JSON request body that you are going to use for the API is:\n{\r\n \"userName\": \"Osanda12\",\r\n \"password\": \"Password1\"\r\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1637,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 1522ms\n\n",
									"Response is: \n{\n    \"status\": \"success\",\n    \"data\": \"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTY5LCJpYXQiOjE1NTY1MDkzNjgsInNlc3NpZCI6ImUyOWZmYTIzLTk2MTAtNGU1NS1hNmViLThlOWI2YTQ4NGRlYiJ9.c0yJa-CgG_kdZ2O9yAiAY9heUP2Aps5TAbcTxl4h1MpFyaooAh8Iww7ClB8DR2FgAWLjPNNKi3jgeHEWlHq4I2tjBDoT49tZbGg7KYBoz8AYeErNnuj29S1X2GzYts9FdzoDziUi196dRnUqQ4h9sNji4L4LqNfcDmpPOK8KiZ0\"\n}\n\n",
									"Response Headers are: \nDate=Mon, 29 Apr 2019 03:42:48 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nConnection=keep-alive\nSet-Cookie=AWSALB=HEe6fS7NEkkSrcKjHl0SlgybuhJV+MSUVnoVbn3BnvSR1tlOudumR3O7YDEYXRPVqY28HvJQdCTGlbkFb9EBv9IERlY0o5xM/m7/B0pIZSJCd3rwroUxQmVCY+ii; Expires=Mon, 06 May 2019 03:42:48 GMT; Path=/\nServer=nginx/1.15.7\nCorrelation-Id=513f2895-8072-4027-be8d-a9d850f10e47\nLocation=https://int-piapi-internal.stg-openclass.com/tokens/eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTY5LCJpYXQiOjE1NTY1MDkzNjgsInNlc3NpZCI6ImUyOWZmYTIzLTk2MTAtNGU1NS1hNmViLThlOWI2YTQ4NGRlYiJ9.c0yJa-CgG_kdZ2O9yAiAY9heUP2Aps5TAbcTxl4h1MpFyaooAh8Iww7ClB8DR2FgAWLjPNNKi3jgeHEWlHq4I2tjBDoT49tZbGg7KYBoz8AYeErNnuj29S1X2GzYts9FdzoDziUi196dRnUqQ4h9sNji4L4LqNfcDmpPOK8KiZ0"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"success"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Replace one request placeholder from data store values",
					"tags": [],
					"executionTime": 1458,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get Auth Token\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 35,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request payload as follows \u003cfile:/resources/payloads/login_placeholders.txt\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\r\n \"userName\": \"#username\",\r\n \"password\": \"#password\"\r\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set values to the request payload placeholders using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#username",
											"y",
											"spec",
											"username",
											""
										]
									},
									{
										"cells": [
											"#password",
											"n",
											"",
											"",
											"Password1"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 6,
								"skippedReason": "",
								"messages": [
									"Text inside Specification Data Store [username] is: \"Osanda12\"\n\n",
									"The final JSON request body that you are going to use for the API is:\n{\r\n \"userName\": \"Osanda12\",\r\n \"password\": \"Password1\"\r\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1417,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 1303ms\n\n",
									"Response is: \n{\n    \"status\": \"success\",\n    \"data\": \"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTcwLCJpYXQiOjE1NTY1MDkzNzAsInNlc3NpZCI6ImJiMmZhZWI2LWVmMGYtNDIwMC04Mjg3LWM2MTgwNDJhNWIxZSJ9.NXID4P4q3-GoyBGYgdCyFbO3wTYoSQtzWjzwitSRbkVmJV9MweiDEpGeoZUrROv1VPSkRwSxIgdMEyeK6sMOCePDNtCBc9Q-vOz2asRNyTN7eONmyubsC936d6Egc1fhffbqJ6oKWIQCVBP27UIxU9Fut7Jwf6Ph_bjA-VFnlMU\"\n}\n\n",
									"Response Headers are: \nDate=Mon, 29 Apr 2019 03:42:50 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nConnection=keep-alive\nSet-Cookie=AWSALB=OkJ+VGLmyfCfAJJkOEtA8Nq4fRafmFlMnLh9IYPEt3lNvwZxyUitw4LMvqxdCyHx+S4KziHrabYea+D/kytJybTg64ryfC6P/mv7ysr+mp7dwxJ67KgnzF62XQOh; Expires=Mon, 06 May 2019 03:42:50 GMT; Path=/\nServer=nginx/1.15.7\nCorrelation-Id=6c4b1424-ada0-464a-9188-f1d0c8ff7735\nLocation=https://int-piapi-internal.stg-openclass.com/tokens/eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTcwLCJpYXQiOjE1NTY1MDkzNzAsInNlc3NpZCI6ImJiMmZhZWI2LWVmMGYtNDIwMC04Mjg3LWM2MTgwNDJhNWIxZSJ9.NXID4P4q3-GoyBGYgdCyFbO3wTYoSQtzWjzwitSRbkVmJV9MweiDEpGeoZUrROv1VPSkRwSxIgdMEyeK6sMOCePDNtCBc9Q-vOz2asRNyTN7eONmyubsC936d6Egc1fhffbqJ6oKWIQCVBP27UIxU9Fut7Jwf6Ph_bjA-VFnlMU"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"success"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 5,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		},
		{
			"specHeading": "Headers Specification",
			"fileName": "C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Other\\Headers.spec",
			"tags": [],
			"executionTime": 728,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Get all decks of a user with auth header",
					"tags": [],
					"executionTime": 728,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get All Decks Of User\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 39,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/decks/users\n\n",
									"HTTP Method is: GET\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user saves test data inside excel file into data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Excel Sheet Name",
									"Key Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"varUserId",
											"Deck_Test_Data",
											"userId"
										]
									},
									{
										"cells": [
											"Scenario",
											"varSampleDeckTitle",
											"Deck_Test_Data",
											"sampleDeckTitle"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 38,
								"skippedReason": "",
								"messages": [
									"\"ffffffff5badc1cdbe64ee171a740bed\" is successfully saved as a text in Scenario Data Store [varUserId]",
									"\"Sample Expert Deck - Try It!\" is successfully saved as a text in Scenario Data Store [varSampleDeckTitle]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters using data stores as follows",
							"table": {
								"headers": [
									"Path Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"userId",
											"yes",
											"Scenario",
											"varUserId",
											""
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [varUserId] is: \"ffffffff5badc1cdbe64ee171a740bed\"\n\n",
									"Path parameters which will append to the request URL:/ffffffff5badc1cdbe64ee171a740bed\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request headers as follows",
							"table": {
								"headers": [
									"Header Name",
									"Header Value"
								],
								"rows": [
									{
										"cells": [
											"x-Authorization",
											"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMDU5LCJpYXQiOjE1NTY1MDkyNTgsInNlc3NpZCI6ImViMWVlYzA2LTczYjItNGY2Yy1iMTgxLWY1Njc2MjNiMjQ1YyJ9.EfREjWygLJsReB_pm-mQawerMJV-RkTbrOmsaQKwIl5gmdSXsqozVmuAY8fOS5rSoF3YsG4k6RAwtO-wyEV9xwzB8Fuu7tdbBp-dIYztjrppKCrkuLRYoobclxzHwFRCZGie8qzWzRtWTpkjassee2WsjHh4_a4T597JZDzWx3s"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [
									"Header List: ",
									"x-Authorization = eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMDU5LCJpYXQiOjE1NTY1MDkyNTgsInNlc3NpZCI6ImViMWVlYzA2LTczYjItNGY2Yy1iMTgxLWY1Njc2MjNiMjQ1YyJ9.EfREjWygLJsReB_pm-mQawerMJV-RkTbrOmsaQKwIl5gmdSXsqozVmuAY8fOS5rSoF3YsG4k6RAwtO-wyEV9xwzB8Fuu7tdbBp-dIYztjrppKCrkuLRYoobclxzHwFRCZGie8qzWzRtWTpkjassee2WsjHh4_a4T597JZDzWx3s"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 641,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/decks/users/ffffffff5badc1cdbe64ee171a740bed\n\n",
									"HTTP Method is: GET\n\n",
									"Response Time is: 539ms\n\n",
									"Response is: \n[\n    {\n        \"id\": \"5c88c8c295d4db0010bec3b7\",\n        \"title\": \"Sample Expert Deck - Try It!\",\n        \"description\": \"\",\n        \"tags\": [\n            \n        ],\n        \"keywords\": [\n            \"string\",\n            \"prep_cat_v2\"\n        ],\n        \"subjectId\": \"Test\",\n        \"book\": {\n            \"bookTitle\": \"Pearson\",\n            \"bookAuthor\": \"Pearson\",\n            \"chapter\": \"0\"\n        },\n        \"purchaseInfo\": {\n            \"purchasedDate\": 1512378509134,\n            \"price\": 0.0,\n            \"sku\": \"com.pearsoned.smartflashcardsmvp.expertdecktier0\",\n            \"status\": \"AVAILABLE\"\n        },\n        \"notificationSettings\": {\n            \"areNotificationsEnabled\": false\n        },\n        \"epochTime\": {\n            \"createdAt\": 1552468162853,\n            \"updatedAt\": 1552468162853\n        },\n        \"userId\": \"ffffffff5badc1cdbe64ee171a740bed\",\n        \"parentDeckId\": \"5b36a4a793cee27c9a02da3b\",\n        \"createdAt\": \"2019-03-13T09:09:22.853Z\",\n        \"updatedAt\": \"2019-03-13T09:09:22.855Z\",\n        \"archived\": false,\n        \"cardPreview\": true,\n        \"noOfCards\": 0,\n        \"progress\": 0,\n        \"downloads\": 0,\n        \"deckAuthor\": \"\",\n        \"deckAuthorId\": \"0\",\n        \"thumbnailUrl\": \"string\",\n        \"status\": \"active\",\n        \"starred\": false,\n        \"examReminder\": {\n            \n        },\n        \"expert\": true\n    }\n]\n\n",
									"Response Headers are: \nContent-Type=application/json;charset=UTF-8\ncorrelation-id=c6eeeb5c-ab6d-4af4-9aaf-e67d641ce271\nDate=Mon, 29 Apr 2019 03:42:19 GMT\nServer=nginx\nX-Content-Type-Options=nosniff\nX-Loadbalancer-Id=nginx-ingress-63qw2\nX-XSS-Protection=1; mode=block\nContent-Length=850\nConnection=keep-alive"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"200\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the values inside the data stores",
							"table": {
								"headers": [
									"JSON Path",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"$[0].title",
											"yes",
											"Scenario",
											"varSampleDeckTitle",
											""
										]
									},
									{
										"cells": [
											"$[0].userId",
											"yes",
											"Scenario",
											"varUserId",
											""
										]
									},
									{
										"cells": [
											"$[0].archived",
											"no",
											"",
											"",
											"false"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 6,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [varSampleDeckTitle] is: \"Sample Expert Deck - Try It!\"\n\n",
									"Text inside Scenario Data Store [varUserId] is: \"ffffffff5badc1cdbe64ee171a740bed\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 1,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		},
		{
			"specHeading": "Read From Excel File Specification",
			"fileName": "C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Other\\Read From Excel File.spec",
			"tags": [],
			"executionTime": 1437,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Invoke Auth API using the test data in excel file",
					"tags": [],
					"executionTime": 1437,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user saves test data inside excel file into data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Excel Sheet Name",
									"Key Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"varUsername",
											"Auth_Test_Data",
											"username"
										]
									},
									{
										"cells": [
											"Specification",
											"varPassword",
											"Auth_Test_Data",
											"password"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 24,
								"skippedReason": "",
								"messages": [
									"\"osanda12\" is successfully saved as a text in Scenario Data Store [varUsername]",
									"\"Password1\" is successfully saved as a text in Specification Data Store [varPassword]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get Auth Token\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 33,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#username",
											"y",
											"Scenario",
											"varUsername",
											""
										]
									},
									{
										"cells": [
											"#password",
											"y",
											"Specification",
											"varPassword",
											""
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 21,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [varUsername] is: \"osanda12\"\n\n",
									"Text inside Specification Data Store [varPassword] is: \"Password1\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n \"userName\": \"osanda12\",\n \"password\": \"Password1\"\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1355,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 1252ms\n\n",
									"Response is: \n{\n    \"status\": \"success\",\n    \"data\": \"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTQxLCJpYXQiOjE1NTY1MDkzNDAsInNlc3NpZCI6ImYyNGFiZDNkLThhOTgtNGQzMS1hYjkxLTliOGY0MWJlNTg0MyJ9.HIQnob2t-kgnIgwmy8hg9IOy2X9RdZ1D6rp4LQv6D3y6KibaicChfT8e-2EvswPrX-MrsZF9vLc2Akl_rjvMeMfPSgmURvyvGqL1MYjF4yXEIC6tqXzfQgzAK0oJPrT9jKUWPBnHXKdXSypqnZjB1dA3pV93HZ-j9vdxtLMkr18\"\n}\n\n",
									"Response Headers are: \nDate=Mon, 29 Apr 2019 03:42:20 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nConnection=keep-alive\nSet-Cookie=AWSALB=K8BpZKVCWwLZoRsfR1TdL/EIWT2ap2qAKBC1JrMOvgVbdFBwKNC3FCR0PVWJ0zUACKn3ZKdKZOtKBRPAMozVJPQix9V8/N7iLzNui+qHWyDUkh/QrAxagMyeI/0U; Expires=Mon, 06 May 2019 03:42:20 GMT; Path=/\nServer=nginx/1.15.7\nCorrelation-Id=54dea7c7-23d3-4818-822c-71c240e55a2a\nLocation=https://int-piapi-internal.stg-openclass.com/tokens/eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTQxLCJpYXQiOjE1NTY1MDkzNDAsInNlc3NpZCI6ImYyNGFiZDNkLThhOTgtNGQzMS1hYjkxLTliOGY0MWJlNTg0MyJ9.HIQnob2t-kgnIgwmy8hg9IOy2X9RdZ1D6rp4LQv6D3y6KibaicChfT8e-2EvswPrX-MrsZF9vLc2Akl_rjvMeMfPSgmURvyvGqL1MYjF4yXEIC6tqXzfQgzAK0oJPrT9jKUWPBnHXKdXSypqnZjB1dA3pV93HZ-j9vdxtLMkr18"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"success"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the access token in the response which is located inside the JSON Path of \"$.data\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3,
								"skippedReason": "",
								"messages": [
									"Successfully saved the access token into the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\""
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 1,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		},
		{
			"specHeading": "Saving And Reading Values From Data Stores Specification",
			"fileName": "C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Data Stores\\Saving And Reading Values From Data Stores.spec",
			"tags": [
				"data_store"
			],
			"executionTime": 3456,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Get configurations of the testing environment",
					"tags": [],
					"executionTime": 7,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Configurations of the testing environment",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 7,
								"skippedReason": "",
								"messages": [
									"Configurations of Test Execution Environment\n\n",
									"Operating System: Windows 10",
									"Environment: DEV",
									"Base URL: "
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Saving values to Data Store",
					"tags": [],
					"executionTime": 6,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"variable1",
											"Osanda Deshan"
										]
									},
									{
										"cells": [
											"Specification",
											"variable2",
											"Osanda Nimalarathna"
										]
									},
									{
										"cells": [
											"Scenario",
											"variable3",
											"Software Automation"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 6,
								"skippedReason": "",
								"messages": [
									"\"Osanda Deshan\" is successfully saved as a text in Scenario Data Store [variable1]",
									"\"Osanda Nimalarathna\" is successfully saved as a text in Specification Data Store [variable2]",
									"\"Software Automation\" is successfully saved as a text in Scenario Data Store [variable3]"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Reading values from Data Store",
					"tags": [],
					"executionTime": 7,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user read the values from data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"variable1"
										]
									},
									{
										"cells": [
											"Specification",
											"variable2"
										]
									},
									{
										"cells": [
											"Scenario",
											"variable3"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 7,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [variable1] is: \"null\"\n\n",
									"Text inside Specification Data Store [variable2] is: \"Osanda Nimalarathna\"\n\n",
									"Text inside Scenario Data Store [variable3] is: \"null\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Invoke Auth API using valid username and password using payload text file",
					"tags": [
						"get_auth_token"
					],
					"executionTime": 1470,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get Auth Token\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 41,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request payload as follows \u003cfile:/resources/payloads/login.txt\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\r\n \"userName\": \"osanda12\",\r\n \"password\": \"Password1\"\r\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1414,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 1303ms\n\n",
									"Response is: \n{\n    \"status\": \"success\",\n    \"data\": \"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTQyLCJpYXQiOjE1NTY1MDkzNDIsInNlc3NpZCI6ImY5NjI4MzIyLTQyMTYtNGZiZi05MWYyLWEzZDlkMWZkMGU5YSJ9.JDdJUgiPZs9cpv31dM1yTcgMZfyQ5ewZgPQYHaMYyNWm9VI-lNrbqt1pIwU6l76xQxPr6l0-RJZTT8A5JAq8ChGshOVvfnNPpjvZVwEi9CK2SVvmtamLBabGCd5lRyY7E37U6SBtU2elE5aZYBr1YyLDpjPYxe7GKOBroCIbG9Q\"\n}\n\n",
									"Response Headers are: \nDate=Mon, 29 Apr 2019 03:42:22 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nConnection=keep-alive\nSet-Cookie=AWSALB=HJfaaQRhJF4s69jWzanRMvIlYD60OVj7wXS5QgjB7vCkvRx2B8LwUpUlngIO7P+tJngAG+7WGDDbO6MwRBNXxeljvd2cCO0sOnUgqgyzUixyr02oal0mmxI7m2jX; Expires=Mon, 06 May 2019 03:42:22 GMT; Path=/\nServer=nginx/1.15.7\nCorrelation-Id=083e4084-1629-4447-9bc6-e50bc6c84658\nLocation=https://int-piapi-internal.stg-openclass.com/tokens/eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTQyLCJpYXQiOjE1NTY1MDkzNDIsInNlc3NpZCI6ImY5NjI4MzIyLTQyMTYtNGZiZi05MWYyLWEzZDlkMWZkMGU5YSJ9.JDdJUgiPZs9cpv31dM1yTcgMZfyQ5ewZgPQYHaMYyNWm9VI-lNrbqt1pIwU6l76xQxPr6l0-RJZTT8A5JAq8ChGshOVvfnNPpjvZVwEi9CK2SVvmtamLBabGCd5lRyY7E37U6SBtU2elE5aZYBr1YyLDpjPYxe7GKOBroCIbG9Q"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"success"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Existence in the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"isExists"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"true"
										]
									},
									{
										"cells": [
											"$.osa",
											"false"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the access token in the response which is located inside the JSON Path of \"$.data\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 4,
								"skippedReason": "",
								"messages": [
									"Successfully saved the access token into the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\""
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"variable4",
											"$.status"
										]
									},
									{
										"cells": [
											"Specification",
											"variable5",
											"$.data"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 4,
								"skippedReason": "",
								"messages": [
									"\"success\" is successfully saved as a text in Scenario Data Store [variable4]",
									"\"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTQyLCJpYXQiOjE1NTY1MDkzNDIsInNlc3NpZCI6ImY5NjI4MzIyLTQyMTYtNGZiZi05MWYyLWEzZDlkMWZkMGU5YSJ9.JDdJUgiPZs9cpv31dM1yTcgMZfyQ5ewZgPQYHaMYyNWm9VI-lNrbqt1pIwU6l76xQxPr6l0-RJZTT8A5JAq8ChGshOVvfnNPpjvZVwEi9CK2SVvmtamLBabGCd5lRyY7E37U6SBtU2elE5aZYBr1YyLDpjPYxe7GKOBroCIbG9Q\" is successfully saved as a text in Specification Data Store [variable5]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user read the values from data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"variable4"
										]
									},
									{
										"cells": [
											"Specification",
											"variable5"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 5,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [variable4] is: \"success\"\n\n",
									"Text inside Specification Data Store [variable5] is: \"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTQyLCJpYXQiOjE1NTY1MDkzNDIsInNlc3NpZCI6ImY5NjI4MzIyLTQyMTYtNGZiZi05MWYyLWEzZDlkMWZkMGU5YSJ9.JDdJUgiPZs9cpv31dM1yTcgMZfyQ5ewZgPQYHaMYyNWm9VI-lNrbqt1pIwU6l76xQxPr6l0-RJZTT8A5JAq8ChGshOVvfnNPpjvZVwEi9CK2SVvmtamLBabGCd5lRyY7E37U6SBtU2elE5aZYBr1YyLDpjPYxe7GKOBroCIbG9Q\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Invoke Auth API using valid username and password and save the access token inside the text file",
					"tags": [
						"get_auth_token"
					],
					"executionTime": 1503,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get Auth Token\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 42,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"username",
											"osanda12"
										]
									},
									{
										"cells": [
											"Specification",
											"variable6",
											"Osanda Nimalarathna"
										]
									},
									{
										"cells": [
											"Scenario",
											"variable7",
											"Software Automation"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 4,
								"skippedReason": "",
								"messages": [
									"\"osanda12\" is successfully saved as a text in Scenario Data Store [username]",
									"\"Osanda Nimalarathna\" is successfully saved as a text in Specification Data Store [variable6]",
									"\"Software Automation\" is successfully saved as a text in Scenario Data Store [variable7]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request headers using data stores as follows",
							"table": {
								"headers": [
									"Header Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Header Value"
								],
								"rows": [
									{
										"cells": [
											"header1",
											"y",
											"spec",
											"variable6",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3,
								"skippedReason": "",
								"messages": [
									"Text inside Specification Data Store [variable6] is: \"Osanda Nimalarathna\"\n\n",
									"Header List: ",
									"header1 = Osanda Nimalarathna"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#username",
											"y",
											"scenario",
											"username",
											"N/A"
										]
									},
									{
										"cells": [
											"#password",
											"n",
											"N/A",
											"N/A",
											"Password1"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 18,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [username] is: \"osanda12\"\n\n",
									"The JSON request body that you are going to use for the API is:\n{\n \"userName\": \"osanda12\",\n \"password\": \"Password1\"\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1418,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 1287ms\n\n",
									"Response is: \n{\n    \"status\": \"success\",\n    \"data\": \"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTQ0LCJpYXQiOjE1NTY1MDkzNDMsInNlc3NpZCI6ImQxNmIyMmQxLTE2ZTMtNDQyNy04YzQ5LTI5Y2M0YmY1ZGUyZSJ9.dZT2u8CPl4R4NRIi0vwafDf7jMqCNaVWlCBybWid5GP_ErYpt5NpfaDNFgsFtaxtSC5JR6Ms4Tqn6fRiQn8jaH0K8q6io_5MMSdcRASF92ZR-EEtTj9lxSqUN0GEJHWaCejzzl_YjGE5BhDYwJSnFr2SZ0F6OJKGFZhvJwQlRIw\"\n}\n\n",
									"Response Headers are: \nDate=Mon, 29 Apr 2019 03:42:23 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nConnection=keep-alive\nSet-Cookie=AWSALB=bEGjTDcjzPrdC1HW+gXukeLYwxqiIav2K5aVhlf8/Tk9UWawKRRfe2jdluRfO8rZ4sHYAl1UWS0oa2W0x9eOFT3TrrI6OW7sEGjgtJ7+VFglBhKt6v/Irc4Lpbfs; Expires=Mon, 06 May 2019 03:42:23 GMT; Path=/\nServer=nginx/1.15.7\nCorrelation-Id=79b509f6-66ea-4ca8-8ad7-8c413a266485\nLocation=https://int-piapi-internal.stg-openclass.com/tokens/eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NTIwMTQ0LCJpYXQiOjE1NTY1MDkzNDMsInNlc3NpZCI6ImQxNmIyMmQxLTE2ZTMtNDQyNy04YzQ5LTI5Y2M0YmY1ZGUyZSJ9.dZT2u8CPl4R4NRIi0vwafDf7jMqCNaVWlCBybWid5GP_ErYpt5NpfaDNFgsFtaxtSC5JR6Ms4Tqn6fRiQn8jaH0K8q6io_5MMSdcRASF92ZR-EEtTj9lxSqUN0GEJHWaCejzzl_YjGE5BhDYwJSnFr2SZ0F6OJKGFZhvJwQlRIw"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"status",
											"$.status"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"\"success\" is successfully saved as a text in Scenario Data Store [status]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"isContains"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"success"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should contains the values inside the data stores",
							"table": {
								"headers": [
									"JSON Path",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"y",
											"scenario",
											"status",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [status] is: \"success\"\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should not contains the following",
							"table": {
								"headers": [
									"JSON Path",
									"notContains"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"fail"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path values of the response should not contains the values inside the data stores",
							"table": {
								"headers": [
									"JSON Path",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"y",
											"scenario",
											"variable7",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [variable7] is: \"Software Automation\"\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"success"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should not be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"fail"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the values inside the data stores",
							"table": {
								"headers": [
									"JSON Path",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"y",
											"scenario",
											"status",
											"N/A"
										]
									},
									{
										"cells": [
											"$.status",
											"n",
											"N/A",
											"N/A",
											"success"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [status] is: \"success\"\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should not be equal to the values inside the data stores",
							"table": {
								"headers": [
									"JSON Path",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"n",
											"N/A",
											"N/A",
											"fail"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the access token in the response which is located inside the JSON Path of \"$.data\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 7,
								"skippedReason": "",
								"messages": [
									"Successfully saved the access token into the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\""
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Existence in the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"isExists"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"true"
										]
									},
									{
										"cells": [
											"$.osa",
											"false"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the query parameters using data stores as follows",
							"table": {
								"headers": [
									"Query Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Query Value"
								],
								"rows": [
									{
										"cells": [
											"username",
											"y",
											"scenario",
											"username",
											"N/A"
										]
									},
									{
										"cells": [
											"password",
											"n",
											"N/A",
											"N/A",
											"Password1"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [username] is: \"osanda12\"\n\n",
									"Query parameters which will append to the request URL: ?username=osanda12\u0026password=Password1\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters using data stores as follows",
							"table": {
								"headers": [
									"Path Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"#username",
											"y",
											"scenario",
											"username",
											"N/A"
										]
									},
									{
										"cells": [
											"#password",
											"n",
											"N/A",
											"N/A",
											"Password1"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [username] is: \"osanda12\"\n\n",
									"Path parameters which will append to the request URL:/osanda12/Password1\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Replace API Endpoint placeholders",
					"tags": [],
					"executionTime": 463,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Purchase Validator API\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 32,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://www.googleapis.com/androidpublisher/v3/applications/com.pearsoned.smartflashcards/purchases/products/#skuid/tokens/#purchaseToken?access_token=#access_token\n\n",
									"HTTP Method is: GET\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"purchaseToken",
											"jghpbegbjgnpfdfgjjkhdpeo.AO-J1OwpcCUVIa0"
										]
									},
									{
										"cells": [
											"Scenario",
											"accessToken",
											"ya29.GlzGBXmxF34s99wQ0o8ie7B4P85ld_FUNBZxizYB"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3,
								"skippedReason": "",
								"messages": [
									"\"jghpbegbjgnpfdfgjjkhdpeo.AO-J1OwpcCUVIa0\" is successfully saved as a text in Scenario Data Store [purchaseToken]",
									"\"ya29.GlzGBXmxF34s99wQ0o8ie7B4P85ld_FUNBZxizYB\" is successfully saved as a text in Scenario Data Store [accessToken]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set values to the API endpoint placeholders using data stores as follows",
							"table": {
								"headers": [
									"Placeholder In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Replacement Text"
								],
								"rows": [
									{
										"cells": [
											"#skuid",
											"n",
											"",
											"",
											"com.pearsoned.smartflashcards.expert.elementary"
										]
									},
									{
										"cells": [
											"#purchaseToken",
											"y",
											"scenario",
											"purchaseToken",
											""
										]
									},
									{
										"cells": [
											"#access_token",
											"y",
											"scenario",
											"accessToken",
											""
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 19,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [purchaseToken] is: \"jghpbegbjgnpfdfgjjkhdpeo.AO-J1OwpcCUVIa0\"\n\n",
									"Text inside Scenario Data Store [accessToken] is: \"ya29.GlzGBXmxF34s99wQ0o8ie7B4P85ld_FUNBZxizYB\"\n\n",
									"https://www.googleapis.com/androidpublisher/v3/applications/com.pearsoned.smartflashcards/purchases/products/com.pearsoned.smartflashcards.expert.elementary/tokens/jghpbegbjgnpfdfgjjkhdpeo.AO-J1OwpcCUVIa0?access_token=ya29.GlzGBXmxF34s99wQ0o8ie7B4P85ld_FUNBZxizYB"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 409,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://www.googleapis.com/androidpublisher/v3/applications/com.pearsoned.smartflashcards/purchases/products/com.pearsoned.smartflashcards.expert.elementary/tokens/jghpbegbjgnpfdfgjjkhdpeo.AO-J1OwpcCUVIa0?access_token=ya29.GlzGBXmxF34s99wQ0o8ie7B4P85ld_FUNBZxizYB\n\n",
									"HTTP Method is: GET\n\n",
									"Response Time is: 339ms\n\n",
									"Response is: \n{\n    \"error\": {\n        \"errors\": [\n            {\n                \"domain\": \"global\",\n                \"reason\": \"authError\",\n                \"message\": \"Invalid Credentials\",\n                \"locationType\": \"header\",\n                \"location\": \"Authorization\"\n            }\n        ],\n        \"code\": 401,\n        \"message\": \"Invalid Credentials\"\n    }\n}\n\n",
									"Response Headers are: \nVary=Origin\nVary=X-Origin\nWWW-Authenticate=Bearer realm=\"https://accounts.google.com/\", error=invalid_token\nContent-Type=application/json; charset=UTF-8\nContent-Encoding=gzip\nDate=Mon, 29 Apr 2019 03:42:24 GMT\nExpires=Mon, 29 Apr 2019 03:42:24 GMT\nCache-Control=private, max-age=0\nX-Content-Type-Options=nosniff\nX-Frame-Options=SAMEORIGIN\nX-XSS-Protection=1; mode=block\nServer=GSE\nAlt-Svc=quic=\":443\"; ma=2592000; v=\"46,44,43,39\"\nTransfer-Encoding=chunked"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"401\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.error.errors[0].reason",
											"authError"
										]
									},
									{
										"cells": [
											"$.error.errors[0].message",
											"Invalid Credentials"
										]
									},
									{
										"cells": [
											"$.error.code",
											"401"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 6,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		},
		{
			"specHeading": "Saving To Data Stores Specification",
			"fileName": "C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Data Stores\\Saving To Data Stores.spec",
			"tags": [
				"data_store"
			],
			"executionTime": 58,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Saving to Data Stores",
					"tags": [],
					"executionTime": 30,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"variable1",
											"Osanda Deshan"
										]
									},
									{
										"cells": [
											"Specification",
											"variable2",
											"Osanda Nimalarathna"
										]
									},
									{
										"cells": [
											"Scenario",
											"variable3",
											"Software Automation"
										]
									},
									{
										"cells": [
											"Suite",
											"variable4",
											"Gauge Framework"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 8,
								"skippedReason": "",
								"messages": [
									"\"Osanda Deshan\" is successfully saved as a text in Scenario Data Store [variable1]",
									"\"Osanda Nimalarathna\" is successfully saved as a text in Specification Data Store [variable2]",
									"\"Software Automation\" is successfully saved as a text in Scenario Data Store [variable3]",
									"\"Gauge Framework\" is successfully saved as a text in Suite Data Store [variable4]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the values inside the data stores equal to the following",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"variable1",
											"Osanda Deshan"
										]
									},
									{
										"cells": [
											"Specification",
											"variable2",
											"Osanda Nimalarathna"
										]
									},
									{
										"cells": [
											"Scenario",
											"variable3",
											"Software Automation"
										]
									},
									{
										"cells": [
											"Suite",
											"variable4",
											"Gauge Framework"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 7,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [variable1] is: \"Osanda Deshan\"\n\n",
									"Text inside Specification Data Store [variable2] is: \"Osanda Nimalarathna\"\n\n",
									"Text inside Scenario Data Store [variable3] is: \"Software Automation\"\n\n",
									"Text inside Suite Data Store [variable4] is: \"Gauge Framework\"\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user saves environment property file data into data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Attribute Name In Property File"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"mongoHost",
											"mongo_database_host"
										]
									},
									{
										"cells": [
											"Specification",
											"mongoPort",
											"mongo_database_port"
										]
									},
									{
										"cells": [
											"Scenario",
											"mysqlUrl",
											"mysql_database_url"
										]
									},
									{
										"cells": [
											"Suite",
											"headerName",
											"header_name_for_authorization"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 7,
								"skippedReason": "",
								"messages": [
									"\"10.199.253.208\" is successfully saved as a text in Scenario Data Store [mongoHost]",
									"\"27017\" is successfully saved as a text in Specification Data Store [mongoPort]",
									"\"jdbc:mysql://localhost:3306/user\" is successfully saved as a text in Scenario Data Store [mysqlUrl]",
									"\"X-Authorization\" is successfully saved as a text in Suite Data Store [headerName]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the values inside the data stores equal to the following",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"mongoHost",
											"10.199.253.208"
										]
									},
									{
										"cells": [
											"Specification",
											"mongoPort",
											"27017"
										]
									},
									{
										"cells": [
											"Scenario",
											"mysqlUrl",
											"jdbc:mysql://localhost:3306/user"
										]
									},
									{
										"cells": [
											"Suite",
											"headerName",
											"X-Authorization"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 8,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [mongoHost] is: \"10.199.253.208\"\n\n",
									"Text inside Specification Data Store [mongoPort] is: \"27017\"\n\n",
									"Text inside Scenario Data Store [mysqlUrl] is: \"jdbc:mysql://localhost:3306/user\"\n\n",
									"Text inside Suite Data Store [headerName] is: \"X-Authorization\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Reading values from Data Store",
					"tags": [],
					"executionTime": 28,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user saves the values inside data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"variable1",
											"Osanda Deshan"
										]
									},
									{
										"cells": [
											"Specification",
											"variable2",
											"Osanda Nimalarathna"
										]
									},
									{
										"cells": [
											"Scenario",
											"variable3",
											"Software Automation"
										]
									},
									{
										"cells": [
											"Suite",
											"variable4",
											"Gauge Framework"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 8,
								"skippedReason": "",
								"messages": [
									"\"Osanda Deshan\" is successfully saved as a text in Scenario Data Store [variable1]",
									"\"Osanda Nimalarathna\" is successfully saved as a text in Specification Data Store [variable2]",
									"\"Software Automation\" is successfully saved as a text in Scenario Data Store [variable3]",
									"\"Gauge Framework\" is successfully saved as a text in Suite Data Store [variable4]"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user read the values from data stores as follows",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"variable1"
										]
									},
									{
										"cells": [
											"Specification",
											"variable2"
										]
									},
									{
										"cells": [
											"Scenario",
											"variable3"
										]
									},
									{
										"cells": [
											"Suite",
											"variable4"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 8,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [variable1] is: \"Osanda Deshan\"\n\n",
									"Text inside Specification Data Store [variable2] is: \"Osanda Nimalarathna\"\n\n",
									"Text inside Scenario Data Store [variable3] is: \"Software Automation\"\n\n",
									"Text inside Suite Data Store [variable4] is: \"Gauge Framework\"\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the values inside the data stores equal to the following",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"variable1",
											"Osanda Deshan"
										]
									},
									{
										"cells": [
											"Specification",
											"variable2",
											"Osanda Nimalarathna"
										]
									},
									{
										"cells": [
											"Scenario",
											"variable3",
											"Software Automation"
										]
									},
									{
										"cells": [
											"Suite",
											"variable4",
											"Gauge Framework"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 8,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [variable1] is: \"Osanda Deshan\"\n\n",
									"Text inside Specification Data Store [variable2] is: \"Osanda Nimalarathna\"\n\n",
									"Text inside Scenario Data Store [variable3] is: \"Software Automation\"\n\n",
									"Text inside Suite Data Store [variable4] is: \"Gauge Framework\"\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the values inside the data stores not equal to the following",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Expected Value"
								],
								"rows": [
									{
										"cells": [
											"Scenario",
											"variable1",
											"Osanda Desha"
										]
									},
									{
										"cells": [
											"Scenario",
											"variable3",
											"Software Automatio"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 4,
								"skippedReason": "",
								"messages": [
									"Text inside Scenario Data Store [variable1] is: \"Osanda Deshan\"\n\n",
									"Text inside Scenario Data Store [variable3] is: \"Software Automation\"\n\n"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 2,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		}
	],
	"beforeSuiteHookFailure": null,
	"afterSuiteHookFailure": null,
	"passedSpecsCount": 15,
	"failedSpecsCount": 1,
	"skippedSpecsCount": 0,
	"passedScenariosCount": 47,
	"failedScenariosCount": 2,
	"skippedScenariosCount": 0
}