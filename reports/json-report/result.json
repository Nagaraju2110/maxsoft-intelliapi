{
	"projectName": "MaxSoft-IntelliAPI",
	"timestamp": "May 19, 2018 at 10:43pm",
	"successRate": 100,
	"environment": "staging",
	"tags": "",
	"executionTime": 94436,
	"executionStatus": "pass",
	"specResults": [
		{
			"specHeading": "Get Production PI Token Specification",
			"fileName": "C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Staging BVT\\1. Get Production PI Token.spec",
			"tags": [
				"get_pi_token",
				"production_token"
			],
			"executionTime": 11205,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Invoke PI API in Production Environment using valid username and password and save the access token inside the text file",
					"tags": [
						"get_pi_token",
						"production"
					],
					"executionTime": 11205,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get Production PI Token\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3555,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://piapi-internal.openclass.com/tokens/"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#username",
											"smartflashcards_system"
										]
									},
									{
										"cells": [
											"#password",
											"DKLIYvBBt3RJ1juHKi1gsR6PSJWlN54t"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 456,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\n \"userName\": \"smartflashcards_system\",\n \"password\": \"DKLIYvBBt3RJ1juHKi1gsR6PSJWlN54t\"\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 7055,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
									"Invoked API Endpoint: \nhttps://piapi-internal.openclass.com/tokens/",
									"Response Time is: 5927ms",
									"Response is: \n{\n    \"status\": \"success\",\n    \"data\": \"eyJraWQiOiJrNzQ5MDY2NDkyIiwiYWxnIjoiUlM1MTIifQ.eyJoY2MiOiJVUyIsInN1YiI6ImZmZmZmZmZmNTllODQwMDllNGIwMDg5MDgwOTZkMjllIiwidHlwZSI6ImF0IiwiZXhwIjoxNTI2NzYwODI0LCJpYXQiOjE1MjY3NTAwMjMsInNlc3NpZCI6IjVmYWE5MWM1LWY5Y2UtNDU5Ny1hNTVhLTNjZjYyMzRlOGMzNCJ9.EouBrqfKqcJglX3PEzatL_HpPWFz7Md3RDWDNDgD5eRVi2qjupi2C7AnKmlV99lLiJi9vc6h-4V_Pd1QEQcD3H_9IE2m0KD0sFnSFBGqh-Vpi3YYGMcQN1u_aXxaTL20ZOvlGDVQlf0vHzpGugxk49trgRRcUhufgFu45RB_9OE\"\n}",
									"Response Headers are: \nServer=Apache-Coyote/1.1\nCorrelation-Id=185f17e0-c701-4a69-81ef-c170bcad34b3\nLocation=https://pi.pearsoned.com/v1/piapi/tokens/eyJraWQiOiJrNzQ5MDY2NDkyIiwiYWxnIjoiUlM1MTIifQ.eyJoY2MiOiJVUyIsInN1YiI6ImZmZmZmZmZmNTllODQwMDllNGIwMDg5MDgwOTZkMjllIiwidHlwZSI6ImF0IiwiZXhwIjoxNTI2NzYwODI0LCJpYXQiOjE1MjY3NTAwMjMsInNlc3NpZCI6IjVmYWE5MWM1LWY5Y2UtNDU5Ny1hNTVhLTNjZjYyMzRlOGMzNCJ9.EouBrqfKqcJglX3PEzatL_HpPWFz7Md3RDWDNDgD5eRVi2qjupi2C7AnKmlV99lLiJi9vc6h-4V_Pd1QEQcD3H_9IE2m0KD0sFnSFBGqh-Vpi3YYGMcQN1u_aXxaTL20ZOvlGDVQlf0vHzpGugxk49trgRRcUhufgFu45RB_9OE\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Sat, 19 May 2018 17:13:42 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 4,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"success"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 132,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the access token in the response which is located inside the JSON Path of \"$.data\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3,
								"skippedReason": "",
								"messages": [
									"Successfully saved the access token into the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\""
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 1,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		},
		{
			"specHeading": "Activity API in Aggregation Service Specification",
			"fileName": "C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Staging BVT\\Aggregation Service\\Activity API in Aggregation Service.spec",
			"tags": [
				"aggregation_service",
				"activity",
				"ci_ready"
			],
			"executionTime": 31067,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Sending a new activity information using valid payload",
					"tags": [],
					"executionTime": 31067,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Create a my deck with all types of 9 questions",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 28471,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create a Deck using Aggregation Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 156,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/decks"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#title",
													"API Deck3"
												]
											},
											{
												"cells": [
													"#description",
													"\"null\""
												]
											},
											{
												"cells": [
													"#tags1",
													"API tag1"
												]
											},
											{
												"cells": [
													"#subjectId",
													"2"
												]
											},
											{
												"cells": [
													"#subjectName",
													"API Testing3"
												]
											},
											{
												"cells": [
													"#bookTitle",
													"Automation3"
												]
											},
											{
												"cells": [
													"#bookAuthor",
													"Osanda Nimalarathna"
												]
											},
											{
												"cells": [
													"#bookChapter",
													"Chap. 04"
												]
											},
											{
												"cells": [
													"#purchasedDate",
													"1512021142001"
												]
											},
											{
												"cells": [
													"#purchaseInformationPrice",
													"777"
												]
											},
											{
												"cells": [
													"#purchaseInformationsku",
													"com.pearson.smartflashcards.test3"
												]
											},
											{
												"cells": [
													"#areNotificationsEnabled",
													"true"
												]
											},
											{
												"cells": [
													"#notificationTime",
													"08:00"
												]
											},
											{
												"cells": [
													"#notificationFrequency",
													"0"
												]
											},
											{
												"cells": [
													"#examDate",
													"1512021142000"
												]
											},
											{
												"cells": [
													"#userId",
													"osan"
												]
											},
											{
												"cells": [
													"#parentDeckId",
													"5"
												]
											},
											{
												"cells": [
													"#tempDeckId",
													"999"
												]
											},
											{
												"cells": [
													"#archived",
													"true"
												]
											},
											{
												"cells": [
													"#cardPreview",
													"true"
												]
											},
											{
												"cells": [
													"#noOfCards",
													"2"
												]
											},
											{
												"cells": [
													"#progress",
													"3"
												]
											},
											{
												"cells": [
													"#downloads",
													"12"
												]
											},
											{
												"cells": [
													"#deckAuthorName",
													"Osanda"
												]
											},
											{
												"cells": [
													"#deckAuthorId",
													"6"
												]
											},
											{
												"cells": [
													"#thumbnailUrl",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#status",
													"Closed"
												]
											},
											{
												"cells": [
													"#starred",
													"true"
												]
											},
											{
												"cells": [
													"#categoryId",
													"5a5db30a12ef181b0af109ba"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 116,
										"skippedReason": "",
										"messages": [
											"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": null,\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInformation\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00\",\n    \"notificationFrequency\": \"0\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"osan\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 2187,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
											"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/decks",
											"Response Time is: 1902ms",
											"Response is: \n{\n    \"id\": \"5b005b4a38ade7422d7c4c11\",\n    \"title\": \"API Deck3\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"price\": 0\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00\",\n        \"notificationFrequency\": \"0\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1526750026934,\n        \"updatedAt\": 1526750026934\n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"osan\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-05-19T17:13:46.934Z\",\n    \"updatedAt\": \"2018-05-19T17:13:46.935Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"examReminder\": {\n        \"startDate\": 1510811542000,\n        \"endDate\": 1512021142000,\n        \"time\": \"08:00\"\n    },\n    \"expert\": false\n}",
											"Response Headers are: \ncorrelation-id=1cc66826-a724-45a8-9d38-54f5017447e8\nX-Application-Context=application:stg:8080\nTransfer-Encoding=chunked\nDate=Sat, 19 May 2018 17:13:46 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And save the JSON Path values in the response inside the data stores",
									"table": {
										"headers": [
											"DataStore Type",
											"Variable Name",
											"Value To Be Stored"
										],
										"rows": [
											{
												"cells": [
													"spec",
													"myDeckIdWith9Questions",
													"$.id"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1,
										"skippedReason": "",
										"messages": [
											"\"5b005b4a38ade7422d7c4c11\" is successfully saved as a text in Specification Data Store [myDeckIdWith9Questions]"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create MCQ Type Question using Aggregation Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 159,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/questions"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes using data stores as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Path Value"
										],
										"rows": [
											{
												"cells": [
													"#creatorId",
													"n",
													"",
													"",
													"osanda12"
												]
											},
											{
												"cells": [
													"#creatorPlatform",
													"n",
													"",
													"",
													"Web"
												]
											},
											{
												"cells": [
													"#creatoredSource",
													"n",
													"",
													"",
													"App"
												]
											},
											{
												"cells": [
													"#creatoredType",
													"n",
													"",
													"",
													"Manual"
												]
											},
											{
												"cells": [
													"#isDeleted",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#tempQuestionId",
													"n",
													"",
													"",
													"testId"
												]
											},
											{
												"cells": [
													"#deckId",
													"y",
													"spec",
													"myDeckIdWith9Questions",
													"N/A"
												]
											},
											{
												"cells": [
													"#kind",
													"n",
													"",
													"",
													"MULTIPLE_CHOICE"
												]
											},
											{
												"cells": [
													"#learningObjectives",
													"n",
													"",
													"",
													"learningObjective1"
												]
											},
											{
												"cells": [
													"#imageUrl",
													"n",
													"",
													"",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#media",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#questionPrompt",
													"n",
													"",
													"",
													"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _"
												]
											},
											{
												"cells": [
													"#promptType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#timeout",
													"n",
													"",
													"",
													"60"
												]
											},
											{
												"cells": [
													"#rationale",
													"n",
													"",
													"",
													"rationale"
												]
											},
											{
												"cells": [
													"#boxId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAttempts",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#inCorrectAttempts",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#lastAswered",
													"n",
													"",
													"",
													"2018-01-01T12:00:00+01:00"
												]
											},
											{
												"cells": [
													"#questionId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#skips",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#userId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAnswerList",
													"n",
													"",
													"",
													"1,2"
												]
											},
											{
												"cells": [
													"#answer1Id",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#answer1Value",
													"n",
													"",
													"",
													"Osanda"
												]
											},
											{
												"cells": [
													"#answer1Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer1CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#answer2Id",
													"n",
													"",
													"",
													"2"
												]
											},
											{
												"cells": [
													"#answer2Value",
													"n",
													"",
													"",
													"Gemunu"
												]
											},
											{
												"cells": [
													"#answer2Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer2CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#answer3Id",
													"n",
													"",
													"",
													"3"
												]
											},
											{
												"cells": [
													"#answer3Value",
													"n",
													"",
													"",
													"Eranga"
												]
											},
											{
												"cells": [
													"#answer3Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer3CaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#answer4Id",
													"n",
													"",
													"",
													"4"
												]
											},
											{
												"cells": [
													"#answer4Value",
													"n",
													"",
													"",
													"Heshan"
												]
											},
											{
												"cells": [
													"#answer4Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer4CaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#answer5Id",
													"n",
													"",
													"",
													"5"
												]
											},
											{
												"cells": [
													"#answer5Value",
													"n",
													"",
													"",
													"Thilina"
												]
											},
											{
												"cells": [
													"#answer5Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer5CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#tags",
													"n",
													"",
													"",
													"MaxSoft"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 83,
										"skippedReason": "",
										"messages": [
											"Text inside Specification Data Store [myDeckIdWith9Questions] is: \"5b005b4a38ade7422d7c4c11\"",
											"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b005b4a38ade7422d7c4c11\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"MULTIPLE_CHOICE\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Osanda\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"Gemunu\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"Eranga\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Heshan\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Thilina\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 2703,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
											"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/questions",
											"Response Time is: 2423ms",
											"Response is: \n{\n    \"question\": {\n        \"timeout\": 60,\n        \"media\": \"TEXT\",\n        \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n        \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n        \"promptType\": \"TEXT\"\n    },\n    \"stats\": {\n        \"questionId\": 0,\n        \"userId\": 0,\n        \"boxId\": 0,\n        \"skips\": 0,\n        \"lastAswered\": 1514804400000,\n        \"inCorrectAttempts\": 0,\n        \"correctAttempts\": 1\n    },\n    \"kind\": \"MULTIPLE_CHOICE\",\n    \"learningObjectives\": [\n        \"learningObjective1\"\n    ],\n    \"rationale\": \"rationale\",\n    \"tags\": [\n        \"MaxSoft\"\n    ],\n    \"creatorId\": \"osanda12\",\n    \"deckId\": \"5b005b4a38ade7422d7c4c11\",\n    \"creatoredType\": \"Manual\",\n    \"creatorPlatform\": \"Web\",\n    \"creatoredSource\": \"App\",\n    \"parentId\": null,\n    \"tempQuestionId\": \"testId\",\n    \"epochTime\": {\n        \"createdAt\": 1526750029028,\n        \"updatedAt\": 1526750029028\n    },\n    \"answers\": [\n        {\n            \"id\": 1,\n            \"value\": \"Osanda\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": false\n        },\n        {\n            \"id\": 3,\n            \"value\": \"Eranga\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": true\n        },\n        {\n            \"id\": 5,\n            \"value\": \"Thilina\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": false\n        },\n        {\n            \"id\": 4,\n            \"value\": \"Heshan\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": false\n        },\n        {\n            \"id\": 2,\n            \"value\": \"Gemunu\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": true\n        }\n    ],\n    \"correctAnswers\": [\n        1,\n        2\n    ],\n    \"id\": \"5b005b4de4b0f7e66de75834\",\n    \"createdAt\": \"2018-05-19T17:13:49.028Z\",\n    \"updatedAt\": \"2018-05-19T17:13:49.030Z\",\n    \"deleted\": false\n}",
											"Response Headers are: \ncorrelation-id=bcee2e1c-bcfe-4a6d-bae3-9bf7793a8866\nServer=Apache-Coyote/1.1\nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\nX-Application-Context=flashcardservice:dev:8080\nTransfer-Encoding=chunked\nDate=Sat, 19 May 2018 17:13:49 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create MCQ Type Question using Aggregation Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 223,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/questions"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes using data stores as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Path Value"
										],
										"rows": [
											{
												"cells": [
													"#creatorId",
													"n",
													"",
													"",
													"osanda12"
												]
											},
											{
												"cells": [
													"#creatorPlatform",
													"n",
													"",
													"",
													"Web"
												]
											},
											{
												"cells": [
													"#creatoredSource",
													"n",
													"",
													"",
													"App"
												]
											},
											{
												"cells": [
													"#creatoredType",
													"n",
													"",
													"",
													"Manual"
												]
											},
											{
												"cells": [
													"#isDeleted",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#tempQuestionId",
													"n",
													"",
													"",
													"testId"
												]
											},
											{
												"cells": [
													"#deckId",
													"y",
													"spec",
													"myDeckIdWith9Questions",
													"N/A"
												]
											},
											{
												"cells": [
													"#kind",
													"n",
													"",
													"",
													"MULTIPLE_CHOICE"
												]
											},
											{
												"cells": [
													"#learningObjectives",
													"n",
													"",
													"",
													"learningObjective1"
												]
											},
											{
												"cells": [
													"#imageUrl",
													"n",
													"",
													"",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#media",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#questionPrompt",
													"n",
													"",
													"",
													"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _"
												]
											},
											{
												"cells": [
													"#promptType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#timeout",
													"n",
													"",
													"",
													"60"
												]
											},
											{
												"cells": [
													"#rationale",
													"n",
													"",
													"",
													"rationale"
												]
											},
											{
												"cells": [
													"#boxId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAttempts",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#inCorrectAttempts",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#lastAswered",
													"n",
													"",
													"",
													"2018-01-01T12:00:00+01:00"
												]
											},
											{
												"cells": [
													"#questionId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#skips",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#userId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAnswerList",
													"n",
													"",
													"",
													"1,2"
												]
											},
											{
												"cells": [
													"#answer1Id",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#answer1Value",
													"n",
													"",
													"",
													"Osanda"
												]
											},
											{
												"cells": [
													"#answer1Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer1CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#answer2Id",
													"n",
													"",
													"",
													"2"
												]
											},
											{
												"cells": [
													"#answer2Value",
													"n",
													"",
													"",
													"Gemunu"
												]
											},
											{
												"cells": [
													"#answer2Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer2CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#answer3Id",
													"n",
													"",
													"",
													"3"
												]
											},
											{
												"cells": [
													"#answer3Value",
													"n",
													"",
													"",
													"Eranga"
												]
											},
											{
												"cells": [
													"#answer3Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer3CaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#answer4Id",
													"n",
													"",
													"",
													"4"
												]
											},
											{
												"cells": [
													"#answer4Value",
													"n",
													"",
													"",
													"Heshan"
												]
											},
											{
												"cells": [
													"#answer4Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer4CaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#answer5Id",
													"n",
													"",
													"",
													"5"
												]
											},
											{
												"cells": [
													"#answer5Value",
													"n",
													"",
													"",
													"Thilina"
												]
											},
											{
												"cells": [
													"#answer5Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer5CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#tags",
													"n",
													"",
													"",
													"MaxSoft"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 64,
										"skippedReason": "",
										"messages": [
											"Text inside Specification Data Store [myDeckIdWith9Questions] is: \"5b005b4a38ade7422d7c4c11\"",
											"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b005b4a38ade7422d7c4c11\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"MULTIPLE_CHOICE\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Osanda\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"Gemunu\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"Eranga\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Heshan\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Thilina\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 2850,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
											"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/questions",
											"Response Time is: 2455ms",
											"Response is: \n{\n    \"question\": {\n        \"timeout\": 60,\n        \"media\": \"TEXT\",\n        \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n        \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n        \"promptType\": \"TEXT\"\n    },\n    \"stats\": {\n        \"questionId\": 0,\n        \"userId\": 0,\n        \"boxId\": 0,\n        \"skips\": 0,\n        \"lastAswered\": 1514804400000,\n        \"inCorrectAttempts\": 0,\n        \"correctAttempts\": 1\n    },\n    \"kind\": \"MULTIPLE_CHOICE\",\n    \"learningObjectives\": [\n        \"learningObjective1\"\n    ],\n    \"rationale\": \"rationale\",\n    \"tags\": [\n        \"MaxSoft\"\n    ],\n    \"creatorId\": \"osanda12\",\n    \"deckId\": \"5b005b4a38ade7422d7c4c11\",\n    \"creatoredType\": \"Manual\",\n    \"creatorPlatform\": \"Web\",\n    \"creatoredSource\": \"App\",\n    \"parentId\": null,\n    \"tempQuestionId\": \"testId\",\n    \"epochTime\": {\n        \"createdAt\": 1526750032670,\n        \"updatedAt\": 1526750032670\n    },\n    \"answers\": [\n        {\n            \"id\": 3,\n            \"value\": \"Eranga\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": true\n        },\n        {\n            \"id\": 1,\n            \"value\": \"Osanda\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": false\n        },\n        {\n            \"id\": 4,\n            \"value\": \"Heshan\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": false\n        },\n        {\n            \"id\": 5,\n            \"value\": \"Thilina\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": false\n        },\n        {\n            \"id\": 2,\n            \"value\": \"Gemunu\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": true\n        }\n    ],\n    \"correctAnswers\": [\n        1,\n        2\n    ],\n    \"id\": \"5b005b50e4b082d664a7283f\",\n    \"createdAt\": \"2018-05-19T17:13:52.670Z\",\n    \"updatedAt\": \"2018-05-19T17:13:52.672Z\",\n    \"deleted\": false\n}",
											"Response Headers are: \ncorrelation-id=b31e243a-84d1-4166-b088-c39b324973ea\nServer=Apache-Coyote/1.1\nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\nX-Application-Context=flashcardservice:dev:8080\nTransfer-Encoding=chunked\nDate=Sat, 19 May 2018 17:13:52 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And save the JSON Path values in the response inside the data stores",
									"table": {
										"headers": [
											"DataStore Type",
											"Variable Name",
											"Value To Be Stored"
										],
										"rows": [
											{
												"cells": [
													"scenario",
													"cardId2",
													"$.id"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 6,
										"skippedReason": "",
										"messages": [
											"\"5b005b50e4b082d664a7283f\" is successfully saved as a text in Scenario Data Store [cardId2]"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create MCQ Type Question using Aggregation Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 60,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/questions"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes using data stores as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Path Value"
										],
										"rows": [
											{
												"cells": [
													"#creatorId",
													"n",
													"",
													"",
													"osanda12"
												]
											},
											{
												"cells": [
													"#creatorPlatform",
													"n",
													"",
													"",
													"Web"
												]
											},
											{
												"cells": [
													"#creatoredSource",
													"n",
													"",
													"",
													"App"
												]
											},
											{
												"cells": [
													"#creatoredType",
													"n",
													"",
													"",
													"Manual"
												]
											},
											{
												"cells": [
													"#deckId",
													"y",
													"spec",
													"myDeckIdWith9Questions",
													"N/A"
												]
											},
											{
												"cells": [
													"#kind",
													"n",
													"",
													"",
													"MULTIPLE_CHOICE"
												]
											},
											{
												"cells": [
													"#isDeleted",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#tempQuestionId",
													"n",
													"",
													"",
													"testId"
												]
											},
											{
												"cells": [
													"#learningObjectives",
													"n",
													"",
													"",
													"learningObjective1"
												]
											},
											{
												"cells": [
													"#imageUrl",
													"n",
													"",
													"",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#media",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#questionPrompt",
													"n",
													"",
													"",
													"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _"
												]
											},
											{
												"cells": [
													"#promptType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#timeout",
													"n",
													"",
													"",
													"60"
												]
											},
											{
												"cells": [
													"#rationale",
													"n",
													"",
													"",
													"rationale"
												]
											},
											{
												"cells": [
													"#boxId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAttempts",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#inCorrectAttempts",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#lastAswered",
													"n",
													"",
													"",
													"2018-01-01T12:00:00+01:00"
												]
											},
											{
												"cells": [
													"#questionId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#skips",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#userId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAnswerList",
													"n",
													"",
													"",
													"1,2"
												]
											},
											{
												"cells": [
													"#answer1Id",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#answer1Value",
													"n",
													"",
													"",
													"Osanda"
												]
											},
											{
												"cells": [
													"#answer1Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer1CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#answer2Id",
													"n",
													"",
													"",
													"2"
												]
											},
											{
												"cells": [
													"#answer2Value",
													"n",
													"",
													"",
													"Gemunu"
												]
											},
											{
												"cells": [
													"#answer2Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer2CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#answer3Id",
													"n",
													"",
													"",
													"3"
												]
											},
											{
												"cells": [
													"#answer3Value",
													"n",
													"",
													"",
													"Eranga"
												]
											},
											{
												"cells": [
													"#answer3Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer3CaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#answer4Id",
													"n",
													"",
													"",
													"4"
												]
											},
											{
												"cells": [
													"#answer4Value",
													"n",
													"",
													"",
													"Heshan"
												]
											},
											{
												"cells": [
													"#answer4Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer4CaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#answer5Id",
													"n",
													"",
													"",
													"5"
												]
											},
											{
												"cells": [
													"#answer5Value",
													"n",
													"",
													"",
													"Thilina"
												]
											},
											{
												"cells": [
													"#answer5Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer5CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#tags",
													"n",
													"",
													"",
													"MaxSoft"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 64,
										"skippedReason": "",
										"messages": [
											"Text inside Specification Data Store [myDeckIdWith9Questions] is: \"5b005b4a38ade7422d7c4c11\"",
											"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b005b4a38ade7422d7c4c11\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"MULTIPLE_CHOICE\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Osanda\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"Gemunu\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"Eranga\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Heshan\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Thilina\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 2672,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
											"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/questions",
											"Response Time is: 2390ms",
											"Response is: \n{\n    \"question\": {\n        \"timeout\": 60,\n        \"media\": \"TEXT\",\n        \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n        \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n        \"promptType\": \"TEXT\"\n    },\n    \"stats\": {\n        \"questionId\": 0,\n        \"userId\": 0,\n        \"boxId\": 0,\n        \"skips\": 0,\n        \"lastAswered\": 1514804400000,\n        \"inCorrectAttempts\": 0,\n        \"correctAttempts\": 1\n    },\n    \"kind\": \"MULTIPLE_CHOICE\",\n    \"learningObjectives\": [\n        \"learningObjective1\"\n    ],\n    \"rationale\": \"rationale\",\n    \"tags\": [\n        \"MaxSoft\"\n    ],\n    \"creatorId\": \"osanda12\",\n    \"deckId\": \"5b005b4a38ade7422d7c4c11\",\n    \"creatoredType\": \"Manual\",\n    \"creatorPlatform\": \"Web\",\n    \"creatoredSource\": \"App\",\n    \"parentId\": null,\n    \"tempQuestionId\": \"testId\",\n    \"epochTime\": {\n        \"createdAt\": 1526750035768,\n        \"updatedAt\": 1526750035768\n    },\n    \"answers\": [\n        {\n            \"id\": 1,\n            \"value\": \"Osanda\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": false\n        },\n        {\n            \"id\": 3,\n            \"value\": \"Eranga\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": true\n        },\n        {\n            \"id\": 4,\n            \"value\": \"Heshan\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": false\n        },\n        {\n            \"id\": 2,\n            \"value\": \"Gemunu\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": true\n        },\n        {\n            \"id\": 5,\n            \"value\": \"Thilina\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": false\n        }\n    ],\n    \"correctAnswers\": [\n        1,\n        2\n    ],\n    \"id\": \"5b005b53e4b0f7e66de75835\",\n    \"createdAt\": \"2018-05-19T17:13:55.768Z\",\n    \"updatedAt\": \"2018-05-19T17:13:55.770Z\",\n    \"deleted\": false\n}",
											"Response Headers are: \ncorrelation-id=474b3c9d-8476-492f-9bd9-f237ac82831b\nServer=Apache-Coyote/1.1\nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\nX-Application-Context=flashcardservice:dev:8080\nTransfer-Encoding=chunked\nDate=Sat, 19 May 2018 17:13:55 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create MCQ Type Question using Aggregation Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 58,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/questions"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes using data stores as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Path Value"
										],
										"rows": [
											{
												"cells": [
													"#creatorId",
													"n",
													"",
													"",
													"osanda12"
												]
											},
											{
												"cells": [
													"#creatorPlatform",
													"n",
													"",
													"",
													"Web"
												]
											},
											{
												"cells": [
													"#creatoredSource",
													"n",
													"",
													"",
													"App"
												]
											},
											{
												"cells": [
													"#creatoredType",
													"n",
													"",
													"",
													"Manual"
												]
											},
											{
												"cells": [
													"#deckId",
													"y",
													"spec",
													"myDeckIdWith9Questions",
													"N/A"
												]
											},
											{
												"cells": [
													"#kind",
													"n",
													"",
													"",
													"MULTIPLE_CHOICE"
												]
											},
											{
												"cells": [
													"#learningObjectives",
													"n",
													"",
													"",
													"learningObjective1"
												]
											},
											{
												"cells": [
													"#isDeleted",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#tempQuestionId",
													"n",
													"",
													"",
													"testId"
												]
											},
											{
												"cells": [
													"#imageUrl",
													"n",
													"",
													"",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#media",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#questionPrompt",
													"n",
													"",
													"",
													"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _"
												]
											},
											{
												"cells": [
													"#promptType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#timeout",
													"n",
													"",
													"",
													"60"
												]
											},
											{
												"cells": [
													"#rationale",
													"n",
													"",
													"",
													"rationale"
												]
											},
											{
												"cells": [
													"#boxId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAttempts",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#inCorrectAttempts",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#lastAswered",
													"n",
													"",
													"",
													"2018-01-01T12:00:00+01:00"
												]
											},
											{
												"cells": [
													"#questionId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#skips",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#userId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAnswerList",
													"n",
													"",
													"",
													"1,2"
												]
											},
											{
												"cells": [
													"#answer1Id",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#answer1Value",
													"n",
													"",
													"",
													"Osanda"
												]
											},
											{
												"cells": [
													"#answer1Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer1CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#answer2Id",
													"n",
													"",
													"",
													"2"
												]
											},
											{
												"cells": [
													"#answer2Value",
													"n",
													"",
													"",
													"Gemunu"
												]
											},
											{
												"cells": [
													"#answer2Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer2CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#answer3Id",
													"n",
													"",
													"",
													"3"
												]
											},
											{
												"cells": [
													"#answer3Value",
													"n",
													"",
													"",
													"Eranga"
												]
											},
											{
												"cells": [
													"#answer3Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer3CaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#answer4Id",
													"n",
													"",
													"",
													"4"
												]
											},
											{
												"cells": [
													"#answer4Value",
													"n",
													"",
													"",
													"Heshan"
												]
											},
											{
												"cells": [
													"#answer4Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer4CaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#answer5Id",
													"n",
													"",
													"",
													"5"
												]
											},
											{
												"cells": [
													"#answer5Value",
													"n",
													"",
													"",
													"Thilina"
												]
											},
											{
												"cells": [
													"#answer5Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer5CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#tags",
													"n",
													"",
													"",
													"MaxSoft"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 72,
										"skippedReason": "",
										"messages": [
											"Text inside Specification Data Store [myDeckIdWith9Questions] is: \"5b005b4a38ade7422d7c4c11\"",
											"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b005b4a38ade7422d7c4c11\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"MULTIPLE_CHOICE\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Osanda\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"Gemunu\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"Eranga\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Heshan\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Thilina\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 2714,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
											"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/questions",
											"Response Time is: 2336ms",
											"Response is: \n{\n    \"question\": {\n        \"timeout\": 60,\n        \"media\": \"TEXT\",\n        \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n        \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n        \"promptType\": \"TEXT\"\n    },\n    \"stats\": {\n        \"questionId\": 0,\n        \"userId\": 0,\n        \"boxId\": 0,\n        \"skips\": 0,\n        \"lastAswered\": 1514804400000,\n        \"inCorrectAttempts\": 0,\n        \"correctAttempts\": 1\n    },\n    \"kind\": \"MULTIPLE_CHOICE\",\n    \"learningObjectives\": [\n        \"learningObjective1\"\n    ],\n    \"rationale\": \"rationale\",\n    \"tags\": [\n        \"MaxSoft\"\n    ],\n    \"creatorId\": \"osanda12\",\n    \"deckId\": \"5b005b4a38ade7422d7c4c11\",\n    \"creatoredType\": \"Manual\",\n    \"creatorPlatform\": \"Web\",\n    \"creatoredSource\": \"App\",\n    \"parentId\": null,\n    \"tempQuestionId\": \"testId\",\n    \"epochTime\": {\n        \"createdAt\": 1526750038673,\n        \"updatedAt\": 1526750038673\n    },\n    \"answers\": [\n        {\n            \"id\": 3,\n            \"value\": \"Eranga\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": true\n        },\n        {\n            \"id\": 5,\n            \"value\": \"Thilina\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": false\n        },\n        {\n            \"id\": 4,\n            \"value\": \"Heshan\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": false\n        },\n        {\n            \"id\": 2,\n            \"value\": \"Gemunu\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": true\n        },\n        {\n            \"id\": 1,\n            \"value\": \"Osanda\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": false\n        }\n    ],\n    \"correctAnswers\": [\n        1,\n        2\n    ],\n    \"id\": \"5b005b56e4b082d664a72840\",\n    \"createdAt\": \"2018-05-19T17:13:58.673Z\",\n    \"updatedAt\": \"2018-05-19T17:13:58.675Z\",\n    \"deleted\": false\n}",
											"Response Headers are: \ncorrelation-id=c847adb7-1bfd-401f-8b8f-4b48653feefd\nServer=Apache-Coyote/1.1\nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\nX-Application-Context=flashcardservice:dev:8080\nTransfer-Encoding=chunked\nDate=Sat, 19 May 2018 17:13:58 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create All Type Question using Aggregation Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 85,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/questions"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes using data stores as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Path Value"
										],
										"rows": [
											{
												"cells": [
													"#creatorId",
													"n",
													"",
													"",
													"osanda12"
												]
											},
											{
												"cells": [
													"#creatorPlatform",
													"n",
													"",
													"",
													"Web"
												]
											},
											{
												"cells": [
													"#creatoredSource",
													"n",
													"",
													"",
													"App"
												]
											},
											{
												"cells": [
													"#creatoredType",
													"n",
													"",
													"",
													"Manual"
												]
											},
											{
												"cells": [
													"#deckId",
													"y",
													"spec",
													"myDeckIdWith9Questions",
													"N/A"
												]
											},
											{
												"cells": [
													"#kind",
													"n",
													"",
													"",
													"ALL"
												]
											},
											{
												"cells": [
													"#learningObjectives",
													"n",
													"",
													"",
													"learningObjective1"
												]
											},
											{
												"cells": [
													"#isDeleted",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#tempQuestionId",
													"n",
													"",
													"",
													"testId"
												]
											},
											{
												"cells": [
													"#imageUrl",
													"n",
													"",
													"",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#media",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#questionPrompt",
													"n",
													"",
													"",
													"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _"
												]
											},
											{
												"cells": [
													"#promptType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#timeout",
													"n",
													"",
													"",
													"60"
												]
											},
											{
												"cells": [
													"#rationale",
													"n",
													"",
													"",
													"rationale"
												]
											},
											{
												"cells": [
													"#boxId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAttempts",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#inCorrectAttempts",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#lastAswered",
													"n",
													"",
													"",
													"2018-01-01T12:00:00+01:00"
												]
											},
											{
												"cells": [
													"#questionId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#skips",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#userId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAnswerList",
													"n",
													"",
													"",
													"1,2"
												]
											},
											{
												"cells": [
													"#answer1Id",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#answer1Value",
													"n",
													"",
													"",
													"Osanda"
												]
											},
											{
												"cells": [
													"#answer1Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer1CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#answer2Id",
													"n",
													"",
													"",
													"2"
												]
											},
											{
												"cells": [
													"#answer2Value",
													"n",
													"",
													"",
													"Gemunu"
												]
											},
											{
												"cells": [
													"#answer2Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer2CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#answer3Id",
													"n",
													"",
													"",
													"3"
												]
											},
											{
												"cells": [
													"#answer3Value",
													"n",
													"",
													"",
													"Eranga"
												]
											},
											{
												"cells": [
													"#answer3Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer3CaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#answer4Id",
													"n",
													"",
													"",
													"4"
												]
											},
											{
												"cells": [
													"#answer4Value",
													"n",
													"",
													"",
													"Heshan"
												]
											},
											{
												"cells": [
													"#answer4Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer4CaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#answer5Id",
													"n",
													"",
													"",
													"5"
												]
											},
											{
												"cells": [
													"#answer5Value",
													"n",
													"",
													"",
													"Thilina"
												]
											},
											{
												"cells": [
													"#answer5Type",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#answer5CaseSensitive",
													"n",
													"",
													"",
													"true"
												]
											},
											{
												"cells": [
													"#tags",
													"n",
													"",
													"",
													"MaxSoft"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 68,
										"skippedReason": "",
										"messages": [
											"Text inside Specification Data Store [myDeckIdWith9Questions] is: \"5b005b4a38ade7422d7c4c11\"",
											"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b005b4a38ade7422d7c4c11\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"ALL\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"learningObjective1\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"correctAnswers\": [\n        1,2\n  ],\n  \"answers\": [\n      {\n        \"id\": 1,\n        \"value\": \"Osanda\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 2,\n        \"value\": \"Gemunu\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      },\n      {\n        \"id\": 3,\n        \"value\": \"Eranga\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 4,\n        \"value\": \"Heshan\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": false\n      },\n      {\n        \"id\": 5,\n        \"value\": \"Thilina\",\n        \"type\": \"TEXT\",\n        \"caseSensitive\": true\n      }\n    ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 2640,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
											"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/questions",
											"Response Time is: 2262ms",
											"Response is: \n{\n    \"question\": {\n        \"timeout\": 60,\n        \"media\": \"TEXT\",\n        \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n        \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n        \"promptType\": \"TEXT\"\n    },\n    \"stats\": {\n        \"questionId\": 0,\n        \"userId\": 0,\n        \"boxId\": 0,\n        \"skips\": 0,\n        \"lastAswered\": 1514804400000,\n        \"inCorrectAttempts\": 0,\n        \"correctAttempts\": 1\n    },\n    \"kind\": \"ALL\",\n    \"learningObjectives\": [\n        \"learningObjective1\"\n    ],\n    \"rationale\": \"rationale\",\n    \"tags\": [\n        \"MaxSoft\"\n    ],\n    \"creatorId\": \"osanda12\",\n    \"deckId\": \"5b005b4a38ade7422d7c4c11\",\n    \"creatoredType\": \"Manual\",\n    \"creatorPlatform\": \"Web\",\n    \"creatoredSource\": \"App\",\n    \"parentId\": null,\n    \"tempQuestionId\": \"testId\",\n    \"epochTime\": {\n        \"createdAt\": 1526750041751,\n        \"updatedAt\": 1526750041751\n    },\n    \"answers\": [\n        {\n            \"id\": 5,\n            \"value\": \"Thilina\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": false\n        },\n        {\n            \"id\": 3,\n            \"value\": \"Eranga\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": true\n        },\n        {\n            \"id\": 1,\n            \"value\": \"Osanda\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": false\n        },\n        {\n            \"id\": 2,\n            \"value\": \"Gemunu\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": true,\n            \"correct\": true\n        },\n        {\n            \"id\": 4,\n            \"value\": \"Heshan\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": false\n        }\n    ],\n    \"correctAnswers\": [\n        1,\n        2\n    ],\n    \"id\": \"5b005b59e4b082d664a72841\",\n    \"deleted\": false\n}",
											"Response Headers are: \ncorrelation-id=d17ae7f3-1800-4810-8289-d0315c95c66d\nServer=Apache-Coyote/1.1\nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\nX-Application-Context=flashcardservice:dev:8080\nTransfer-Encoding=chunked\nDate=Sat, 19 May 2018 17:14:01 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And save the JSON Path values in the response inside the data stores",
									"table": {
										"headers": [
											"DataStore Type",
											"Variable Name",
											"Value To Be Stored"
										],
										"rows": [
											{
												"cells": [
													"scenario",
													"cardId5",
													"$.id"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 43,
										"skippedReason": "",
										"messages": [
											"\"5b005b59e4b082d664a72841\" is successfully saved as a text in Scenario Data Store [cardId5]"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create Short Answer Type Question using Aggregation Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 148,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/questions"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes using data stores as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#creatorId",
													"n",
													"",
													"",
													"osanda12"
												]
											},
											{
												"cells": [
													"#creatorPlatform",
													"n",
													"",
													"",
													"Web"
												]
											},
											{
												"cells": [
													"#creatoredSource",
													"n",
													"",
													"",
													"App"
												]
											},
											{
												"cells": [
													"#creatoredType",
													"n",
													"",
													"",
													"Manual"
												]
											},
											{
												"cells": [
													"#deckId",
													"y",
													"spec",
													"myDeckIdWith9Questions",
													""
												]
											},
											{
												"cells": [
													"#isDeleted",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#tempQuestionId",
													"n",
													"",
													"",
													"testId"
												]
											},
											{
												"cells": [
													"#kind",
													"n",
													"",
													"",
													"SHORT_ANSWER"
												]
											},
											{
												"cells": [
													"#learningObjectives",
													"n",
													"",
													"",
													""
												]
											},
											{
												"cells": [
													"#imageUrl",
													"n",
													"",
													"",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#media",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#questionPrompt",
													"n",
													"",
													"",
													"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _"
												]
											},
											{
												"cells": [
													"#promptType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#timeout",
													"n",
													"",
													"",
													"60"
												]
											},
											{
												"cells": [
													"#rationale",
													"n",
													"",
													"",
													"rationale"
												]
											},
											{
												"cells": [
													"#boxId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAttempts",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#inCorrectAttempts",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#lastAswered",
													"n",
													"",
													"",
													"2018-01-01T12:00:00+01:00"
												]
											},
											{
												"cells": [
													"#questionId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#skips",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#userId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAnswerId",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#correctAnswerValue",
													"n",
													"",
													"",
													"Osanda Deshan"
												]
											},
											{
												"cells": [
													"#iscorrectAnswerCaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#correctAnswerType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#tags",
													"n",
													"",
													"",
													"MaxSoft"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 58,
										"skippedReason": "",
										"messages": [
											"Text inside Specification Data Store [myDeckIdWith9Questions] is: \"5b005b4a38ade7422d7c4c11\"",
											"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b005b4a38ade7422d7c4c11\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"SHORT_ANSWER\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"answers\": [\n        {\n          \"id\": 1,\n          \"value\": \"Osanda Deshan\",\n          \"caseSensitive\": false,\n          \"type\": \"TEXT\"\n        }\n  ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 2701,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
											"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/questions",
											"Response Time is: 2443ms",
											"Response is: \n{\n    \"question\": {\n        \"timeout\": 60,\n        \"media\": \"TEXT\",\n        \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n        \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n        \"promptType\": \"TEXT\"\n    },\n    \"stats\": {\n        \"questionId\": 0,\n        \"userId\": 0,\n        \"boxId\": 0,\n        \"skips\": 0,\n        \"lastAswered\": 1514804400000,\n        \"inCorrectAttempts\": 0,\n        \"correctAttempts\": 1\n    },\n    \"kind\": \"SHORT_ANSWER\",\n    \"learningObjectives\": [\n        \"\"\n    ],\n    \"rationale\": \"rationale\",\n    \"tags\": [\n        \"MaxSoft\"\n    ],\n    \"creatorId\": \"osanda12\",\n    \"deckId\": \"5b005b4a38ade7422d7c4c11\",\n    \"creatoredType\": \"Manual\",\n    \"creatorPlatform\": \"Web\",\n    \"creatoredSource\": \"App\",\n    \"parentId\": null,\n    \"tempQuestionId\": \"testId\",\n    \"epochTime\": {\n        \"createdAt\": 1526750044896,\n        \"updatedAt\": 1526750044896\n    },\n    \"answers\": [\n        {\n            \"id\": 1,\n            \"value\": \"Osanda Deshan\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": false\n        }\n    ],\n    \"id\": \"5b005b5ce4b0f7e66de75836\",\n    \"createdAt\": \"2018-05-19T17:14:04.896Z\",\n    \"updatedAt\": \"2018-05-19T17:14:04.898Z\",\n    \"deleted\": false\n}",
											"Response Headers are: \ncorrelation-id=503dda83-5858-4a48-931c-33a20d1c2609\nServer=Apache-Coyote/1.1\nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\nX-Application-Context=flashcardservice:dev:8080\nTransfer-Encoding=chunked\nDate=Sat, 19 May 2018 17:14:04 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create Short Answer Type Question using Aggregation Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 74,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/questions"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes using data stores as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#creatorId",
													"n",
													"",
													"",
													"osanda12"
												]
											},
											{
												"cells": [
													"#creatorPlatform",
													"n",
													"",
													"",
													"Web"
												]
											},
											{
												"cells": [
													"#creatoredSource",
													"n",
													"",
													"",
													"App"
												]
											},
											{
												"cells": [
													"#creatoredType",
													"n",
													"",
													"",
													"Manual"
												]
											},
											{
												"cells": [
													"#deckId",
													"y",
													"spec",
													"myDeckIdWith9Questions",
													""
												]
											},
											{
												"cells": [
													"#isDeleted",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#tempQuestionId",
													"n",
													"",
													"",
													"testId"
												]
											},
											{
												"cells": [
													"#kind",
													"n",
													"",
													"",
													"SHORT_ANSWER"
												]
											},
											{
												"cells": [
													"#learningObjectives",
													"n",
													"",
													"",
													""
												]
											},
											{
												"cells": [
													"#imageUrl",
													"n",
													"",
													"",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#media",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#questionPrompt",
													"n",
													"",
													"",
													"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _"
												]
											},
											{
												"cells": [
													"#promptType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#timeout",
													"n",
													"",
													"",
													"60"
												]
											},
											{
												"cells": [
													"#rationale",
													"n",
													"",
													"",
													"rationale"
												]
											},
											{
												"cells": [
													"#boxId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAttempts",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#inCorrectAttempts",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#lastAswered",
													"n",
													"",
													"",
													"2018-01-01T12:00:00+01:00"
												]
											},
											{
												"cells": [
													"#questionId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#skips",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#userId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAnswerId",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#correctAnswerValue",
													"n",
													"",
													"",
													"Osanda Deshan"
												]
											},
											{
												"cells": [
													"#iscorrectAnswerCaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#correctAnswerType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#tags",
													"n",
													"",
													"",
													"MaxSoft"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 101,
										"skippedReason": "",
										"messages": [
											"Text inside Specification Data Store [myDeckIdWith9Questions] is: \"5b005b4a38ade7422d7c4c11\"",
											"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b005b4a38ade7422d7c4c11\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"SHORT_ANSWER\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"answers\": [\n        {\n          \"id\": 1,\n          \"value\": \"Osanda Deshan\",\n          \"caseSensitive\": false,\n          \"type\": \"TEXT\"\n        }\n  ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 2804,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
											"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/questions",
											"Response Time is: 2541ms",
											"Response is: \n{\n    \"question\": {\n        \"timeout\": 60,\n        \"media\": \"TEXT\",\n        \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n        \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n        \"promptType\": \"TEXT\"\n    },\n    \"stats\": {\n        \"questionId\": 0,\n        \"userId\": 0,\n        \"boxId\": 0,\n        \"skips\": 0,\n        \"lastAswered\": 1514804400000,\n        \"inCorrectAttempts\": 0,\n        \"correctAttempts\": 1\n    },\n    \"kind\": \"SHORT_ANSWER\",\n    \"learningObjectives\": [\n        \"\"\n    ],\n    \"rationale\": \"rationale\",\n    \"tags\": [\n        \"MaxSoft\"\n    ],\n    \"creatorId\": \"osanda12\",\n    \"deckId\": \"5b005b4a38ade7422d7c4c11\",\n    \"creatoredType\": \"Manual\",\n    \"creatorPlatform\": \"Web\",\n    \"creatoredSource\": \"App\",\n    \"parentId\": null,\n    \"tempQuestionId\": \"testId\",\n    \"epochTime\": {\n        \"createdAt\": 1526750048103,\n        \"updatedAt\": 1526750048103\n    },\n    \"answers\": [\n        {\n            \"id\": 1,\n            \"value\": \"Osanda Deshan\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": false\n        }\n    ],\n    \"id\": \"5b005b60e4b082d664a72842\",\n    \"createdAt\": \"2018-05-19T17:14:08.103Z\",\n    \"updatedAt\": \"2018-05-19T17:14:08.105Z\",\n    \"deleted\": false\n}",
											"Response Headers are: \ncorrelation-id=bcee2e1c-bcfe-4a6d-bae3-9bf7793a8866\nServer=Apache-Coyote/1.1\nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\nX-Application-Context=flashcardservice:dev:8080\nTransfer-Encoding=chunked\nDate=Sat, 19 May 2018 17:14:08 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create Short Answer Type Question using Aggregation Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 80,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/questions"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes using data stores as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#creatorId",
													"n",
													"",
													"",
													"osanda12"
												]
											},
											{
												"cells": [
													"#creatorPlatform",
													"n",
													"",
													"",
													"Web"
												]
											},
											{
												"cells": [
													"#creatoredSource",
													"n",
													"",
													"",
													"App"
												]
											},
											{
												"cells": [
													"#creatoredType",
													"n",
													"",
													"",
													"Manual"
												]
											},
											{
												"cells": [
													"#deckId",
													"y",
													"spec",
													"myDeckIdWith9Questions",
													""
												]
											},
											{
												"cells": [
													"#isDeleted",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#tempQuestionId",
													"n",
													"",
													"",
													"testId"
												]
											},
											{
												"cells": [
													"#kind",
													"n",
													"",
													"",
													"SHORT_ANSWER"
												]
											},
											{
												"cells": [
													"#learningObjectives",
													"n",
													"",
													"",
													""
												]
											},
											{
												"cells": [
													"#imageUrl",
													"n",
													"",
													"",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#media",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#questionPrompt",
													"n",
													"",
													"",
													"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _"
												]
											},
											{
												"cells": [
													"#promptType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#timeout",
													"n",
													"",
													"",
													"60"
												]
											},
											{
												"cells": [
													"#rationale",
													"n",
													"",
													"",
													"rationale"
												]
											},
											{
												"cells": [
													"#boxId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAttempts",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#inCorrectAttempts",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#lastAswered",
													"n",
													"",
													"",
													"2018-01-01T12:00:00+01:00"
												]
											},
											{
												"cells": [
													"#questionId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#skips",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#userId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAnswerId",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#correctAnswerValue",
													"n",
													"",
													"",
													"Osanda Deshan"
												]
											},
											{
												"cells": [
													"#iscorrectAnswerCaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#correctAnswerType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#tags",
													"n",
													"",
													"",
													"MaxSoft"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 67,
										"skippedReason": "",
										"messages": [
											"Text inside Specification Data Store [myDeckIdWith9Questions] is: \"5b005b4a38ade7422d7c4c11\"",
											"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b005b4a38ade7422d7c4c11\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"SHORT_ANSWER\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"answers\": [\n        {\n          \"id\": 1,\n          \"value\": \"Osanda Deshan\",\n          \"caseSensitive\": false,\n          \"type\": \"TEXT\"\n        }\n  ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 2653,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
											"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/questions",
											"Response Time is: 2418ms",
											"Response is: \n{\n    \"question\": {\n        \"timeout\": 60,\n        \"media\": \"TEXT\",\n        \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n        \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n        \"promptType\": \"TEXT\"\n    },\n    \"stats\": {\n        \"questionId\": 0,\n        \"userId\": 0,\n        \"boxId\": 0,\n        \"skips\": 0,\n        \"lastAswered\": 1514804400000,\n        \"inCorrectAttempts\": 0,\n        \"correctAttempts\": 1\n    },\n    \"kind\": \"SHORT_ANSWER\",\n    \"learningObjectives\": [\n        \"\"\n    ],\n    \"rationale\": \"rationale\",\n    \"tags\": [\n        \"MaxSoft\"\n    ],\n    \"creatorId\": \"osanda12\",\n    \"deckId\": \"5b005b4a38ade7422d7c4c11\",\n    \"creatoredType\": \"Manual\",\n    \"creatorPlatform\": \"Web\",\n    \"creatoredSource\": \"App\",\n    \"parentId\": null,\n    \"tempQuestionId\": \"testId\",\n    \"epochTime\": {\n        \"createdAt\": 1526750051158,\n        \"updatedAt\": 1526750051158\n    },\n    \"answers\": [\n        {\n            \"id\": 1,\n            \"value\": \"Osanda Deshan\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": false\n        }\n    ],\n    \"id\": \"5b005b63e4b082d664a72843\",\n    \"createdAt\": \"2018-05-19T17:14:11.158Z\",\n    \"updatedAt\": \"2018-05-19T17:14:11.160Z\",\n    \"deleted\": false\n}",
											"Response Headers are: \ncorrelation-id=b31e243a-84d1-4166-b088-c39b324973ea\nServer=Apache-Coyote/1.1\nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\nX-Application-Context=flashcardservice:dev:8080\nTransfer-Encoding=chunked\nDate=Sat, 19 May 2018 17:14:11 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And save the JSON Path values in the response inside the data stores",
									"table": {
										"headers": [
											"DataStore Type",
											"Variable Name",
											"Value To Be Stored"
										],
										"rows": [
											{
												"cells": [
													"scenario",
													"cardId8",
													"$.id"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 1,
										"skippedReason": "",
										"messages": [
											"\"5b005b63e4b082d664a72843\" is successfully saved as a text in Scenario Data Store [cardId8]"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Create Short Answer Type Question using Aggregation Service\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 77,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/questions"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request attributes using data stores as follows",
									"table": {
										"headers": [
											"Attribute Value In JSON Template",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Attribute Value To Be Set"
										],
										"rows": [
											{
												"cells": [
													"#creatorId",
													"n",
													"",
													"",
													"osanda12"
												]
											},
											{
												"cells": [
													"#creatorPlatform",
													"n",
													"",
													"",
													"Web"
												]
											},
											{
												"cells": [
													"#creatoredSource",
													"n",
													"",
													"",
													"App"
												]
											},
											{
												"cells": [
													"#creatoredType",
													"n",
													"",
													"",
													"Manual"
												]
											},
											{
												"cells": [
													"#deckId",
													"y",
													"spec",
													"myDeckIdWith9Questions",
													""
												]
											},
											{
												"cells": [
													"#isDeleted",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#tempQuestionId",
													"n",
													"",
													"",
													"testId"
												]
											},
											{
												"cells": [
													"#kind",
													"n",
													"",
													"",
													"SHORT_ANSWER"
												]
											},
											{
												"cells": [
													"#learningObjectives",
													"n",
													"",
													"",
													""
												]
											},
											{
												"cells": [
													"#imageUrl",
													"n",
													"",
													"",
													"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
												]
											},
											{
												"cells": [
													"#media",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#questionPrompt",
													"n",
													"",
													"",
													"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _"
												]
											},
											{
												"cells": [
													"#promptType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#timeout",
													"n",
													"",
													"",
													"60"
												]
											},
											{
												"cells": [
													"#rationale",
													"n",
													"",
													"",
													"rationale"
												]
											},
											{
												"cells": [
													"#boxId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAttempts",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#inCorrectAttempts",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#lastAswered",
													"n",
													"",
													"",
													"2018-01-01T12:00:00+01:00"
												]
											},
											{
												"cells": [
													"#questionId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#skips",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#userId",
													"n",
													"",
													"",
													"0"
												]
											},
											{
												"cells": [
													"#correctAnswerId",
													"n",
													"",
													"",
													"1"
												]
											},
											{
												"cells": [
													"#correctAnswerValue",
													"n",
													"",
													"",
													"Osanda Deshan"
												]
											},
											{
												"cells": [
													"#iscorrectAnswerCaseSensitive",
													"n",
													"",
													"",
													"false"
												]
											},
											{
												"cells": [
													"#correctAnswerType",
													"n",
													"",
													"",
													"TEXT"
												]
											},
											{
												"cells": [
													"#tags",
													"n",
													"",
													"",
													"MaxSoft"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 66,
										"skippedReason": "",
										"messages": [
											"Text inside Specification Data Store [myDeckIdWith9Questions] is: \"5b005b4a38ade7422d7c4c11\"",
											"The JSON request body that you are going to use for the API is:\n{\n  \"creatorId\": \"osanda12\",\n  \"creatorPlatform\": \"Web\",\n  \"creatoredSource\": \"App\",\n  \"creatoredType\": \"Manual\",\n  \"deckId\": \"5b005b4a38ade7422d7c4c11\",\n  \"tempQuestionId\": \"testId\",\n  \"kind\": \"SHORT_ANSWER\",\n  \"deleted\": false,\n  \"learningObjectives\": [\n    \"\"\n  ],\n  \"question\": {\n    \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"media\": \"TEXT\",\n    \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n    \"promptType\": \"TEXT\",\n    \"timeout\": 60\n  },\n  \"rationale\": \"rationale\",\n  \"stats\": {\n    \"boxId\": 0,\n    \"correctAttempts\": 1,\n    \"inCorrectAttempts\": 0,\n    \"lastAswered\": \"2018-01-01T12:00:00+01:00\",\n    \"questionId\": 0,\n    \"skips\": 0,\n    \"userId\": 0\n  },\n \"answers\": [\n        {\n          \"id\": 1,\n          \"value\": \"Osanda Deshan\",\n          \"caseSensitive\": false,\n          \"type\": \"TEXT\"\n        }\n  ],\n  \"tags\": [\n    \"MaxSoft\"\n  ]\n}"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 2614,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
											"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/questions",
											"Response Time is: 2406ms",
											"Response is: \n{\n    \"question\": {\n        \"timeout\": 60,\n        \"media\": \"TEXT\",\n        \"prompt\": \"Who is the owner of MaxSoft? _ _ _ _ _ _ _ _\",\n        \"imageUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a155f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n        \"promptType\": \"TEXT\"\n    },\n    \"stats\": {\n        \"questionId\": 0,\n        \"userId\": 0,\n        \"boxId\": 0,\n        \"skips\": 0,\n        \"lastAswered\": 1514804400000,\n        \"inCorrectAttempts\": 0,\n        \"correctAttempts\": 1\n    },\n    \"kind\": \"SHORT_ANSWER\",\n    \"learningObjectives\": [\n        \"\"\n    ],\n    \"rationale\": \"rationale\",\n    \"tags\": [\n        \"MaxSoft\"\n    ],\n    \"creatorId\": \"osanda12\",\n    \"deckId\": \"5b005b4a38ade7422d7c4c11\",\n    \"creatoredType\": \"Manual\",\n    \"creatorPlatform\": \"Web\",\n    \"creatoredSource\": \"App\",\n    \"parentId\": null,\n    \"tempQuestionId\": \"testId\",\n    \"epochTime\": {\n        \"createdAt\": 1526750054002,\n        \"updatedAt\": 1526750054002\n    },\n    \"answers\": [\n        {\n            \"id\": 1,\n            \"value\": \"Osanda Deshan\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": false\n        }\n    ],\n    \"id\": \"5b005b66e4b0f7e66de75837\",\n    \"createdAt\": \"2018-05-19T17:14:14.002Z\",\n    \"updatedAt\": \"2018-05-19T17:14:14.009Z\",\n    \"deleted\": false\n}",
											"Response Headers are: \ncorrelation-id=474b3c9d-8476-492f-9bd9-f237ac82831b\nServer=Apache-Coyote/1.1\nX-Content-Type-Options=nosniff\nX-XSS-Protection=1; mode=block\nCache-Control=no-cache, no-store, max-age=0, must-revalidate\nPragma=no-cache\nExpires=0\nX-Application-Context=flashcardservice:dev:8080\nTransfer-Encoding=chunked\nDate=Sat, 19 May 2018 17:14:14 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"201\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And save the JSON Path values in the response inside the data stores",
									"table": {
										"headers": [
											"DataStore Type",
											"Variable Name",
											"Value To Be Stored"
										],
										"rows": [
											{
												"cells": [
													"scenario",
													"questionId",
													"$.id"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 3,
										"skippedReason": "",
										"messages": [
											"\"5b005b66e4b0f7e66de75837\" is successfully saved as a text in Scenario Data Store [questionId]"
										],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Activity API in Aggregation Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 76,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/learninganalytics/activities"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes using data stores as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#personId",
											"n",
											"",
											"",
											"ffffffff59db8f51e4b0c1f4de01b2e2"
										]
									},
									{
										"cells": [
											"#deckId",
											"y",
											"spec",
											"myDeckIdWith9Questions",
											"deckId2"
										]
									},
									{
										"cells": [
											"#isRefreshDeck",
											"n",
											"",
											"",
											"true"
										]
									},
									{
										"cells": [
											"#activity1Id",
											"n",
											"",
											"",
											"4868b82a-24a1-4e03-b45a-c11e616ad28c"
										]
									},
									{
										"cells": [
											"#activity1CardId",
											"y",
											"scenario",
											"cardId2",
											""
										]
									},
									{
										"cells": [
											"#activity1CardType",
											"n",
											"",
											"",
											"Manual"
										]
									},
									{
										"cells": [
											"#activity1StartTime",
											"n",
											"",
											"",
											"2017-10-31T12:15:00.000Z"
										]
									},
									{
										"cells": [
											"#activity1EndTime",
											"n",
											"",
											"",
											"2017-10-31T12:15:00.000Z"
										]
									},
									{
										"cells": [
											"#activity1SessionId",
											"n",
											"",
											"",
											"4868b82a-24a1-4e03-b45a-c11e616ad28c"
										]
									},
									{
										"cells": [
											"#activity1EventType1",
											"n",
											"",
											"",
											"FAVORITE"
										]
									},
									{
										"cells": [
											"#activity1EventTime1",
											"n",
											"",
											"",
											"2017-10-31T12:15:00.000Z"
										]
									},
									{
										"cells": [
											"#activity1EventType2",
											"n",
											"",
											"",
											"ANSWERED"
										]
									},
									{
										"cells": [
											"#activity1EventTime2",
											"n",
											"",
											"",
											"2017-10-31T12:15:00.000Z"
										]
									},
									{
										"cells": [
											"#score",
											"n",
											"",
											"",
											"1"
										]
									},
									{
										"cells": [
											"#activity2Id",
											"n",
											"",
											"",
											"4868b82a-24a1-4e03-b45a-c11e616ad28c"
										]
									},
									{
										"cells": [
											"#activity2CardId",
											"y",
											"scenario",
											"cardId8",
											""
										]
									},
									{
										"cells": [
											"#activity2CardType",
											"n",
											"",
											"",
											"multipleChoice"
										]
									},
									{
										"cells": [
											"#activity2StartTime",
											"n",
											"",
											"",
											"2017-10-31T12:15:00.000Z"
										]
									},
									{
										"cells": [
											"#activity2EndTime",
											"n",
											"",
											"",
											"2017-10-31T12:15:00.000Z"
										]
									},
									{
										"cells": [
											"#activity2SessionId",
											"n",
											"",
											"",
											"4868b82a-24a1-4e03-b45a-c11e616ad28c"
										]
									},
									{
										"cells": [
											"#activity2EventType1",
											"n",
											"",
											"",
											"SKIPPED"
										]
									},
									{
										"cells": [
											"#activity2EventTime1",
											"n",
											"",
											"",
											"2017-10-31T12:15:00.000Z"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 72,
								"skippedReason": "",
								"messages": [
									"Text inside Specification Data Store [myDeckIdWith9Questions] is: \"5b005b4a38ade7422d7c4c11\"",
									"Text inside Scenario Data Store [cardId2] is: \"5b005b50e4b082d664a7283f\"",
									"Text inside Scenario Data Store [cardId8] is: \"5b005b63e4b082d664a72843\"",
									"The JSON request body that you are going to use for the API is:\n{\n  \"person\": \"ffffffff59db8f51e4b0c1f4de01b2e2\",\n  \"deck\": \"5b005b4a38ade7422d7c4c11\",\n  \"refreshDeck\": true,\n  \"activities\": [\n    {\n      \"activityId\": \"4868b82a-24a1-4e03-b45a-c11e616ad28c\",\n      \"cardId\": \"5b005b50e4b082d664a7283f\",\n      \"cardType\": \"Manual\",\n      \"startTime\": \"2017-10-31T12:15:00.000Z\",\n      \"endTime\": \"2017-10-31T12:15:00.000Z\",\n      \"sessionId\": \"4868b82a-24a1-4e03-b45a-c11e616ad28c\",\n      \"events\": [\n        {\n          \"eventType\": \"FAVORITE\",\n    \"eventTime\": \"2017-10-31T12:15:00.000Z\"\n        },\n        {\n          \"eventType\": \"ANSWERED\",\n    \"eventTime\": \"2017-10-31T12:15:00.000Z\",\n          \"score\": 1\n        }\n      ]\n    },\n    {\n      \"activityId\": \"4868b82a-24a1-4e03-b45a-c11e616ad28c\",\n      \"cardId\": \"5b005b63e4b082d664a72843\",\n      \"cardType\": \"multipleChoice\",\n      \"startTime\": \"2017-10-31T12:15:00.000Z\",\n      \"endTime\": \"2017-10-31T12:15:00.000Z\",\n      \"sessionId\": \"4868b82a-24a1-4e03-b45a-c11e616ad28c\",\n      \"events\": [\n        {\n          \"eventType\": \"SKIPPED\",\n    \"eventTime\": \"2017-10-31T12:15:00.000Z\"\n        }\n      ]\n    }\n  ]\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2434,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
									"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/learninganalytics/activities",
									"Response Time is: 1950ms",
									"Response is: \n{\n    \"mastery\": 0.037037,\n    \"message\": \"Number of activities processed 2\",\n    \"recommendation\": {\n        \"person\": \"ffffffff59db8f51e4b0c1f4de01b2e2\",\n        \"deck\": \"5b005b4a38ade7422d7c4c11\",\n        \"mastery\": 0.037037,\n        \"session\": {\n            \"sessionId\": \"9f257ca6-0c0a-41bb-a436-d5827bfc01fa\",\n            \"cards\": [\n                \"5b005b66e4b0f7e66de75837\",\n                \"5b005b60e4b082d664a72842\",\n                \"5b005b5ce4b0f7e66de75836\",\n                \"5b005b59e4b082d664a72841\",\n                \"5b005b56e4b082d664a72840\",\n                \"5b005b53e4b0f7e66de75835\",\n                \"5b005b4de4b0f7e66de75834\",\n                \"5b005b63e4b082d664a72843\",\n                \"5b005b50e4b082d664a7283f\"\n            ],\n            \"sessionSize\": 20\n        },\n        \"groups\": [\n            {\n                \"groupId\": 0,\n                \"groupType\": \"UNPLAYED\"\n            },\n            {\n                \"groupId\": 1,\n                \"groupType\": \"INPLAY\",\n                \"minPercent\": 0.0,\n                \"maxPercent\": 0.33333\n            },\n            {\n                \"groupId\": 2,\n                \"groupType\": \"INPLAY\",\n                \"minPercent\": 0.33333,\n                \"maxPercent\": 0.46941\n            },\n            {\n                \"groupId\": 3,\n                \"groupType\": \"INPLAY\",\n                \"minPercent\": 0.46941,\n                \"maxPercent\": 0.51941\n            },\n            {\n                \"groupId\": 4,\n                \"groupType\": \"MASTERED\"\n            }\n        ],\n        \"cards\": [\n            {\n                \"cardId\": \"5b005b56e4b082d664a72840\",\n                \"cardType\": \"\",\n                \"group\": 0,\n                \"cardTypes\": [\n                    \"\"\n                ]\n            },\n            {\n                \"cardId\": \"5b005b63e4b082d664a72843\",\n                \"cardType\": \"\",\n                \"group\": 0,\n                \"lastPlayed\": \"2017-10-31T12:15:00.000Z\",\n                \"cardTypes\": [\n                    \"\"\n                ]\n            },\n            {\n                \"cardId\": \"5b005b53e4b0f7e66de75835\",\n                \"cardType\": \"\",\n                \"group\": 0,\n                \"cardTypes\": [\n                    \"\"\n                ]\n            },\n            {\n                \"cardId\": \"5b005b4de4b0f7e66de75834\",\n                \"cardType\": \"\",\n                \"group\": 0,\n                \"cardTypes\": [\n                    \"\"\n                ]\n            },\n            {\n                \"cardId\": \"5b005b50e4b082d664a7283f\",\n                \"cardType\": \"\",\n                \"group\": 2,\n                \"lastPlayed\": \"2017-10-31T12:15:00.000Z\",\n                \"cardTypes\": [\n                    \"\"\n                ],\n                \"preferences\": [\n                    \"FAVORITE\"\n                ]\n            },\n            {\n                \"cardId\": \"5b005b66e4b0f7e66de75837\",\n                \"cardType\": \"\",\n                \"group\": 0,\n                \"cardTypes\": [\n                    \"\"\n                ]\n            },\n            {\n                \"cardId\": \"5b005b59e4b082d664a72841\",\n                \"cardType\": \"\",\n                \"group\": 0,\n                \"cardTypes\": [\n                    \"\"\n                ]\n            },\n            {\n                \"cardId\": \"5b005b60e4b082d664a72842\",\n                \"cardType\": \"\",\n                \"group\": 0,\n                \"cardTypes\": [\n                    \"\"\n                ]\n            },\n            {\n                \"cardId\": \"5b005b5ce4b0f7e66de75836\",\n                \"cardType\": \"\",\n                \"group\": 0,\n                \"cardTypes\": [\n                    \"\"\n                ]\n            }\n        ]\n    }\n}",
									"Response Headers are: \ncorrelation-id=c847adb7-1bfd-401f-8b8f-4b48653feefd\nCache-control=no-cache=\"set-cookie\"\nDate=Sat, 19 May 2018 17:14:17 GMT\nServer=Jetty(9.2.19.v20160908)\nSet-Cookie=AWSELB=4DF54FFB0E07E452CB89BC15B79A61BF95DBA515ADD249D36B0DFF707BB8BABD1C830FF5BAFB5500C1578D3769FBC6E5D23BBFEB6901DC984B2B5EED92AEA7CD92E6E33636;PATH=/;MAX-AGE=300\nVary=Accept-Encoding\nContent-Type=application/json\nContent-Length=2358"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.mastery",
											"0.037037"
										]
									},
									{
										"cells": [
											"$.message",
											"Number of activities processed 2"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 14,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 1,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		},
		{
			"specHeading": "Deck Management in Aggregation Service Specification",
			"fileName": "C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Staging BVT\\Aggregation Service\\Deck Management in Aggregation Service.spec",
			"tags": [
				"bvt",
				"deck_management",
				"aggregation_service"
			],
			"executionTime": 7620,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Create a Deck only using deck title and userId",
					"tags": [],
					"executionTime": 1880,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Create a Deck using Aggregation Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 68,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/decks"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#title",
											"API Deck3"
										]
									},
									{
										"cells": [
											"\"description\": \"#description\",",
											""
										]
									},
									{
										"cells": [
											"\"tags\": [",
											""
										]
									},
									{
										"cells": [
											"\"#tags1\"",
											""
										]
									},
									{
										"cells": [
											"\"subject\": {",
											""
										]
									},
									{
										"cells": [
											"\"id\": #subjectId,",
											""
										]
									},
									{
										"cells": [
											"\"name\": \"#subjectName\"",
											""
										]
									},
									{
										"cells": [
											"\"book\": {",
											""
										]
									},
									{
										"cells": [
											"\"bookTitle\": \"#bookTitle\",",
											""
										]
									},
									{
										"cells": [
											"\"bookAuthor\": \"#bookAuthor\",",
											""
										]
									},
									{
										"cells": [
											"\"chapter\": \"#bookChapter\"",
											""
										]
									},
									{
										"cells": [
											"\"purchaseInformation\": {",
											""
										]
									},
									{
										"cells": [
											"\"purchasedDate\": #purchasedDate,",
											""
										]
									},
									{
										"cells": [
											"\"price\": #purchaseInformationPrice,",
											""
										]
									},
									{
										"cells": [
											"\"sku\": \"#purchaseInformationsku\"",
											""
										]
									},
									{
										"cells": [
											"\"notificationSettings\": {",
											""
										]
									},
									{
										"cells": [
											"\"areNotificationsEnabled\": #areNotificationsEnabled,",
											""
										]
									},
									{
										"cells": [
											"\"notificationTime\": \"#notificationTime\",",
											""
										]
									},
									{
										"cells": [
											"\"notificationFrequency\": \"#notificationFrequency\"",
											""
										]
									},
									{
										"cells": [
											"\"examDate\": #examDate,",
											""
										]
									},
									{
										"cells": [
											"\"#userId\",",
											"\"Osanda Deshan\""
										]
									},
									{
										"cells": [
											"\"parentDeckId\": \"#parentDeckId\",",
											""
										]
									},
									{
										"cells": [
											"\"tempDeckId\": \"#tempDeckId\",",
											""
										]
									},
									{
										"cells": [
											"\"archived\": #archived,",
											""
										]
									},
									{
										"cells": [
											"\"categoryId\": \"#categoryId\",",
											""
										]
									},
									{
										"cells": [
											"\"cardPreview\": #cardPreview,",
											""
										]
									},
									{
										"cells": [
											"\"noOfCards\": #noOfCards,",
											""
										]
									},
									{
										"cells": [
											"\"progress\": #progress,",
											""
										]
									},
									{
										"cells": [
											"\"downloads\": #downloads,",
											""
										]
									},
									{
										"cells": [
											"\"deckAuthor\": \"#deckAuthorName\",",
											""
										]
									},
									{
										"cells": [
											"\"deckAuthorId\": \"#deckAuthorId\",",
											""
										]
									},
									{
										"cells": [
											"\"thumbnailUrl\": \"#thumbnailUrl\",",
											""
										]
									},
									{
										"cells": [
											"\"status\": \"#status\",",
											""
										]
									},
									{
										"cells": [
											"\"starred\": #starred",
											""
										]
									},
									{
										"cells": [
											"],",
											""
										]
									},
									{
										"cells": [
											"},",
											""
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 111,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \n  \n    \n  \n  \n    \n    \n  \n  \n    \n    \n    \n  \n  \n    \n    \n    \n  \n  \n    \n    \n    \n  \n  \n  \n  \"userId\": \"Osanda Deshan\"\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1695,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
									"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/decks",
									"Response Time is: 1453ms",
									"Response is: \n{\n    \"id\": \"5b005b6d93cee27c9a02d508\",\n    \"title\": \"API Deck3\",\n    \"book\": {\n        \n    },\n    \"purchaseInfo\": {\n        \"price\": 0\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": false\n    },\n    \"epochTime\": {\n        \"createdAt\": 1526750061209,\n        \"updatedAt\": 1526750061209\n    },\n    \"userId\": \"Osanda Deshan\",\n    \"createdAt\": \"2018-05-19T17:14:21.209Z\",\n    \"updatedAt\": \"2018-05-19T17:14:21.212Z\",\n    \"archived\": false,\n    \"cardPreview\": false,\n    \"noOfCards\": 0,\n    \"progress\": 0,\n    \"downloads\": 0,\n    \"starred\": false,\n    \"examReminder\": {\n        \n    },\n    \"expert\": false\n}",
									"Response Headers are: \ncorrelation-id=b8168e6d-daa4-4188-8d83-b0219acb742f\nX-Application-Context=application:stg:8080\nTransfer-Encoding=chunked\nDate=Sat, 19 May 2018 17:14:21 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.title",
											"API Deck3"
										]
									},
									{
										"cells": [
											"$.userId",
											"Osanda Deshan"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"spec",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"\"5b005b6d93cee27c9a02d508\" is successfully saved as a text in Specification Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Edit the previously created deck",
					"tags": [],
					"executionTime": 2025,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Edit a Deck using Aggregation Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 171,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/decks"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters using data stores as follows",
							"table": {
								"headers": [
									"Path Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"deckId",
											"y",
											"spec",
											"deckId",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"Text inside Specification Data Store [deckId] is: \"5b005b6d93cee27c9a02d508\"",
									"Path parameters which will append to the request URL:/5b005b6d93cee27c9a02d508"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#title",
											"API Deck3"
										]
									},
									{
										"cells": [
											"#description",
											"\"null\""
										]
									},
									{
										"cells": [
											"#tags1",
											"API tag1"
										]
									},
									{
										"cells": [
											"#subjectId",
											"2"
										]
									},
									{
										"cells": [
											"#subjectName",
											"API Testing3"
										]
									},
									{
										"cells": [
											"#bookTitle",
											"Automation3"
										]
									},
									{
										"cells": [
											"#bookAuthor",
											"Osanda Nimalarathna"
										]
									},
									{
										"cells": [
											"#bookChapter",
											"Chap. 04"
										]
									},
									{
										"cells": [
											"#purchasedDate",
											"1512021142001"
										]
									},
									{
										"cells": [
											"#purchaseInformationPrice",
											"777"
										]
									},
									{
										"cells": [
											"#purchaseInformationsku",
											"com.pearson.smartflashcards.test3"
										]
									},
									{
										"cells": [
											"#areNotificationsEnabled",
											"true"
										]
									},
									{
										"cells": [
											"#notificationTime",
											"08:00"
										]
									},
									{
										"cells": [
											"#notificationFrequency",
											"0"
										]
									},
									{
										"cells": [
											"#examDate",
											"1512021142000"
										]
									},
									{
										"cells": [
											"#userId",
											"34"
										]
									},
									{
										"cells": [
											"#parentDeckId",
											"5"
										]
									},
									{
										"cells": [
											"#tempDeckId",
											"999"
										]
									},
									{
										"cells": [
											"#archived",
											"false"
										]
									},
									{
										"cells": [
											"#cardPreview",
											"true"
										]
									},
									{
										"cells": [
											"#noOfCards",
											"2"
										]
									},
									{
										"cells": [
											"#progress",
											"3"
										]
									},
									{
										"cells": [
											"#downloads",
											"12"
										]
									},
									{
										"cells": [
											"#deckAuthorName",
											"Osanda"
										]
									},
									{
										"cells": [
											"#deckAuthorId",
											"6"
										]
									},
									{
										"cells": [
											"#thumbnailUrl",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#status",
											"Closed"
										]
									},
									{
										"cells": [
											"#starred",
											"true"
										]
									},
									{
										"cells": [
											"#categoryId",
											"5a5db30a12ef181b0af109ba"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 75,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": null,\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInformation\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00\",\n    \"notificationFrequency\": \"0\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": false,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1758,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
									"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/decks/5b005b6d93cee27c9a02d508",
									"Response Time is: 1486ms",
									"Response is: \n{\n    \"id\": \"5b005b6d93cee27c9a02d508\",\n    \"title\": \"API Deck3\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"price\": 0\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00\",\n        \"notificationFrequency\": \"0\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1526750061209,\n        \"updatedAt\": 1526750063464\n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-05-19T17:14:21.209Z\",\n    \"updatedAt\": \"2018-05-19T17:14:23.465Z\",\n    \"archived\": false,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"examReminder\": {\n        \"startDate\": 1510811542000,\n        \"endDate\": 1512021142000,\n        \"time\": \"08:00\"\n    },\n    \"expert\": false\n}",
									"Response Headers are: \ncorrelation-id=1cc66826-a724-45a8-9d38-54f5017447e8\nX-Application-Context=application:stg:8080\nTransfer-Encoding=chunked\nDate=Sat, 19 May 2018 17:14:23 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"200\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.title",
											"API Deck3"
										]
									},
									{
										"cells": [
											"$.tags[0]",
											"API tag1"
										]
									},
									{
										"cells": [
											"$.book.bookTitle",
											"Automation3"
										]
									},
									{
										"cells": [
											"$.book.bookAuthor",
											"Osanda Nimalarathna"
										]
									},
									{
										"cells": [
											"$.book.chapter",
											"Chap. 04"
										]
									},
									{
										"cells": [
											"$.purchaseInfo.price",
											"0"
										]
									},
									{
										"cells": [
											"$.notificationSettings.areNotificationsEnabled",
											"true"
										]
									},
									{
										"cells": [
											"$.notificationSettings.notificationTime",
											"08:00"
										]
									},
									{
										"cells": [
											"$.notificationSettings.notificationFrequency",
											"0"
										]
									},
									{
										"cells": [
											"$.examDate",
											"1512021142000"
										]
									},
									{
										"cells": [
											"$.userId",
											"34"
										]
									},
									{
										"cells": [
											"$.parentDeckId",
											"5"
										]
									},
									{
										"cells": [
											"$.tempDeckId",
											"999"
										]
									},
									{
										"cells": [
											"$.archived",
											"false"
										]
									},
									{
										"cells": [
											"$.cardPreview",
											"true"
										]
									},
									{
										"cells": [
											"$.noOfCards",
											"2"
										]
									},
									{
										"cells": [
											"$.progress",
											"3"
										]
									},
									{
										"cells": [
											"$.downloads",
											"12"
										]
									},
									{
										"cells": [
											"$.deckAuthor",
											"Osanda"
										]
									},
									{
										"cells": [
											"$.deckAuthorId",
											"6"
										]
									},
									{
										"cells": [
											"$.thumbnailUrl",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"$.status",
											"Closed"
										]
									},
									{
										"cells": [
											"$.expert",
											"false"
										]
									},
									{
										"cells": [
											"$.starred",
											"true"
										]
									},
									{
										"cells": [
											"$.categoryId",
											"5a5db30a12ef181b0af109ba"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 20,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Get the previously created deck",
					"tags": [],
					"executionTime": 1933,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get a Deck using Aggregation service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 67,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/decks"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters using data stores as follows",
							"table": {
								"headers": [
									"Path Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"deckId",
											"y",
											"spec",
											"deckId",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"Text inside Specification Data Store [deckId] is: \"5b005b6d93cee27c9a02d508\"",
									"Path parameters which will append to the request URL:/5b005b6d93cee27c9a02d508"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1854,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
									"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/decks/5b005b6d93cee27c9a02d508",
									"Response Time is: 1519ms",
									"Response is: \n{\n    \"id\": \"5b005b6d93cee27c9a02d508\",\n    \"title\": \"API Deck3\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"price\": 0\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00\",\n        \"notificationFrequency\": \"0\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1526750061209,\n        \"updatedAt\": 1526750063464\n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-05-19T17:14:21.209Z\",\n    \"updatedAt\": \"2018-05-19T17:14:23.465Z\",\n    \"archived\": false,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"examReminder\": {\n        \"startDate\": 1510811542000,\n        \"endDate\": 1512021142000,\n        \"time\": \"08:00\"\n    },\n    \"expert\": false\n}",
									"Response Headers are: \ncorrelation-id=d17ae7f3-1800-4810-8289-d0315c95c66d\nX-Application-Context=application:stg:8080\nTransfer-Encoding=chunked\nDate=Sat, 19 May 2018 17:14:25 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"200\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.title",
											"API Deck3"
										]
									},
									{
										"cells": [
											"$.tags[0]",
											"API tag1"
										]
									},
									{
										"cells": [
											"$.book.bookTitle",
											"Automation3"
										]
									},
									{
										"cells": [
											"$.book.bookAuthor",
											"Osanda Nimalarathna"
										]
									},
									{
										"cells": [
											"$.book.chapter",
											"Chap. 04"
										]
									},
									{
										"cells": [
											"$.purchaseInfo.price",
											"0"
										]
									},
									{
										"cells": [
											"$.notificationSettings.areNotificationsEnabled",
											"true"
										]
									},
									{
										"cells": [
											"$.notificationSettings.notificationTime",
											"08:00"
										]
									},
									{
										"cells": [
											"$.notificationSettings.notificationFrequency",
											"0"
										]
									},
									{
										"cells": [
											"$.examDate",
											"1512021142000"
										]
									},
									{
										"cells": [
											"$.userId",
											"34"
										]
									},
									{
										"cells": [
											"$.parentDeckId",
											"5"
										]
									},
									{
										"cells": [
											"$.tempDeckId",
											"999"
										]
									},
									{
										"cells": [
											"$.archived",
											"false"
										]
									},
									{
										"cells": [
											"$.cardPreview",
											"true"
										]
									},
									{
										"cells": [
											"$.noOfCards",
											"2"
										]
									},
									{
										"cells": [
											"$.progress",
											"3"
										]
									},
									{
										"cells": [
											"$.downloads",
											"12"
										]
									},
									{
										"cells": [
											"$.deckAuthor",
											"Osanda"
										]
									},
									{
										"cells": [
											"$.deckAuthorId",
											"6"
										]
									},
									{
										"cells": [
											"$.thumbnailUrl",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"$.status",
											"Closed"
										]
									},
									{
										"cells": [
											"$.expert",
											"false"
										]
									},
									{
										"cells": [
											"$.starred",
											"true"
										]
									},
									{
										"cells": [
											"$.categoryId",
											"5a5db30a12ef181b0af109ba"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 9,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Delete the previously created deck",
					"tags": [],
					"executionTime": 1782,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Delete a Deck using Aggregation Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 69,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/decks"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters using data stores as follows",
							"table": {
								"headers": [
									"Path Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"deckId",
											"y",
											"spec",
											"deckId",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"Text inside Specification Data Store [deckId] is: \"5b005b6d93cee27c9a02d508\"",
									"Path parameters which will append to the request URL:/5b005b6d93cee27c9a02d508"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1710,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
									"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/decks/5b005b6d93cee27c9a02d508",
									"Response Time is: 1455ms",
									"No Content Response",
									"Response Headers are: \ncorrelation-id=503dda83-5858-4a48-931c-33a20d1c2609\nX-Application-Context=application:stg:8080\nDate=Sat, 19 May 2018 17:14:27 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"204\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 4,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		},
		{
			"specHeading": "Recommendation API in Aggregation Service Specification",
			"fileName": "C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Staging BVT\\Aggregation Service\\Recommendation API in Aggregation Service.spec",
			"tags": [
				"aggregation_service",
				"recommendation",
				"ci_ready"
			],
			"executionTime": 20485,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Recommendation for the next cards using valid personId and valid deckId",
					"tags": [],
					"executionTime": 2127,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Recommendation API in Aggregation Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 64,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/learninganalytics/recommendations"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#personId",
											"personId1"
										]
									},
									{
										"cells": [
											"#deckId",
											"deckId2"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 77,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\n  \"person\": \"personId1\",\n  \"deck\": \"deckId2\"\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1959,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
									"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/learninganalytics/recommendations",
									"Response Time is: 1741ms",
									"Response is: \n{\n    \"person\": \"personId1\",\n    \"deck\": \"deckId2\",\n    \"mastery\": 0.0,\n    \"session\": {\n        \"sessionId\": \"6de2ad48-8ca5-4029-ad66-98b4194da3d0\",\n        \"cards\": [\n            \"cardId4\",\n            \"cardId3\",\n            \"cardId2\",\n            \"cardId1\"\n        ],\n        \"sessionSize\": 20\n    },\n    \"groups\": [\n        {\n            \"groupId\": 0,\n            \"groupType\": \"UNPLAYED\"\n        },\n        {\n            \"groupId\": 1,\n            \"groupType\": \"INPLAY\",\n            \"minPercent\": 0.0,\n            \"maxPercent\": 0.33333\n        },\n        {\n            \"groupId\": 2,\n            \"groupType\": \"INPLAY\",\n            \"minPercent\": 0.33333,\n            \"maxPercent\": 0.46941\n        },\n        {\n            \"groupId\": 3,\n            \"groupType\": \"INPLAY\",\n            \"minPercent\": 0.46941,\n            \"maxPercent\": 0.51941\n        },\n        {\n            \"groupId\": 4,\n            \"groupType\": \"MASTERED\"\n        }\n    ],\n    \"cards\": [\n        {\n            \"cardId\": \"cardId1\",\n            \"cardType\": \"cardType1\",\n            \"group\": 0,\n            \"cardTypes\": [\n                \"cardType1\",\n                \"cardType2\",\n                \"cardType3\"\n            ]\n        },\n        {\n            \"cardId\": \"cardId2\",\n            \"cardType\": \"cardType1\",\n            \"group\": 0,\n            \"cardTypes\": [\n                \"cardType1\",\n                \"cardType2\",\n                \"cardType3\"\n            ]\n        },\n        {\n            \"cardId\": \"cardId3\",\n            \"cardType\": \"cardType1\",\n            \"group\": 0,\n            \"cardTypes\": [\n                \"cardType1\",\n                \"cardType2\",\n                \"cardType3\"\n            ]\n        },\n        {\n            \"cardId\": \"cardId4\",\n            \"cardType\": \"cardType1\",\n            \"group\": 0,\n            \"cardTypes\": [\n                \"cardType1\",\n                \"cardType2\",\n                \"cardType3\"\n            ]\n        }\n    ]\n}",
									"Response Headers are: \ncorrelation-id=bcee2e1c-bcfe-4a6d-bae3-9bf7793a8866\nCache-control=no-cache=\"set-cookie\"\nDate=Sat, 19 May 2018 17:14:29 GMT\nServer=Jetty(9.2.19.v20160908)\nSet-Cookie=AWSELB=4DF54FFB0E07E452CB89BC15B79A61BF95DBA515ADD249D36B0DFF707BB8BABD1C830FF5BACE7D5D9B0816E941E4A7858E036469E54B0F61778A334361336E4C07739C48A1;PATH=/;MAX-AGE=300\nVary=Accept-Encoding\nContent-Type=application/json\nContent-Length=1259"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"200\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.person",
											"personId1"
										]
									},
									{
										"cells": [
											"$.deck",
											"deckId2"
										]
									},
									{
										"cells": [
											"$.session.sessionSize",
											"20"
										]
									},
									{
										"cells": [
											"$.groups[0].groupId",
											"0"
										]
									},
									{
										"cells": [
											"$.groups[0].groupType",
											"UNPLAYED"
										]
									},
									{
										"cells": [
											"$.groups[1].groupId",
											"1"
										]
									},
									{
										"cells": [
											"$.groups[1].groupType",
											"INPLAY"
										]
									},
									{
										"cells": [
											"$.groups[1].minPercent",
											"0.0"
										]
									},
									{
										"cells": [
											"$.groups[1].maxPercent",
											"0.33333"
										]
									},
									{
										"cells": [
											"$.groups[2].groupId",
											"2"
										]
									},
									{
										"cells": [
											"$.groups[2].groupType",
											"INPLAY"
										]
									},
									{
										"cells": [
											"$.groups[2].minPercent",
											"0.33333"
										]
									},
									{
										"cells": [
											"$.groups[2].maxPercent",
											"0.46941"
										]
									},
									{
										"cells": [
											"$.groups[3].groupId",
											"3"
										]
									},
									{
										"cells": [
											"$.groups[3].groupType",
											"INPLAY"
										]
									},
									{
										"cells": [
											"$.groups[3].minPercent",
											"0.46941"
										]
									},
									{
										"cells": [
											"$.groups[3].maxPercent",
											"0.51941"
										]
									},
									{
										"cells": [
											"$.groups[4].groupId",
											"4"
										]
									},
									{
										"cells": [
											"$.groups[4].groupType",
											"MASTERED"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 27,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Recommendation for the next cards using invalid personId and valid deckId",
					"tags": [],
					"executionTime": 2406,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Recommendation API in Aggregation Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 89,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/learninganalytics/recommendations"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#personId",
											"person"
										]
									},
									{
										"cells": [
											"#deckId",
											"deckId2"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 57,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\n  \"person\": \"person\",\n  \"deck\": \"deckId2\"\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2251,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
									"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/learninganalytics/recommendations",
									"Response Time is: 2002ms",
									"Response is: \n{\n    \"person\": \"person\",\n    \"deck\": \"deckId2\",\n    \"mastery\": 0.0,\n    \"session\": {\n        \"sessionId\": \"0612aaa5-e027-4fec-80f1-63b2b963d079\",\n        \"cards\": [\n            \"cardId4\",\n            \"cardId3\",\n            \"cardId2\",\n            \"cardId1\"\n        ],\n        \"sessionSize\": 20\n    },\n    \"groups\": [\n        {\n            \"groupId\": 0,\n            \"groupType\": \"UNPLAYED\"\n        },\n        {\n            \"groupId\": 1,\n            \"groupType\": \"INPLAY\",\n            \"minPercent\": 0.0,\n            \"maxPercent\": 0.33333\n        },\n        {\n            \"groupId\": 2,\n            \"groupType\": \"INPLAY\",\n            \"minPercent\": 0.33333,\n            \"maxPercent\": 0.46941\n        },\n        {\n            \"groupId\": 3,\n            \"groupType\": \"INPLAY\",\n            \"minPercent\": 0.46941,\n            \"maxPercent\": 0.51941\n        },\n        {\n            \"groupId\": 4,\n            \"groupType\": \"MASTERED\"\n        }\n    ],\n    \"cards\": [\n        {\n            \"cardId\": \"cardId1\",\n            \"cardType\": \"cardType1\",\n            \"group\": 0,\n            \"cardTypes\": [\n                \"cardType1\",\n                \"cardType2\",\n                \"cardType3\"\n            ]\n        },\n        {\n            \"cardId\": \"cardId2\",\n            \"cardType\": \"cardType1\",\n            \"group\": 0,\n            \"cardTypes\": [\n                \"cardType1\",\n                \"cardType2\",\n                \"cardType3\"\n            ]\n        },\n        {\n            \"cardId\": \"cardId3\",\n            \"cardType\": \"cardType1\",\n            \"group\": 0,\n            \"cardTypes\": [\n                \"cardType1\",\n                \"cardType2\",\n                \"cardType3\"\n            ]\n        },\n        {\n            \"cardId\": \"cardId4\",\n            \"cardType\": \"cardType1\",\n            \"group\": 0,\n            \"cardTypes\": [\n                \"cardType1\",\n                \"cardType2\",\n                \"cardType3\"\n            ]\n        }\n    ]\n}",
									"Response Headers are: \ncorrelation-id=b31e243a-84d1-4166-b088-c39b324973ea\nCache-control=no-cache=\"set-cookie\"\nDate=Sat, 19 May 2018 17:14:32 GMT\nServer=Jetty(9.2.19.v20160908)\nSet-Cookie=AWSELB=4DF54FFB0E07E452CB89BC15B79A61BF95DBA515AD052D0DAD5ABAB3411B508B11DC1B8D34CE7D5D9B0816E941E4A7858E036469E54B0F61778A334361336E4C07739C48A1;PATH=/;MAX-AGE=300\nVary=Accept-Encoding\nContent-Type=application/json\nContent-Length=1256"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"200\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.person",
											"person"
										]
									},
									{
										"cells": [
											"$.deck",
											"deckId2"
										]
									},
									{
										"cells": [
											"$.session.sessionSize",
											"20"
										]
									},
									{
										"cells": [
											"$.groups[0].groupId",
											"0"
										]
									},
									{
										"cells": [
											"$.groups[0].groupType",
											"UNPLAYED"
										]
									},
									{
										"cells": [
											"$.groups[1].groupId",
											"1"
										]
									},
									{
										"cells": [
											"$.groups[1].groupType",
											"INPLAY"
										]
									},
									{
										"cells": [
											"$.groups[1].minPercent",
											"0.0"
										]
									},
									{
										"cells": [
											"$.groups[1].maxPercent",
											"0.33333"
										]
									},
									{
										"cells": [
											"$.groups[2].groupId",
											"2"
										]
									},
									{
										"cells": [
											"$.groups[2].groupType",
											"INPLAY"
										]
									},
									{
										"cells": [
											"$.groups[2].minPercent",
											"0.33333"
										]
									},
									{
										"cells": [
											"$.groups[2].maxPercent",
											"0.46941"
										]
									},
									{
										"cells": [
											"$.groups[3].groupId",
											"3"
										]
									},
									{
										"cells": [
											"$.groups[3].groupType",
											"INPLAY"
										]
									},
									{
										"cells": [
											"$.groups[3].minPercent",
											"0.46941"
										]
									},
									{
										"cells": [
											"$.groups[3].maxPercent",
											"0.51941"
										]
									},
									{
										"cells": [
											"$.groups[4].groupId",
											"4"
										]
									},
									{
										"cells": [
											"$.groups[4].groupType",
											"MASTERED"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 9,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Recommendation for the next cards using empty personId and valid deckId",
					"tags": [],
					"executionTime": 1897,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Recommendation API in Aggregation Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 78,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/learninganalytics/recommendations"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#personId",
											""
										]
									},
									{
										"cells": [
											"#deckId",
											"deckId2"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 86,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\n  \"person\": \"\",\n  \"deck\": \"deckId2\"\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1731,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
									"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/learninganalytics/recommendations",
									"Response Time is: 1437ms",
									"Response is: \n{\n    \"code\": 400,\n    \"description\": \"person: username is required\"\n}",
									"Response Headers are: \ncorrelation-id=07868a7c-b75c-4e6a-82fb-92192a5c5c3f\nContent-Type=application/json\nContent-Length=57\nDate=Sat, 19 May 2018 17:14:34 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.code",
											"400"
										]
									},
									{
										"cells": [
											"$.description",
											"person: username is required"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Recommendation for the next cards using null personId and valid deckId",
					"tags": [],
					"executionTime": 1797,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Recommendation API in Aggregation Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 85,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/learninganalytics/recommendations"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#personId",
											"\"null\""
										]
									},
									{
										"cells": [
											"#deckId",
											"deckId2"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 76,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\n  \"person\": null,\n  \"deck\": \"deckId2\"\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1636,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
									"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/learninganalytics/recommendations",
									"Response Time is: 1449ms",
									"Response is: \n{\n    \"code\": 400,\n    \"description\": \"person: username is required\"\n}",
									"Response Headers are: \ncorrelation-id=c847adb7-1bfd-401f-8b8f-4b48653feefd\nContent-Type=application/json\nContent-Length=57\nDate=Sat, 19 May 2018 17:14:36 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.code",
											"400"
										]
									},
									{
										"cells": [
											"$.description",
											"person: username is required"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Recommendation for the next cards using valid personId and invalid deckId",
					"tags": [],
					"executionTime": 2323,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Recommendation API in Aggregation Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 102,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/learninganalytics/recommendations"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#personId",
											"personId1"
										]
									},
									{
										"cells": [
											"#deckId",
											"deckId999"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 80,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\n  \"person\": \"personId1\",\n  \"deck\": \"deckId999\"\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2140,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
									"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/learninganalytics/recommendations",
									"Response Time is: 1880ms",
									"Response is: \n{\n    \"code\": 404,\n    \"description\": \"{  \\\"status\\\" : 404,  \\\"code\\\" : 1300,  \\\"category\\\" : \\\"Validation Error\\\",  \\\"reason\\\" : \\\"Cannot find requested entity\\\",  \\\"messages\\\" : [ \\\"requested deck deckId999 not found\\\" ]}\"\n}",
									"Response Headers are: \ncorrelation-id=52157d12-3357-4018-80c9-6c2dde880634\nContent-Type=application/json\nContent-Length=213\nDate=Sat, 19 May 2018 17:14:39 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"404\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.code",
											"404"
										]
									},
									{
										"cells": [
											"$.description",
											"{  \"status\" : 404,  \"code\" : 1300,  \"category\" : \"Validation Error\",  \"reason\" : \"Cannot find requested entity\",  \"messages\" : [ \"requested deck deckId999 not found\" ]}"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Recommendation for the next cards using valid personId and non-existing deckId",
					"tags": [],
					"executionTime": 2006,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Recommendation API in Aggregation Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 70,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/learninganalytics/recommendations"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#personId",
											"personId3"
										]
									},
									{
										"cells": [
											"#deckId",
											"deckId4"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 70,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\n  \"person\": \"personId3\",\n  \"deck\": \"deckId4\"\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1865,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
									"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/learninganalytics/recommendations",
									"Response Time is: 1661ms",
									"Response is: \n{\n    \"code\": 404,\n    \"description\": \"{  \\\"status\\\" : 404,  \\\"code\\\" : 1300,  \\\"category\\\" : \\\"Validation Error\\\",  \\\"reason\\\" : \\\"Cannot find requested entity\\\",  \\\"messages\\\" : [ \\\"requested deck deckId4 not found\\\" ]}\"\n}",
									"Response Headers are: \ncorrelation-id=527d9742-43c1-4724-b47e-71b8e4fa3764\nContent-Type=application/json\nContent-Length=211\nDate=Sat, 19 May 2018 17:14:41 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"404\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.code",
											"404"
										]
									},
									{
										"cells": [
											"$.description",
											"{  \"status\" : 404,  \"code\" : 1300,  \"category\" : \"Validation Error\",  \"reason\" : \"Cannot find requested entity\",  \"messages\" : [ \"requested deck deckId4 not found\" ]}"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Recommendation for the next cards using valid personId and empty deckId",
					"tags": [],
					"executionTime": 1994,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Recommendation API in Aggregation Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 133,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/learninganalytics/recommendations"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#personId",
											"personId1"
										]
									},
									{
										"cells": [
											"#deckId",
											""
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 83,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\n  \"person\": \"personId1\",\n  \"deck\": \"\"\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1778,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
									"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/learninganalytics/recommendations",
									"Response Time is: 1532ms",
									"Response is: \n{\n    \"code\": 400,\n    \"description\": \"deck: deck id is required\"\n}",
									"Response Headers are: \ncorrelation-id=2d82c69c-5e9b-40dd-8d0c-9ed32b197b19\nContent-Type=application/json\nContent-Length=54\nDate=Sat, 19 May 2018 17:14:43 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.code",
											"400"
										]
									},
									{
										"cells": [
											"$.description",
											"deck: deck id is required"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Recommendation for the next cards using valid personId and null deckId",
					"tags": [],
					"executionTime": 1998,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Recommendation API in Aggregation Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 88,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/learninganalytics/recommendations"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#personId",
											"personId1"
										]
									},
									{
										"cells": [
											"#deckId",
											"\"null\""
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 90,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\n  \"person\": \"personId1\",\n  \"deck\": null\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1818,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
									"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/learninganalytics/recommendations",
									"Response Time is: 1508ms",
									"Response is: \n{\n    \"code\": 400,\n    \"description\": \"deck: deck id is required\"\n}",
									"Response Headers are: \ncorrelation-id=e22e2437-5900-42b4-af8f-60a271c44136\nContent-Type=application/json\nContent-Length=54\nDate=Sat, 19 May 2018 17:14:45 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.code",
											"400"
										]
									},
									{
										"cells": [
											"$.description",
											"deck: deck id is required"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Recommendation for the next cards only using valid personId",
					"tags": [],
					"executionTime": 1927,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Recommendation API in Aggregation Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 73,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/learninganalytics/recommendations"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#personId",
											"personId1"
										]
									},
									{
										"cells": [
											",",
											""
										]
									},
									{
										"cells": [
											"\"deck\": \"#deckId\"",
											""
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 104,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\n  \"person\": \"personId1\"\n  \n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1748,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
									"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/learninganalytics/recommendations",
									"Response Time is: 1479ms",
									"Response is: \n{\n    \"code\": 400,\n    \"description\": \"deck: deck id is required\"\n}",
									"Response Headers are: \ncorrelation-id=bcee2e1c-bcfe-4a6d-bae3-9bf7793a8866\nContent-Type=application/json\nContent-Length=54\nDate=Sat, 19 May 2018 17:14:46 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.code",
											"400"
										]
									},
									{
										"cells": [
											"$.description",
											"deck: deck id is required"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Recommendation for the next cards only using valid deckId",
					"tags": [],
					"executionTime": 2010,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Recommendation API in Aggregation Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 83,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://questionaggrigator.stg-prsn.com/api/learninganalytics/recommendations"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"\"person\": \"#personId\",",
											""
										]
									},
									{
										"cells": [
											"#deckId",
											"deckId2"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 73,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\n  \n  \"deck\": \"deckId2\"\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1853,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
									"Invoked API Endpoint: \nhttps://questionaggrigator.stg-prsn.com/api/learninganalytics/recommendations",
									"Response Time is: 1570ms",
									"Response is: \n{\n    \"code\": 400,\n    \"description\": \"person: username is required\"\n}",
									"Response Headers are: \ncorrelation-id=b31e243a-84d1-4166-b088-c39b324973ea\nContent-Type=application/json\nContent-Length=57\nDate=Sat, 19 May 2018 17:14:49 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"400\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.code",
											"400"
										]
									},
									{
										"cells": [
											"$.description",
											"person: username is required"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 10,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		},
		{
			"specHeading": "Deck Management in Deck Service Specification",
			"fileName": "C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Staging BVT\\Deck Service\\Deck Management in Deck Service.spec",
			"tags": [
				"bvt",
				"deck_management",
				"deck_service"
			],
			"executionTime": 7782,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Create a Deck only using deck title and userId",
					"tags": [],
					"executionTime": 2330,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Create a Deck using Deck Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 78,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://deckapi.stg-prsn.com/api/decks"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#title",
											"API Deck3"
										]
									},
									{
										"cells": [
											"\"description\": \"#description\",",
											""
										]
									},
									{
										"cells": [
											"\"tags\": [",
											""
										]
									},
									{
										"cells": [
											"\"#tags1\"",
											""
										]
									},
									{
										"cells": [
											"\"subject\": {",
											""
										]
									},
									{
										"cells": [
											"\"id\": #subjectId,",
											""
										]
									},
									{
										"cells": [
											"\"name\": \"#subjectName\"",
											""
										]
									},
									{
										"cells": [
											"\"book\": {",
											""
										]
									},
									{
										"cells": [
											"\"bookTitle\": \"#bookTitle\",",
											""
										]
									},
									{
										"cells": [
											"\"bookAuthor\": \"#bookAuthor\",",
											""
										]
									},
									{
										"cells": [
											"\"chapter\": \"#bookChapter\"",
											""
										]
									},
									{
										"cells": [
											"\"purchaseInformation\": {",
											""
										]
									},
									{
										"cells": [
											"\"purchasedDate\": #purchasedDate,",
											""
										]
									},
									{
										"cells": [
											"\"price\": #purchaseInformationPrice,",
											""
										]
									},
									{
										"cells": [
											"\"sku\": \"#purchaseInformationsku\"",
											""
										]
									},
									{
										"cells": [
											"\"notificationSettings\": {",
											""
										]
									},
									{
										"cells": [
											"\"areNotificationsEnabled\": #areNotificationsEnabled,",
											""
										]
									},
									{
										"cells": [
											"\"notificationTime\": \"#notificationTime\",",
											""
										]
									},
									{
										"cells": [
											"\"notificationFrequency\": \"#notificationFrequency\"",
											""
										]
									},
									{
										"cells": [
											"\"examDate\": #examDate,",
											""
										]
									},
									{
										"cells": [
											"\"#userId\",",
											"\"Osanda Deshan\""
										]
									},
									{
										"cells": [
											"\"parentDeckId\": \"#parentDeckId\",",
											""
										]
									},
									{
										"cells": [
											"\"tempDeckId\": \"#tempDeckId\",",
											""
										]
									},
									{
										"cells": [
											"\"archived\": #archived,",
											""
										]
									},
									{
										"cells": [
											"\"categoryId\": \"#categoryId\",",
											""
										]
									},
									{
										"cells": [
											"\"cardPreview\": #cardPreview,",
											""
										]
									},
									{
										"cells": [
											"\"noOfCards\": #noOfCards,",
											""
										]
									},
									{
										"cells": [
											"\"progress\": #progress,",
											""
										]
									},
									{
										"cells": [
											"\"downloads\": #downloads,",
											""
										]
									},
									{
										"cells": [
											"\"deckAuthor\": \"#deckAuthorName\",",
											""
										]
									},
									{
										"cells": [
											"\"deckAuthorId\": \"#deckAuthorId\",",
											""
										]
									},
									{
										"cells": [
											"\"thumbnailUrl\": \"#thumbnailUrl\",",
											""
										]
									},
									{
										"cells": [
											"\"status\": \"#status\",",
											""
										]
									},
									{
										"cells": [
											"\"starred\": #starred",
											""
										]
									},
									{
										"cells": [
											"],",
											""
										]
									},
									{
										"cells": [
											"},",
											""
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 66,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \n  \n    \n  \n  \n    \n    \n  \n  \n    \n    \n    \n  \n  \n    \n    \n    \n  \n  \n    \n    \n    \n  \n  \n  \n  \"userId\": \"Osanda Deshan\"\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2183,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
									"Invoked API Endpoint: \nhttps://deckapi.stg-prsn.com/api/decks",
									"Response Time is: 1949ms",
									"Response is: \n{\n    \"id\": \"5b005b8b38ade7422d7c4c12\",\n    \"title\": \"API Deck3\",\n    \"book\": {\n        \n    },\n    \"purchaseInfo\": {\n        \"price\": 0\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": false\n    },\n    \"epochTime\": {\n        \"createdAt\": 1526750091959,\n        \"updatedAt\": 1526750091959\n    },\n    \"examReminder\": {\n        \n    },\n    \"userId\": \"Osanda Deshan\",\n    \"createdAt\": \"2018-05-19T17:14:51.959Z\",\n    \"updatedAt\": \"2018-05-19T17:14:51.961Z\",\n    \"archived\": false,\n    \"cardPreview\": false,\n    \"noOfCards\": 0,\n    \"progress\": 0,\n    \"downloads\": 0,\n    \"starred\": false,\n    \"userDeck\": true,\n    \"expert\": false\n}",
									"Response Headers are: \nX-Application-Context=application:stg:8080\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Sat, 19 May 2018 17:14:51 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.title",
											"API Deck3"
										]
									},
									{
										"cells": [
											"$.userId",
											"Osanda Deshan"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"spec",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"\"5b005b8b38ade7422d7c4c12\" is successfully saved as a text in Specification Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Edit the previously created deck",
					"tags": [],
					"executionTime": 2019,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Edit a Deck using Deck Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 71,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://deckapi.stg-prsn.com/api/decks"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters using data stores as follows",
							"table": {
								"headers": [
									"Path Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"deckId",
											"y",
											"spec",
											"deckId",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"Text inside Specification Data Store [deckId] is: \"5b005b8b38ade7422d7c4c12\"",
									"Path parameters which will append to the request URL:/5b005b8b38ade7422d7c4c12"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#title",
											"API Deck3"
										]
									},
									{
										"cells": [
											"#description",
											"\"null\""
										]
									},
									{
										"cells": [
											"#tags1",
											"API tag1"
										]
									},
									{
										"cells": [
											"#subjectId",
											"2"
										]
									},
									{
										"cells": [
											"#subjectName",
											"API Testing3"
										]
									},
									{
										"cells": [
											"#bookTitle",
											"Automation3"
										]
									},
									{
										"cells": [
											"#bookAuthor",
											"Osanda Nimalarathna"
										]
									},
									{
										"cells": [
											"#bookChapter",
											"Chap. 04"
										]
									},
									{
										"cells": [
											"#purchasedDate",
											"1512021142001"
										]
									},
									{
										"cells": [
											"#purchaseInformationPrice",
											"777"
										]
									},
									{
										"cells": [
											"#purchaseInformationsku",
											"com.pearson.smartflashcards.test3"
										]
									},
									{
										"cells": [
											"#areNotificationsEnabled",
											"true"
										]
									},
									{
										"cells": [
											"#notificationTime",
											"08:00"
										]
									},
									{
										"cells": [
											"#notificationFrequency",
											"0"
										]
									},
									{
										"cells": [
											"#examDate",
											"1512021142000"
										]
									},
									{
										"cells": [
											"#userId",
											"34"
										]
									},
									{
										"cells": [
											"#parentDeckId",
											"5"
										]
									},
									{
										"cells": [
											"#tempDeckId",
											"999"
										]
									},
									{
										"cells": [
											"#archived",
											"true"
										]
									},
									{
										"cells": [
											"#cardPreview",
											"true"
										]
									},
									{
										"cells": [
											"#noOfCards",
											"2"
										]
									},
									{
										"cells": [
											"#progress",
											"3"
										]
									},
									{
										"cells": [
											"#downloads",
											"12"
										]
									},
									{
										"cells": [
											"#deckAuthorName",
											"Osanda"
										]
									},
									{
										"cells": [
											"#deckAuthorId",
											"6"
										]
									},
									{
										"cells": [
											"#thumbnailUrl",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"#status",
											"Closed"
										]
									},
									{
										"cells": [
											"#starred",
											"true"
										]
									},
									{
										"cells": [
											"#categoryId",
											"5a5db30a12ef181b0af109ba"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 80,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\n  \"title\": \"API Deck3\",\n  \"description\": null,\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"subject\": {\n    \"id\": 2,\n    \"name\": \"API Testing3\"\n  },\n  \"book\": {\n    \"bookTitle\": \"Automation3\",\n    \"bookAuthor\": \"Osanda Nimalarathna\",\n    \"chapter\": \"Chap. 04\"\n  },\n  \"purchaseInformation\": {\n    \"purchasedDate\": 1512021142001,\n    \"price\": 777,\n    \"sku\": \"com.pearson.smartflashcards.test3\"\n  },\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": true,\n    \"notificationTime\": \"08:00\",\n    \"notificationFrequency\": \"0\"\n  },\n  \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n  \"examDate\": 1512021142000,\n  \"userId\": \"34\",\n  \"parentDeckId\": \"5\",\n  \"tempDeckId\": \"999\",\n  \"archived\": true,\n  \"cardPreview\": true,\n  \"noOfCards\": 2,\n  \"progress\": 3,\n  \"downloads\": 12,\n  \"deckAuthor\": \"Osanda\",\n  \"deckAuthorId\": \"6\",\n  \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n  \"status\": \"Closed\",\n  \"starred\": true\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1840,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
									"Invoked API Endpoint: \nhttps://deckapi.stg-prsn.com/api/decks/5b005b8b38ade7422d7c4c12",
									"Response Time is: 1573ms",
									"Response is: \n{\n    \"id\": \"5b005b8b38ade7422d7c4c12\",\n    \"title\": \"API Deck3\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"price\": 0\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00\",\n        \"notificationFrequency\": \"0\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1526750091959,\n        \"updatedAt\": 1526750094105\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-05-19T17:14:51.959Z\",\n    \"updatedAt\": \"2018-05-19T17:14:54.107Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}",
									"Response Headers are: \nX-Application-Context=application:stg:8080\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Sat, 19 May 2018 17:14:54 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"200\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.title",
											"API Deck3"
										]
									},
									{
										"cells": [
											"$.tags[0]",
											"API tag1"
										]
									},
									{
										"cells": [
											"$.book.bookTitle",
											"Automation3"
										]
									},
									{
										"cells": [
											"$.book.bookAuthor",
											"Osanda Nimalarathna"
										]
									},
									{
										"cells": [
											"$.book.chapter",
											"Chap. 04"
										]
									},
									{
										"cells": [
											"$.purchaseInfo.price",
											"0"
										]
									},
									{
										"cells": [
											"$.notificationSettings.areNotificationsEnabled",
											"true"
										]
									},
									{
										"cells": [
											"$.notificationSettings.notificationTime",
											"08:00"
										]
									},
									{
										"cells": [
											"$.notificationSettings.notificationFrequency",
											"0"
										]
									},
									{
										"cells": [
											"$.examDate",
											"1512021142000"
										]
									},
									{
										"cells": [
											"$.userId",
											"34"
										]
									},
									{
										"cells": [
											"$.parentDeckId",
											"5"
										]
									},
									{
										"cells": [
											"$.tempDeckId",
											"999"
										]
									},
									{
										"cells": [
											"$.archived",
											"true"
										]
									},
									{
										"cells": [
											"$.cardPreview",
											"true"
										]
									},
									{
										"cells": [
											"$.noOfCards",
											"2"
										]
									},
									{
										"cells": [
											"$.progress",
											"3"
										]
									},
									{
										"cells": [
											"$.downloads",
											"12"
										]
									},
									{
										"cells": [
											"$.deckAuthor",
											"Osanda"
										]
									},
									{
										"cells": [
											"$.deckAuthorId",
											"6"
										]
									},
									{
										"cells": [
											"$.thumbnailUrl",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"$.status",
											"Closed"
										]
									},
									{
										"cells": [
											"$.expert",
											"false"
										]
									},
									{
										"cells": [
											"$.starred",
											"true"
										]
									},
									{
										"cells": [
											"$.categoryId",
											"5a5db30a12ef181b0af109ba"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 26,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Get the previously created deck",
					"tags": [],
					"executionTime": 1698,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get a Deck using Deck Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 57,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://deckapi.stg-prsn.com/api/decks"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters using data stores as follows",
							"table": {
								"headers": [
									"Path Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"deckId",
											"y",
											"spec",
											"deckId",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"Text inside Specification Data Store [deckId] is: \"5b005b8b38ade7422d7c4c12\"",
									"Path parameters which will append to the request URL:/5b005b8b38ade7422d7c4c12"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1635,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
									"Invoked API Endpoint: \nhttps://deckapi.stg-prsn.com/api/decks/5b005b8b38ade7422d7c4c12",
									"Response Time is: 1432ms",
									"Response is: \n{\n    \"id\": \"5b005b8b38ade7422d7c4c12\",\n    \"title\": \"API Deck3\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"categoryId\": \"5a5db30a12ef181b0af109ba\",\n    \"book\": {\n        \"bookTitle\": \"Automation3\",\n        \"bookAuthor\": \"Osanda Nimalarathna\",\n        \"chapter\": \"Chap. 04\"\n    },\n    \"purchaseInfo\": {\n        \"price\": 0\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": true,\n        \"notificationTime\": \"08:00\",\n        \"notificationFrequency\": \"0\"\n    },\n    \"epochTime\": {\n        \"createdAt\": 1526750091959,\n        \"updatedAt\": 1526750094105\n    },\n    \"examReminder\": {\n        \n    },\n    \"examDate\": 1512021142000,\n    \"userId\": \"34\",\n    \"parentDeckId\": \"5\",\n    \"tempDeckId\": \"999\",\n    \"createdAt\": \"2018-05-19T17:14:51.959Z\",\n    \"updatedAt\": \"2018-05-19T17:14:54.107Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 2,\n    \"progress\": 3,\n    \"downloads\": 12,\n    \"deckAuthor\": \"Osanda\",\n    \"deckAuthorId\": \"6\",\n    \"thumbnailUrl\": \"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL\",\n    \"status\": \"Closed\",\n    \"starred\": true,\n    \"userDeck\": true,\n    \"expert\": false\n}",
									"Response Headers are: \nX-Application-Context=application:stg:8080\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Sat, 19 May 2018 17:14:55 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"200\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.title",
											"API Deck3"
										]
									},
									{
										"cells": [
											"$.tags[0]",
											"API tag1"
										]
									},
									{
										"cells": [
											"$.book.bookTitle",
											"Automation3"
										]
									},
									{
										"cells": [
											"$.book.bookAuthor",
											"Osanda Nimalarathna"
										]
									},
									{
										"cells": [
											"$.book.chapter",
											"Chap. 04"
										]
									},
									{
										"cells": [
											"$.purchaseInfo.price",
											"0"
										]
									},
									{
										"cells": [
											"$.notificationSettings.areNotificationsEnabled",
											"true"
										]
									},
									{
										"cells": [
											"$.notificationSettings.notificationTime",
											"08:00"
										]
									},
									{
										"cells": [
											"$.notificationSettings.notificationFrequency",
											"0"
										]
									},
									{
										"cells": [
											"$.examDate",
											"1512021142000"
										]
									},
									{
										"cells": [
											"$.userId",
											"34"
										]
									},
									{
										"cells": [
											"$.parentDeckId",
											"5"
										]
									},
									{
										"cells": [
											"$.tempDeckId",
											"999"
										]
									},
									{
										"cells": [
											"$.archived",
											"true"
										]
									},
									{
										"cells": [
											"$.cardPreview",
											"true"
										]
									},
									{
										"cells": [
											"$.noOfCards",
											"2"
										]
									},
									{
										"cells": [
											"$.progress",
											"3"
										]
									},
									{
										"cells": [
											"$.downloads",
											"12"
										]
									},
									{
										"cells": [
											"$.deckAuthor",
											"Osanda"
										]
									},
									{
										"cells": [
											"$.deckAuthorId",
											"6"
										]
									},
									{
										"cells": [
											"$.thumbnailUrl",
											"https://documentservice-qa.stg-prsn.com/api/v1/documents/5a154f35d5b71d1a8a54dd58/download/public?format=ORIGINAL"
										]
									},
									{
										"cells": [
											"$.status",
											"Closed"
										]
									},
									{
										"cells": [
											"$.expert",
											"false"
										]
									},
									{
										"cells": [
											"$.starred",
											"true"
										]
									},
									{
										"cells": [
											"$.categoryId",
											"5a5db30a12ef181b0af109ba"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Delete the previously careated deck",
					"tags": [],
					"executionTime": 1735,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Delete a Deck using Deck Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 125,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://deckapi.stg-prsn.com/api/decks"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters using data stores as follows",
							"table": {
								"headers": [
									"Path Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"deckId",
											"y",
											"spec",
											"deckId",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"Text inside Specification Data Store [deckId] is: \"5b005b8b38ade7422d7c4c12\"",
									"Path parameters which will append to the request URL:/5b005b8b38ade7422d7c4c12"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1609,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
									"Invoked API Endpoint: \nhttps://deckapi.stg-prsn.com/api/decks/5b005b8b38ade7422d7c4c12",
									"Response Time is: 1448ms",
									"No Content Response",
									"Response Headers are: \nX-Application-Context=application:stg:8080\nDate=Sat, 19 May 2018 17:14:58 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"204\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 4,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		},
		{
			"specHeading": "Expert Deck Management in Expert Deck Service Specification",
			"fileName": "C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Staging BVT\\Expert Deck Service\\Expert Deck Management in Expert Deck Service.spec",
			"tags": [
				"bvt",
				"expert_deck_management",
				"expert_deck_service"
			],
			"executionTime": 7429,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Create an Expert Deck using all the attributes in the contract",
					"tags": [],
					"executionTime": 1845,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 5,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Create An Expert Deck using Expert Deck Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 53,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://deckapi.stg-prsn.com/api/store"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#isArchived",
											"true"
										]
									},
									{
										"cells": [
											"#bookAuthorName",
											"Osanda Deshan"
										]
									},
									{
										"cells": [
											"#bookTitle",
											"API Deck3"
										]
									},
									{
										"cells": [
											"#tags",
											"API tag1"
										]
									},
									{
										"cells": [
											"#time",
											"08:00 AM"
										]
									},
									{
										"cells": [
											"#chapter",
											"Ch. 02"
										]
									},
									{
										"cells": [
											"#subjectId",
											"21312wrwe23423df"
										]
									},
									{
										"cells": [
											"#cardPreview",
											"true"
										]
									},
									{
										"cells": [
											"#categoryId",
											"345345345345"
										]
									},
									{
										"cells": [
											"#deckAuthorName",
											"Osanda Nimalarathna"
										]
									},
									{
										"cells": [
											"#deckAuthorId",
											"234325345345"
										]
									},
									{
										"cells": [
											"#description",
											"Deck has been created via an automated script"
										]
									},
									{
										"cells": [
											"#downloads",
											"328"
										]
									},
									{
										"cells": [
											"#examDate",
											"2018-01-19T07:10:20.943Z"
										]
									},
									{
										"cells": [
											"#keywords",
											"API"
										]
									},
									{
										"cells": [
											"#noOfCards",
											"12"
										]
									},
									{
										"cells": [
											"#areNotificationsEnabled",
											"false"
										]
									},
									{
										"cells": [
											"#notificationFrequency",
											"3 times a day"
										]
									},
									{
										"cells": [
											"#notificationTime",
											"09.30 AM"
										]
									},
									{
										"cells": [
											"#parentDeckId",
											"13123123dsfsd231"
										]
									},
									{
										"cells": [
											"#progress",
											"45"
										]
									},
									{
										"cells": [
											"#price",
											"99"
										]
									},
									{
										"cells": [
											"#purchasedDate",
											"2018-01-19T07:10:20.943Z"
										]
									},
									{
										"cells": [
											"#sku",
											"test.purchase1"
										]
									},
									{
										"cells": [
											"#starred",
											"false"
										]
									},
									{
										"cells": [
											"#status",
											"In Progress"
										]
									},
									{
										"cells": [
											"#tags1",
											"API tag"
										]
									},
									{
										"cells": [
											"#tempDeckId",
											"3242dfs435fdgdfg34"
										]
									},
									{
										"cells": [
											"#thumbnailUrl",
											"http://somehost/someimg.jpg"
										]
									},
									{
										"cells": [
											"#title",
											"API Automation using MaxSoft ATA Framework"
										]
									},
									{
										"cells": [
											"#userId",
											"osan"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 60,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\n  \"archived\": true,\n  \"book\": {\n    \"bookAuthor\": \"Osanda Deshan\",\n    \"bookTitle\": \"API Deck3\",\n    \"chapter\": \"Ch. 02\"\n  },\n  \"cardPreview\": true,\n  \"categoryId\": \"345345345345\",\n  \"deckAuthor\": \"Osanda Nimalarathna\",\n  \"deckAuthorId\": \"234325345345\",\n  \"description\": \"Deck has been created via an automated script\",\n  \"downloads\": 328,\n  \"epochTime\": {\n    \"createdAt\": \"\",\n    \"updatedAt\": \"\"\n  },\n  \"examDate\": \"2018-01-19T07:10:20.943Z\",\n  \"examReminder\": {\n    \"endDate\": \"2018-01-30T04:03:33.042Z\",\n    \"startDate\": \"2018-01-30T04:03:33.042Z\",\n    \"time\": \"08:00 AM\"\n  },\n  \"expert\": true,\n  \"expertDeck\": true,\n  \"keywords\": [\n    \"API\"\n  ],\n  \"noOfCards\": 12,\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": false,\n    \"notificationFrequency\": \"3 times a day\",\n    \"notificationTime\": \"09.30 AM\"\n  },\n  \"parentDeckId\": \"13123123dsfsd231\",\n  \"progress\": 45,\n  \"purchaseInfo\": {\n    \"price\": 99,\n    \"purchasedDate\": \"2018-01-30T04:03:33.042Z\",\n    \"sku\": \"test.purchase1\"\n  },\n  \"starred\": false,\n  \"status\": \"In Progress\",\n  \"subjectId\": \"21312wrwe23423df\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"tempDeckId\": \"3242dfs435fdgdfg34\",\n  \"thumbnailUrl\": \"http://somehost/someimg.jpg\",\n  \"title\": \"API Automation using MaxSoft ATA Framework\",\n  \"updatedAt\": \"2018-01-30T04:03:33.042Z\",\n  \"userId\": \"osan\"\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1726,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
									"Invoked API Endpoint: \nhttps://deckapi.stg-prsn.com/api/store",
									"Response Time is: 1513ms",
									"Response is: \n{\n    \"id\": \"5b005b9438ade7422d7c4c13\",\n    \"title\": \"API Automation using MaxSoft ATA Framework\",\n    \"description\": \"Deck has been created via an automated script\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"keywords\": [\n        \"API\"\n    ],\n    \"subjectId\": \"21312wrwe23423df\",\n    \"categoryId\": \"345345345345\",\n    \"book\": {\n        \"bookTitle\": \"API Deck3\",\n        \"bookAuthor\": \"Osanda Deshan\",\n        \"chapter\": \"Ch. 02\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1517285013042,\n        \"price\": 99,\n        \"sku\": \"test.purchase1\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": false,\n        \"notificationTime\": \"09.30 AM\",\n        \"notificationFrequency\": \"3 times a day\"\n    },\n    \"epochTime\": {\n        \"createdAt\": null,\n        \"updatedAt\": null\n    },\n    \"examReminder\": {\n        \"startDate\": 1517285013042,\n        \"endDate\": 1517285013042,\n        \"time\": \"08:00 AM\"\n    },\n    \"examDate\": 1516345820943,\n    \"userId\": \"osan\",\n    \"parentDeckId\": \"13123123dsfsd231\",\n    \"tempDeckId\": \"3242dfs435fdgdfg34\",\n    \"createdAt\": \"2018-05-19T17:15:00.320Z\",\n    \"updatedAt\": \"2018-05-19T17:15:00.320Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 12,\n    \"progress\": 45,\n    \"downloads\": 328,\n    \"deckAuthor\": \"Osanda Nimalarathna\",\n    \"deckAuthorId\": \"234325345345\",\n    \"thumbnailUrl\": \"http://somehost/someimg.jpg\",\n    \"status\": \"In Progress\",\n    \"starred\": false,\n    \"expertDeck\": true,\n    \"expert\": true\n}",
									"Response Headers are: \nX-Application-Context=application:stg:8080\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Sat, 19 May 2018 17:15:00 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.title",
											"API Automation using MaxSoft ATA Framework"
										]
									},
									{
										"cells": [
											"$.userId",
											"osan"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values in the response inside the data stores",
							"table": {
								"headers": [
									"DataStore Type",
									"Variable Name",
									"Value To Be Stored"
								],
								"rows": [
									{
										"cells": [
											"spec",
											"deckId",
											"$.id"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"\"5b005b9438ade7422d7c4c13\" is successfully saved as a text in Specification Data Store [deckId]"
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Edit the previously created deck",
					"tags": [],
					"executionTime": 1942,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Edit An Expert Deck using Expert Deck Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 58,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://deckapi.stg-prsn.com/api/store"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters using data stores as follows",
							"table": {
								"headers": [
									"Path Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"deckId",
											"y",
											"spec",
											"deckId",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [
									"Text inside Specification Data Store [deckId] is: \"5b005b9438ade7422d7c4c13\"",
									"Path parameters which will append to the request URL:/5b005b9438ade7422d7c4c13"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request attributes as follows",
							"table": {
								"headers": [
									"Attribute Value In JSON Template",
									"Attribute Value To Be Set"
								],
								"rows": [
									{
										"cells": [
											"#isArchived",
											"true"
										]
									},
									{
										"cells": [
											"#bookAuthorName",
											"Osanda Deshan"
										]
									},
									{
										"cells": [
											"#bookTitle",
											"API Deck3"
										]
									},
									{
										"cells": [
											"#tags",
											"API tag1"
										]
									},
									{
										"cells": [
											"#time",
											"08:00 AM"
										]
									},
									{
										"cells": [
											"#chapter",
											"Ch. 02"
										]
									},
									{
										"cells": [
											"#subjectId",
											"21312wrwe23423df"
										]
									},
									{
										"cells": [
											"#chapter",
											"Ch. 02"
										]
									},
									{
										"cells": [
											"#cardPreview",
											"true"
										]
									},
									{
										"cells": [
											"#categoryId",
											"345345345345"
										]
									},
									{
										"cells": [
											"#deckAuthorName",
											"Osanda Nimalarathna"
										]
									},
									{
										"cells": [
											"#deckAuthorId",
											"234325345345"
										]
									},
									{
										"cells": [
											"#description",
											"Deck has been created via an automated script"
										]
									},
									{
										"cells": [
											"#downloads",
											"328"
										]
									},
									{
										"cells": [
											"#examDate",
											"2018-01-19T07:10:20.943Z"
										]
									},
									{
										"cells": [
											"#keywords",
											"API"
										]
									},
									{
										"cells": [
											"#noOfCards",
											"12"
										]
									},
									{
										"cells": [
											"#areNotificationsEnabled",
											"false"
										]
									},
									{
										"cells": [
											"#notificationFrequency",
											"3 times a day"
										]
									},
									{
										"cells": [
											"#notificationTime",
											"09.30 AM"
										]
									},
									{
										"cells": [
											"#parentDeckId",
											"13123123dsfsd231"
										]
									},
									{
										"cells": [
											"#progress",
											"45"
										]
									},
									{
										"cells": [
											"#price",
											"99"
										]
									},
									{
										"cells": [
											"#purchasedDate",
											"2018-01-19T07:10:20.943Z"
										]
									},
									{
										"cells": [
											"#sku",
											"test.purchase1"
										]
									},
									{
										"cells": [
											"#starred",
											"false"
										]
									},
									{
										"cells": [
											"#status",
											"In Progress"
										]
									},
									{
										"cells": [
											"#tags1",
											"API tag"
										]
									},
									{
										"cells": [
											"#tempDeckId",
											"3242dfs435fdgdfg34"
										]
									},
									{
										"cells": [
											"#thumbnailUrl",
											"http://somehost/someimg.jpg"
										]
									},
									{
										"cells": [
											"#title",
											"API Automation using MaxSoft ATA Framework"
										]
									},
									{
										"cells": [
											"#userId",
											"osan"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 58,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\n  \"archived\": true,\n  \"book\": {\n    \"bookAuthor\": \"Osanda Deshan\",\n    \"bookTitle\": \"API Deck3\",\n    \"chapter\": \"Ch. 02\"\n  },\n  \"cardPreview\": true,\n  \"categoryId\": \"345345345345\",\n  \"createdAt\": \"#createdAt\",\n  \"deckAuthor\": \"Osanda Nimalarathna\",\n  \"deckAuthorId\": \"234325345345\",\n  \"description\": \"Deck has been created via an automated script\",\n  \"downloads\": 328,\n  \"epochTime\": {\n    \"createdAt\": \"\",\n    \"updatedAt\": \"\"\n  },\n  \"examDate\": \"2018-01-30T04:03:33.042Z\",\n  \"examReminder\": {\n    \"endDate\": \"2018-01-30T04:03:33.042Z\",\n    \"startDate\": \"2018-01-30T04:03:33.042Z\",\n    \"time\": \"08:00 AM\"\n  },\n  \"expert\": true,\n  \"expertDeck\": true,\n  \"id\": \"#id\",\n  \"keywords\": [\n    \"API\"\n  ],\n  \"noOfCards\": 12,\n  \"notificationSettings\": {\n    \"areNotificationsEnabled\": false,\n    \"notificationFrequency\": \"3 times a day\",\n    \"notificationTime\": \"09.30 AM\"\n  },\n  \"parentDeckId\": \"13123123dsfsd231\",\n  \"progress\": 45,\n  \"purchaseInfo\": {\n    \"price\": 99,\n    \"purchasedDate\": \"2018-01-30T04:03:33.042Z\",\n    \"sku\": \"test.purchase1\"\n  },\n  \"starred\": false,\n  \"status\": \"In Progress\",\n  \"subjectId\": \"21312wrwe23423df\",\n  \"tags\": [\n    \"API tag1\"\n  ],\n  \"tempDeckId\": \"3242dfs435fdgdfg34\",\n  \"thumbnailUrl\": \"http://somehost/someimg.jpg\",\n  \"title\": \"API Automation using MaxSoft ATA Framework\",\n  \"updatedAt\": \"2018-01-30T04:03:33.042Z\",\n  \"userId\": \"osan\"\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1823,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
									"Invoked API Endpoint: \nhttps://deckapi.stg-prsn.com/api/store/5b005b9438ade7422d7c4c13",
									"Response Time is: 1627ms",
									"Response is: \n{\n    \"id\": \"5b005b9438ade7422d7c4c13\",\n    \"title\": \"API Automation using MaxSoft ATA Framework\",\n    \"description\": \"Deck has been created via an automated script\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"keywords\": [\n        \"API\"\n    ],\n    \"subjectId\": \"21312wrwe23423df\",\n    \"categoryId\": \"345345345345\",\n    \"book\": {\n        \"bookTitle\": \"API Deck3\",\n        \"bookAuthor\": \"Osanda Deshan\",\n        \"chapter\": \"Ch. 02\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1517285013042,\n        \"price\": 99,\n        \"sku\": \"test.purchase1\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": false,\n        \"notificationTime\": \"09.30 AM\",\n        \"notificationFrequency\": \"3 times a day\"\n    },\n    \"epochTime\": {\n        \"createdAt\": null,\n        \"updatedAt\": null\n    },\n    \"examReminder\": {\n        \"startDate\": 1517285013042,\n        \"endDate\": 1517285013042,\n        \"time\": \"08:00 AM\"\n    },\n    \"examDate\": 1517285013042,\n    \"userId\": \"osan\",\n    \"parentDeckId\": \"13123123dsfsd231\",\n    \"tempDeckId\": \"3242dfs435fdgdfg34\",\n    \"createdAt\": \"2018-05-19T17:15:00.320Z\",\n    \"updatedAt\": \"2018-05-19T17:15:02.468Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 12,\n    \"progress\": 45,\n    \"downloads\": 328,\n    \"deckAuthor\": \"Osanda Nimalarathna\",\n    \"deckAuthorId\": \"234325345345\",\n    \"thumbnailUrl\": \"http://somehost/someimg.jpg\",\n    \"status\": \"In Progress\",\n    \"starred\": false,\n    \"expertDeck\": true,\n    \"expert\": true\n}",
									"Response Headers are: \nX-Application-Context=application:stg:8080\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Sat, 19 May 2018 17:15:02 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"200\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.title",
											"API Automation using MaxSoft ATA Framework"
										]
									},
									{
										"cells": [
											"$.userId",
											"osan"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Get the previously created deck",
					"tags": [],
					"executionTime": 1746,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Search Expert Decks using Expert Deck Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 49,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://deckapi.stg-prsn.com/api/store"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters using data stores as follows",
							"table": {
								"headers": [
									"Path Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"deckId",
											"y",
											"spec",
											"deckId",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"Text inside Specification Data Store [deckId] is: \"5b005b9438ade7422d7c4c13\"",
									"Path parameters which will append to the request URL:/5b005b9438ade7422d7c4c13"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1684,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
									"Invoked API Endpoint: \nhttps://deckapi.stg-prsn.com/api/store/5b005b9438ade7422d7c4c13",
									"Response Time is: 1467ms",
									"Response is: \n{\n    \"id\": \"5b005b9438ade7422d7c4c13\",\n    \"title\": \"API Automation using MaxSoft ATA Framework\",\n    \"description\": \"Deck has been created via an automated script\",\n    \"tags\": [\n        \"API tag1\"\n    ],\n    \"keywords\": [\n        \"API\"\n    ],\n    \"subjectId\": \"21312wrwe23423df\",\n    \"categoryId\": \"345345345345\",\n    \"book\": {\n        \"bookTitle\": \"API Deck3\",\n        \"bookAuthor\": \"Osanda Deshan\",\n        \"chapter\": \"Ch. 02\"\n    },\n    \"purchaseInfo\": {\n        \"purchasedDate\": 1517285013042,\n        \"price\": 99,\n        \"sku\": \"test.purchase1\"\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": false,\n        \"notificationTime\": \"09.30 AM\",\n        \"notificationFrequency\": \"3 times a day\"\n    },\n    \"epochTime\": {\n        \"createdAt\": null,\n        \"updatedAt\": null\n    },\n    \"examReminder\": {\n        \"startDate\": 1517285013042,\n        \"endDate\": 1517285013042,\n        \"time\": \"08:00 AM\"\n    },\n    \"examDate\": 1517285013042,\n    \"userId\": \"osan\",\n    \"parentDeckId\": \"13123123dsfsd231\",\n    \"tempDeckId\": \"3242dfs435fdgdfg34\",\n    \"createdAt\": \"2018-05-19T17:15:00.320Z\",\n    \"updatedAt\": \"2018-05-19T17:15:02.468Z\",\n    \"archived\": true,\n    \"cardPreview\": true,\n    \"noOfCards\": 12,\n    \"progress\": 45,\n    \"downloads\": 328,\n    \"deckAuthor\": \"Osanda Nimalarathna\",\n    \"deckAuthorId\": \"234325345345\",\n    \"thumbnailUrl\": \"http://somehost/someimg.jpg\",\n    \"status\": \"In Progress\",\n    \"starred\": false,\n    \"expertDeck\": true,\n    \"expert\": true\n}",
									"Response Headers are: \nX-Application-Context=application:stg:8080\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nDate=Sat, 19 May 2018 17:15:04 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"200\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Value"
								],
								"rows": [
									{
										"cells": [
											"$.title",
											"API Automation using MaxSoft ATA Framework"
										]
									},
									{
										"cells": [
											"$.tags[0]",
											"API tag1"
										]
									},
									{
										"cells": [
											"$.book.bookTitle",
											"API Deck3"
										]
									},
									{
										"cells": [
											"$.book.bookAuthor",
											"Osanda Deshan"
										]
									},
									{
										"cells": [
											"$.book.chapter",
											"Ch. 02"
										]
									},
									{
										"cells": [
											"$.purchaseInfo.price",
											"99"
										]
									},
									{
										"cells": [
											"$.notificationSettings.areNotificationsEnabled",
											"false"
										]
									},
									{
										"cells": [
											"$.notificationSettings.notificationTime",
											"09.30 AM"
										]
									},
									{
										"cells": [
											"$.notificationSettings.notificationFrequency",
											"3 times a day"
										]
									},
									{
										"cells": [
											"$.examDate",
											"1517285013042"
										]
									},
									{
										"cells": [
											"$.userId",
											"osan"
										]
									},
									{
										"cells": [
											"$.parentDeckId",
											"13123123dsfsd231"
										]
									},
									{
										"cells": [
											"$.tempDeckId",
											"3242dfs435fdgdfg34"
										]
									},
									{
										"cells": [
											"$.archived",
											"true"
										]
									},
									{
										"cells": [
											"$.cardPreview",
											"true"
										]
									},
									{
										"cells": [
											"$.noOfCards",
											"12"
										]
									},
									{
										"cells": [
											"$.progress",
											"45"
										]
									},
									{
										"cells": [
											"$.downloads",
											"328"
										]
									},
									{
										"cells": [
											"$.deckAuthor",
											"Osanda Nimalarathna"
										]
									},
									{
										"cells": [
											"$.deckAuthorId",
											"234325345345"
										]
									},
									{
										"cells": [
											"$.thumbnailUrl",
											"http://somehost/someimg.jpg"
										]
									},
									{
										"cells": [
											"$.status",
											"In Progress"
										]
									},
									{
										"cells": [
											"$.expert",
											"true"
										]
									},
									{
										"cells": [
											"$.starred",
											"false"
										]
									},
									{
										"cells": [
											"$.categoryId",
											"345345345345"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 12,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				},
				{
					"scenarioHeading": "Delete the previously created deck",
					"tags": [],
					"executionTime": 1896,
					"executionStatus": "pass",
					"contexts": [
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Delete Expert Deck by ID using Expert Deck Service\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 74,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://deckapi.stg-prsn.com/api/store"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the path parameters using data stores as follows",
							"table": {
								"headers": [
									"Path Name",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Path Value"
								],
								"rows": [
									{
										"cells": [
											"deckId",
											"y",
											"spec",
											"deckId",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [
									"Text inside Specification Data Store [deckId] is: \"5b005b9438ade7422d7c4c13\"",
									"Path parameters which will append to the request URL:/5b005b9438ade7422d7c4c13"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1821,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\UnimaOs\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"",
									"Invoked API Endpoint: \nhttps://deckapi.stg-prsn.com/api/store/5b005b9438ade7422d7c4c13",
									"Response Time is: 1545ms",
									"No Content Response",
									"Response Headers are: \nX-Application-Context=application:stg:8080\nDate=Sat, 19 May 2018 17:15:06 GMT"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"204\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 4,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		}
	],
	"beforeSuiteHookFailure": null,
	"afterSuiteHookFailure": null,
	"passedSpecsCount": 6,
	"failedSpecsCount": 0,
	"skippedSpecsCount": 0
}