{
	"projectName": "MaxSoft-IntelliAPI",
	"timestamp": "May 2, 2019 at 9:57am",
	"successRate": 100,
	"environment": "default,dev",
	"tags": "",
	"executionTime": 17760,
	"executionStatus": "pass",
	"specResults": [
		{
			"specHeading": "Save Auth Token To A Text File Specification",
			"fileName": "C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Pre Test\\Save Auth Token To A Text File.spec",
			"tags": [],
			"executionTime": 4629,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Invoke Auth API using valid username and password using payload text file and save the token in a text file",
					"tags": [
						"get_auth_token"
					],
					"executionTime": 4629,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get Auth Token\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1176,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request payload as follows \u003cfile:/resources/payloads/login.txt\u003e",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 68,
								"skippedReason": "",
								"messages": [
									"The JSON request body that you are going to use for the API is:\n{\r\n \"userName\": \"osanda12\",\r\n \"password\": \"Password1\"\r\n}"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 3280,
								"skippedReason": "",
								"messages": [
									"Invoked API Endpoint: \nhttps://int-piapi-internal.stg-openclass.com/tokens\n\n",
									"HTTP Method is: POST\n\n",
									"Response Time is: 2722ms\n\n",
									"Response is: \n{\n    \"status\": \"success\",\n    \"data\": \"eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NzgyMDMzLCJpYXQiOjE1NTY3NzEyMzIsInNlc3NpZCI6ImJmMTU2MjNmLTZiZWYtNDlkYy1iNzA3LTQ5NTY1ZGM0ZTY1ZSJ9.AuR1qv-l5T3JOTmHPG6ZDzPhc7Uwl5FJ1WUG8E5sPZ3IqARZjdn5kEWLxEKRjWhtGGsIeTeRdyuaIm_BdnUvWjRQ4wMcOMhs6kzFn-LjljgKof_1lFEa8bZG5GoI4-HNNxNsrMa4OOBjrBw4G98x_r5cM1LZYYkYwAMRsnfsLNM\"\n}\n\n",
									"Response Headers are: \nDate=Thu, 02 May 2019 04:27:12 GMT\nContent-Type=application/json;charset=UTF-8\nTransfer-Encoding=chunked\nConnection=keep-alive\nSet-Cookie=AWSALB=xgldJVmKUz8fq2bx1DvDMGv7caE8Dp5jBVp2u0HJXWVjfAoBeTwpb/eZwLPCM3dDyXpeQX0HRhJNTMGcxW21RqGxaDWNVyzAw2uOpkSGDD+Jq0vLnsxcAHMIEGTZ; Expires=Thu, 09 May 2019 04:27:12 GMT; Path=/\nServer=nginx/1.15.7\nCorrelation-Id=351329d4-6a07-430e-bfdf-172acba332db\nLocation=https://int-piapi-internal.stg-openclass.com/tokens/eyJraWQiOiJrMTA2OTQ4MTkwIiwiYWxnIjoiUlM1MTIifQ.eyJzdWIiOiJmZmZmZmZmZjU5ZTg4NmI0ZTRiMDFjZWQyODNmMDY1NSIsImhjYyI6IkxLIiwidHlwZSI6ImF0IiwiZXhwIjoxNTU2NzgyMDMzLCJpYXQiOjE1NTY3NzEyMzIsInNlc3NpZCI6ImJmMTU2MjNmLTZiZWYtNDlkYy1iNzA3LTQ5NTY1ZGM0ZTY1ZSJ9.AuR1qv-l5T3JOTmHPG6ZDzPhc7Uwl5FJ1WUG8E5sPZ3IqARZjdn5kEWLxEKRjWhtGGsIeTeRdyuaIm_BdnUvWjRQ4wMcOMhs6kzFn-LjljgKof_1lFEa8bZG5GoI4-HNNxNsrMa4OOBjrBw4G98x_r5cM1LZYYkYwAMRsnfsLNM"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"201\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 2,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Assertions for the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"Expected Result"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"success"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 83,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the JSON Path Existence in the response should be equal to the following",
							"table": {
								"headers": [
									"JSON Path",
									"isExists"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"true"
										]
									},
									{
										"cells": [
											"$.osa",
											"false"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 1,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the access token in the response which is located inside the JSON Path of \"$.data\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 6,
								"skippedReason": "",
								"messages": [
									"Successfully saved the access token into the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\""
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Path values of the response into text files",
							"table": {
								"headers": [
									"JSON Path",
									"Text File Path"
								],
								"rows": [
									{
										"cells": [
											"$.status",
											"/resources/text_files/response_data/status.txt"
										]
									},
									{
										"cells": [
											"$.data",
											"/resources/text_files/response_data/token.txt"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 13,
								"skippedReason": "",
								"messages": [
									"Successfully saved the value inside \"$.status\" into the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI/resources/text_files/response_data/status.txt\"",
									"Successfully saved the value inside \"$.data\" into the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI/resources/text_files/response_data/token.txt\""
								],
								"errorType": "assertion"
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 1,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		},
		{
			"specHeading": "Write to CSV Specification",
			"fileName": "C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\specs\\Pre Test\\Write to CSV.spec",
			"tags": [],
			"executionTime": 9711,
			"executionStatus": "pass",
			"scenarios": [
				{
					"scenarioHeading": "Get all questions of a deck using a valid deckId",
					"tags": [],
					"executionTime": 9711,
					"executionStatus": "pass",
					"contexts": [],
					"teardowns": [],
					"items": [
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Add 4 questions into a deck by deckId saved in \u003cdataStoreType\u003e type data store named \u003cdataStoreVariableName\u003e",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 8099,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "concept",
									"conceptStep": {
										"itemType": "step",
										"stepText": "Create a deck",
										"table": null,
										"beforeStepHookFailure": null,
										"afterStepHookFailure": null,
										"result": {
											"status": "pass",
											"stackTrace": "",
											"screenshot": "",
											"errorMessage": "",
											"executionTime": 2236,
											"skippedReason": "",
											"messages": [],
											"errorType": "assertion"
										}
									},
									"items": [
										{
											"itemType": "step",
											"stepText": "Given that a user needs to invoke \"Create Deck\"",
											"table": null,
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 110,
												"skippedReason": "",
												"messages": [
													"API Endpoint is: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/decks\n\n",
													"HTTP Method is: POST\n\n"
												],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "And the user saves test data inside excel file into data stores",
											"table": {
												"headers": [
													"DataStore Type",
													"Variable Name",
													"Excel Sheet Name",
													"Key Name"
												],
												"rows": [
													{
														"cells": [
															"Scenario",
															"varUserId",
															"Deck_Test_Data",
															"userId"
														]
													},
													{
														"cells": [
															"Scenario",
															"varDeckTitle",
															"Deck_Test_Data",
															"deckTitle"
														]
													}
												]
											},
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 60,
												"skippedReason": "",
												"messages": [
													"\"ffffffff5badc1cdbe64ee171a740bed\" is successfully saved as a text in Scenario Data Store [varUserId]",
													"\"Trigonometry Ch.1\" is successfully saved as a text in Scenario Data Store [varDeckTitle]"
												],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "And the user set the request attributes using data stores as follows",
											"table": {
												"headers": [
													"Attribute Value In JSON Template",
													"Is Data Store Used?",
													"Data Store Type",
													"Data Store Variable Name",
													"Attibute Value To Be Set"
												],
												"rows": [
													{
														"cells": [
															"#deckTitle",
															"yes",
															"Scenario",
															"varDeckTitle",
															""
														]
													},
													{
														"cells": [
															"#userId",
															"yes",
															"Scenario",
															"varUserId",
															""
														]
													}
												]
											},
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 49,
												"skippedReason": "",
												"messages": [
													"Text inside Scenario Data Store [varDeckTitle] is: \"Trigonometry Ch.1\"\n\n",
													"Text inside Scenario Data Store [varUserId] is: \"ffffffff5badc1cdbe64ee171a740bed\"\n\n",
													"The JSON request body that you are going to use for the API is:\n{\n        \"title\": \"Trigonometry Ch.1\",\n        \"userId\": \"ffffffff5badc1cdbe64ee171a740bed\"\n}"
												],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "And the user set the request authentication configurations as follows",
											"table": {
												"headers": [
													"Configuration",
													"Configuration Value"
												],
												"rows": [
													{
														"cells": [
															"Is authentication required?",
															"Yes"
														]
													},
													{
														"cells": [
															"Do you need to retrieve the access token from the text file?",
															"Yes"
														]
													},
													{
														"cells": [
															"Provide the access token if you need to authorize the API manually",
															"N/A"
														]
													}
												]
											},
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 0,
												"skippedReason": "",
												"messages": [],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "When the user invokes the API",
											"table": null,
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 2014,
												"skippedReason": "",
												"messages": [
													"Successfully read the access token from the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
													"Invoked API Endpoint: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/decks\n\n",
													"HTTP Method is: POST\n\n",
													"Response Time is: 1770ms\n\n",
													"Response is: \n{\n    \"id\": \"5cca71a3a452d60010df7725\",\n    \"title\": \"Trigonometry Ch.1\",\n    \"book\": {\n        \n    },\n    \"purchaseInfo\": {\n        \"price\": 0.0\n    },\n    \"notificationSettings\": {\n        \"areNotificationsEnabled\": false\n    },\n    \"epochTime\": {\n        \"createdAt\": 1556771235115,\n        \"updatedAt\": 1556771235115\n    },\n    \"userId\": \"ffffffff5badc1cdbe64ee171a740bed\",\n    \"createdAt\": \"2019-05-02T04:27:15.115Z\",\n    \"updatedAt\": \"2019-05-02T04:27:15.117Z\",\n    \"archived\": false,\n    \"cardPreview\": false,\n    \"noOfCards\": 0,\n    \"progress\": 0,\n    \"downloads\": 0,\n    \"starred\": false,\n    \"examReminder\": {\n        \n    },\n    \"expert\": false\n}\n\n",
													"Response Headers are: \nContent-Type=application/json;charset=UTF-8\ncorrelation-id=254127b7-17b8-4f04-95c0-45361d473a41\nDate=Thu, 02 May 2019 04:27:15 GMT\nServer=nginx\nX-Content-Type-Options=nosniff\nX-Loadbalancer-Id=nginx-ingress-j023n\nX-XSS-Protection=1; mode=block\nContent-Length=472\nConnection=keep-alive"
												],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "Then the status code for the request is \"201\"",
											"table": null,
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 0,
												"skippedReason": "",
												"messages": [],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "And the JSON Path Assertions for the response should be equal to the values inside the data stores",
											"table": {
												"headers": [
													"JSON Path",
													"Is Data Store Used?",
													"Data Store Type",
													"Data Store Variable Name",
													"Expected Value"
												],
												"rows": [
													{
														"cells": [
															"$.title",
															"yes",
															"Scenario",
															"varDeckTitle",
															""
														]
													},
													{
														"cells": [
															"$.userId",
															"yes",
															"Scenario",
															"varUserId",
															""
														]
													}
												]
											},
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 3,
												"skippedReason": "",
												"messages": [
													"Text inside Scenario Data Store [varDeckTitle] is: \"Trigonometry Ch.1\"\n\n",
													"Text inside Scenario Data Store [varUserId] is: \"ffffffff5badc1cdbe64ee171a740bed\"\n\n"
												],
												"errorType": "assertion"
											}
										}
									],
									"result": {
										"status": "",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": null,
										"errorType": ""
									}
								},
								{
									"itemType": "step",
									"stepText": "And save the JSON Path values in the response inside the data stores",
									"table": {
										"headers": [
											"DataStore Type",
											"Variable Name",
											"Value To Be Stored"
										],
										"rows": [
											{
												"cells": [
													"Spec",
													"deckIdWith4Questions",
													"$.id"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 2,
										"skippedReason": "",
										"messages": [
											"\"5cca71a3a452d60010df7725\" is successfully saved as a text in Specification Data Store [deckIdWith4Questions]"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "concept",
									"conceptStep": {
										"itemType": "step",
										"stepText": "Create question for deck by deckId saved in \u003cdataStoreType\u003e type data store named \u003cdataStoreVariableName\u003e",
										"table": null,
										"beforeStepHookFailure": null,
										"afterStepHookFailure": null,
										"result": {
											"status": "pass",
											"stackTrace": "",
											"screenshot": "",
											"errorMessage": "",
											"executionTime": 1672,
											"skippedReason": "",
											"messages": [],
											"errorType": "assertion"
										}
									},
									"items": [
										{
											"itemType": "step",
											"stepText": "Given that a user needs to invoke \"Create Question\"",
											"table": null,
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 93,
												"skippedReason": "",
												"messages": [
													"API Endpoint is: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/questions\n\n",
													"HTTP Method is: POST\n\n"
												],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "And the user saves test data inside excel file into data stores",
											"table": {
												"headers": [
													"DataStore Type",
													"Variable Name",
													"Excel Sheet Name",
													"Key Name"
												],
												"rows": [
													{
														"cells": [
															"Scenario",
															"varCreatorId",
															"Question_Test_Data",
															"creatorId"
														]
													},
													{
														"cells": [
															"Scenario",
															"varCreatorPlatform",
															"Question_Test_Data",
															"creatorPlatform"
														]
													},
													{
														"cells": [
															"Scenario",
															"varCreatoredSource",
															"Question_Test_Data",
															"creatoredSource"
														]
													},
													{
														"cells": [
															"Scenario",
															"varCreatoredType",
															"Question_Test_Data",
															"creatoredType"
														]
													},
													{
														"cells": [
															"Scenario",
															"varKind",
															"Question_Test_Data",
															"kind"
														]
													},
													{
														"cells": [
															"Scenario",
															"varQuestionImageUrl",
															"Question_Test_Data",
															"questionImageUrl"
														]
													},
													{
														"cells": [
															"Scenario",
															"varQuestionMedia",
															"Question_Test_Data",
															"questionMedia"
														]
													},
													{
														"cells": [
															"Scenario",
															"varQuestionValue",
															"Question_Test_Data",
															"questionValue"
														]
													},
													{
														"cells": [
															"Scenario",
															"varQuestionPromptType",
															"Question_Test_Data",
															"questionPromptType"
														]
													},
													{
														"cells": [
															"Scenario",
															"vaIsAnswerCaseSensitive",
															"Question_Test_Data",
															"isAnswerCaseSensitive"
														]
													},
													{
														"cells": [
															"Scenario",
															"varAnswerId",
															"Question_Test_Data",
															"answerId"
														]
													},
													{
														"cells": [
															"Scenario",
															"varAnswerType",
															"Question_Test_Data",
															"answerType"
														]
													},
													{
														"cells": [
															"Scenario",
															"varAnswerValue",
															"Question_Test_Data",
															"answerValue"
														]
													}
												]
											},
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 269,
												"skippedReason": "",
												"messages": [
													"\"testId\" is successfully saved as a text in Scenario Data Store [varCreatorId]",
													"\"Web\" is successfully saved as a text in Scenario Data Store [varCreatorPlatform]",
													"\"App\" is successfully saved as a text in Scenario Data Store [varCreatoredSource]",
													"\"Manual\" is successfully saved as a text in Scenario Data Store [varCreatoredType]",
													"\"SHORT_ANSWER\" is successfully saved as a text in Scenario Data Store [varKind]",
													"\"http://somehost/someimg.jpg\" is successfully saved as a text in Scenario Data Store [varQuestionImageUrl]",
													"\"TEXT\" is successfully saved as a text in Scenario Data Store [varQuestionMedia]",
													"\"Sumation of the degrees in a triangle?\" is successfully saved as a text in Scenario Data Store [varQuestionValue]",
													"\"TEXT\" is successfully saved as a text in Scenario Data Store [varQuestionPromptType]",
													"\"false\" is successfully saved as a text in Scenario Data Store [vaIsAnswerCaseSensitive]",
													"\"1\" is successfully saved as a text in Scenario Data Store [varAnswerId]",
													"\"TEXT\" is successfully saved as a text in Scenario Data Store [varAnswerType]",
													"\"180 degrees\" is successfully saved as a text in Scenario Data Store [varAnswerValue]"
												],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "And the user set the request attributes using data stores as follows",
											"table": {
												"headers": [
													"Attribute Value In JSON Template",
													"Is Data Store Used?",
													"Data Store Type",
													"Data Store Variable Name",
													"Attibute Value To Be Set"
												],
												"rows": [
													{
														"cells": [
															"#creatorId",
															"yes",
															"Scenario",
															"varCreatorId",
															""
														]
													},
													{
														"cells": [
															"#creatorPlatform",
															"yes",
															"Scenario",
															"varCreatorPlatform",
															""
														]
													},
													{
														"cells": [
															"#creatoredSource",
															"yes",
															"Scenario",
															"varCreatoredSource",
															""
														]
													},
													{
														"cells": [
															"#creatoredType",
															"yes",
															"Scenario",
															"varCreatoredType",
															""
														]
													},
													{
														"cells": [
															"#deckId",
															"yes",
															"Spec",
															"deckIdWith4Questions",
															""
														]
													},
													{
														"cells": [
															"#kind",
															"yes",
															"Scenario",
															"varKind",
															""
														]
													},
													{
														"cells": [
															"#questionImageUrl",
															"yes",
															"Scenario",
															"varQuestionImageUrl",
															""
														]
													},
													{
														"cells": [
															"#questionMedia",
															"yes",
															"Scenario",
															"varQuestionMedia",
															""
														]
													},
													{
														"cells": [
															"#questionValue",
															"yes",
															"Scenario",
															"varQuestionValue",
															""
														]
													},
													{
														"cells": [
															"#questionPromptType",
															"yes",
															"Scenario",
															"varQuestionPromptType",
															""
														]
													},
													{
														"cells": [
															"#isAnswerCaseSensitive",
															"yes",
															"Scenario",
															"vaIsAnswerCaseSensitive",
															""
														]
													},
													{
														"cells": [
															"#answerId",
															"yes",
															"Scenario",
															"varAnswerId",
															""
														]
													},
													{
														"cells": [
															"#answerType",
															"yes",
															"Scenario",
															"varAnswerType",
															""
														]
													},
													{
														"cells": [
															"#answerValue",
															"yes",
															"Scenario",
															"varAnswerValue",
															""
														]
													}
												]
											},
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 48,
												"skippedReason": "",
												"messages": [
													"Text inside Scenario Data Store [varCreatorId] is: \"testId\"\n\n",
													"Text inside Scenario Data Store [varCreatorPlatform] is: \"Web\"\n\n",
													"Text inside Scenario Data Store [varCreatoredSource] is: \"App\"\n\n",
													"Text inside Scenario Data Store [varCreatoredType] is: \"Manual\"\n\n",
													"Text inside Specification Data Store [deckIdWith4Questions] is: \"5cca71a3a452d60010df7725\"\n\n",
													"Text inside Scenario Data Store [varKind] is: \"SHORT_ANSWER\"\n\n",
													"Text inside Scenario Data Store [varQuestionImageUrl] is: \"http://somehost/someimg.jpg\"\n\n",
													"Text inside Scenario Data Store [varQuestionMedia] is: \"TEXT\"\n\n",
													"Text inside Scenario Data Store [varQuestionValue] is: \"Sumation of the degrees in a triangle?\"\n\n",
													"Text inside Scenario Data Store [varQuestionPromptType] is: \"TEXT\"\n\n",
													"Text inside Scenario Data Store [vaIsAnswerCaseSensitive] is: \"false\"\n\n",
													"Text inside Scenario Data Store [varAnswerId] is: \"1\"\n\n",
													"Text inside Scenario Data Store [varAnswerType] is: \"TEXT\"\n\n",
													"Text inside Scenario Data Store [varAnswerValue] is: \"180 degrees\"\n\n",
													"The JSON request body that you are going to use for the API is:\n {\n      \"creatorId\": \"testId\",\n      \"creatorPlatform\": \"Web\",\n      \"creatoredSource\": \"App\",\n      \"creatoredType\": \"Manual\",\n      \"deckId\": \"5cca71a3a452d60010df7725\",\n      \"kind\": \"SHORT_ANSWER\",\n      \"question\": {\n        \"imageUrl\": \"http://somehost/someimg.jpg\",\n        \"media\": \"TEXT\",\n        \"prompt\": \"Sumation of the degrees in a triangle?\",\n        \"promptType\": \"TEXT\"\n      },\n      \"answers\": [\n        {\n          \"caseSensitive\": false,\n          \"id\": 1,\n          \"type\": \"TEXT\",\n          \"value\": \"180 degrees\"\n        }\n      ]\n }"
												],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "And the user set the request authentication configurations as follows",
											"table": {
												"headers": [
													"Configuration",
													"Configuration Value"
												],
												"rows": [
													{
														"cells": [
															"Is authentication required?",
															"Yes"
														]
													},
													{
														"cells": [
															"Do you need to retrieve the access token from the text file?",
															"Yes"
														]
													},
													{
														"cells": [
															"Provide the access token if you need to authorize the API manually",
															"N/A"
														]
													}
												]
											},
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 0,
												"skippedReason": "",
												"messages": [],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "When the user invokes the API",
											"table": null,
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 1253,
												"skippedReason": "",
												"messages": [
													"Successfully read the access token from the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
													"Invoked API Endpoint: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/questions\n\n",
													"HTTP Method is: POST\n\n",
													"Response Time is: 1056ms\n\n",
													"Response is: \n{\n    \"question\": {\n        \"timeout\": 0,\n        \"media\": \"TEXT\",\n        \"prompt\": \"Sumation of the degrees in a triangle?\",\n        \"imageUrl\": \"http://somehost/someimg.jpg\",\n        \"promptType\": \"TEXT\"\n    },\n    \"kind\": \"SHORT_ANSWER\",\n    \"creatorId\": \"testId\",\n    \"deckId\": \"5cca71a3a452d60010df7725\",\n    \"creatoredType\": \"Manual\",\n    \"creatorPlatform\": \"Web\",\n    \"creatoredSource\": \"App\",\n    \"epochTime\": {\n        \"createdAt\": 1556771236560,\n        \"updatedAt\": 1556771236561\n    },\n    \"answers\": [\n        {\n            \"id\": 1,\n            \"value\": \"180 degrees\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": true\n        }\n    ],\n    \"id\": \"5cca71a4d441be00118b7d35\",\n    \"createdAt\": \"2019-05-02T04:27:16.560Z\",\n    \"updatedAt\": \"2019-05-02T04:27:16.561Z\",\n    \"deleted\": false,\n    \"archived\": false\n}\n\n",
													"Response Headers are: \nContent-Type=application/json;charset=UTF-8\ncorrelation-id=64a56d89-2569-4d7f-84f6-d1581153a496\nDate=Thu, 02 May 2019 04:27:16 GMT\nServer=nginx\nX-Content-Type-Options=nosniff\nX-Loadbalancer-Id=nginx-ingress-63qw2\nX-XSS-Protection=1; mode=block\nContent-Length=607\nConnection=keep-alive"
												],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "Then the status code for the request is \"201\"",
											"table": null,
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 0,
												"skippedReason": "",
												"messages": [],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "And the JSON Path Assertions for the response should be equal to the values inside the data stores",
											"table": {
												"headers": [
													"JSON Path",
													"Is Data Store Used?",
													"Data Store Type",
													"Data Store Variable Name",
													"Expected Value"
												],
												"rows": [
													{
														"cells": [
															"$.question.prompt",
															"yes",
															"Scenario",
															"varQuestionValue",
															""
														]
													},
													{
														"cells": [
															"$.answers[0].value",
															"yes",
															"Scenario",
															"varAnswerValue",
															""
														]
													}
												]
											},
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 9,
												"skippedReason": "",
												"messages": [
													"Text inside Scenario Data Store [varQuestionValue] is: \"Sumation of the degrees in a triangle?\"\n\n",
													"Text inside Scenario Data Store [varAnswerValue] is: \"180 degrees\"\n\n"
												],
												"errorType": "assertion"
											}
										}
									],
									"result": {
										"status": "",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": null,
										"errorType": ""
									}
								},
								{
									"itemType": "concept",
									"conceptStep": {
										"itemType": "step",
										"stepText": "Create question for deck by deckId saved in \u003cdataStoreType\u003e type data store named \u003cdataStoreVariableName\u003e",
										"table": null,
										"beforeStepHookFailure": null,
										"afterStepHookFailure": null,
										"result": {
											"status": "pass",
											"stackTrace": "",
											"screenshot": "",
											"errorMessage": "",
											"executionTime": 1387,
											"skippedReason": "",
											"messages": [],
											"errorType": "assertion"
										}
									},
									"items": [
										{
											"itemType": "step",
											"stepText": "Given that a user needs to invoke \"Create Question\"",
											"table": null,
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 60,
												"skippedReason": "",
												"messages": [
													"API Endpoint is: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/questions\n\n",
													"HTTP Method is: POST\n\n"
												],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "And the user saves test data inside excel file into data stores",
											"table": {
												"headers": [
													"DataStore Type",
													"Variable Name",
													"Excel Sheet Name",
													"Key Name"
												],
												"rows": [
													{
														"cells": [
															"Scenario",
															"varCreatorId",
															"Question_Test_Data",
															"creatorId"
														]
													},
													{
														"cells": [
															"Scenario",
															"varCreatorPlatform",
															"Question_Test_Data",
															"creatorPlatform"
														]
													},
													{
														"cells": [
															"Scenario",
															"varCreatoredSource",
															"Question_Test_Data",
															"creatoredSource"
														]
													},
													{
														"cells": [
															"Scenario",
															"varCreatoredType",
															"Question_Test_Data",
															"creatoredType"
														]
													},
													{
														"cells": [
															"Scenario",
															"varKind",
															"Question_Test_Data",
															"kind"
														]
													},
													{
														"cells": [
															"Scenario",
															"varQuestionImageUrl",
															"Question_Test_Data",
															"questionImageUrl"
														]
													},
													{
														"cells": [
															"Scenario",
															"varQuestionMedia",
															"Question_Test_Data",
															"questionMedia"
														]
													},
													{
														"cells": [
															"Scenario",
															"varQuestionValue",
															"Question_Test_Data",
															"questionValue"
														]
													},
													{
														"cells": [
															"Scenario",
															"varQuestionPromptType",
															"Question_Test_Data",
															"questionPromptType"
														]
													},
													{
														"cells": [
															"Scenario",
															"vaIsAnswerCaseSensitive",
															"Question_Test_Data",
															"isAnswerCaseSensitive"
														]
													},
													{
														"cells": [
															"Scenario",
															"varAnswerId",
															"Question_Test_Data",
															"answerId"
														]
													},
													{
														"cells": [
															"Scenario",
															"varAnswerType",
															"Question_Test_Data",
															"answerType"
														]
													},
													{
														"cells": [
															"Scenario",
															"varAnswerValue",
															"Question_Test_Data",
															"answerValue"
														]
													}
												]
											},
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 225,
												"skippedReason": "",
												"messages": [
													"\"testId\" is successfully saved as a text in Scenario Data Store [varCreatorId]",
													"\"Web\" is successfully saved as a text in Scenario Data Store [varCreatorPlatform]",
													"\"App\" is successfully saved as a text in Scenario Data Store [varCreatoredSource]",
													"\"Manual\" is successfully saved as a text in Scenario Data Store [varCreatoredType]",
													"\"SHORT_ANSWER\" is successfully saved as a text in Scenario Data Store [varKind]",
													"\"http://somehost/someimg.jpg\" is successfully saved as a text in Scenario Data Store [varQuestionImageUrl]",
													"\"TEXT\" is successfully saved as a text in Scenario Data Store [varQuestionMedia]",
													"\"Sumation of the degrees in a triangle?\" is successfully saved as a text in Scenario Data Store [varQuestionValue]",
													"\"TEXT\" is successfully saved as a text in Scenario Data Store [varQuestionPromptType]",
													"\"false\" is successfully saved as a text in Scenario Data Store [vaIsAnswerCaseSensitive]",
													"\"1\" is successfully saved as a text in Scenario Data Store [varAnswerId]",
													"\"TEXT\" is successfully saved as a text in Scenario Data Store [varAnswerType]",
													"\"180 degrees\" is successfully saved as a text in Scenario Data Store [varAnswerValue]"
												],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "And the user set the request attributes using data stores as follows",
											"table": {
												"headers": [
													"Attribute Value In JSON Template",
													"Is Data Store Used?",
													"Data Store Type",
													"Data Store Variable Name",
													"Attibute Value To Be Set"
												],
												"rows": [
													{
														"cells": [
															"#creatorId",
															"yes",
															"Scenario",
															"varCreatorId",
															""
														]
													},
													{
														"cells": [
															"#creatorPlatform",
															"yes",
															"Scenario",
															"varCreatorPlatform",
															""
														]
													},
													{
														"cells": [
															"#creatoredSource",
															"yes",
															"Scenario",
															"varCreatoredSource",
															""
														]
													},
													{
														"cells": [
															"#creatoredType",
															"yes",
															"Scenario",
															"varCreatoredType",
															""
														]
													},
													{
														"cells": [
															"#deckId",
															"yes",
															"Spec",
															"deckIdWith4Questions",
															""
														]
													},
													{
														"cells": [
															"#kind",
															"yes",
															"Scenario",
															"varKind",
															""
														]
													},
													{
														"cells": [
															"#questionImageUrl",
															"yes",
															"Scenario",
															"varQuestionImageUrl",
															""
														]
													},
													{
														"cells": [
															"#questionMedia",
															"yes",
															"Scenario",
															"varQuestionMedia",
															""
														]
													},
													{
														"cells": [
															"#questionValue",
															"yes",
															"Scenario",
															"varQuestionValue",
															""
														]
													},
													{
														"cells": [
															"#questionPromptType",
															"yes",
															"Scenario",
															"varQuestionPromptType",
															""
														]
													},
													{
														"cells": [
															"#isAnswerCaseSensitive",
															"yes",
															"Scenario",
															"vaIsAnswerCaseSensitive",
															""
														]
													},
													{
														"cells": [
															"#answerId",
															"yes",
															"Scenario",
															"varAnswerId",
															""
														]
													},
													{
														"cells": [
															"#answerType",
															"yes",
															"Scenario",
															"varAnswerType",
															""
														]
													},
													{
														"cells": [
															"#answerValue",
															"yes",
															"Scenario",
															"varAnswerValue",
															""
														]
													}
												]
											},
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 52,
												"skippedReason": "",
												"messages": [
													"Text inside Scenario Data Store [varCreatorId] is: \"testId\"\n\n",
													"Text inside Scenario Data Store [varCreatorPlatform] is: \"Web\"\n\n",
													"Text inside Scenario Data Store [varCreatoredSource] is: \"App\"\n\n",
													"Text inside Scenario Data Store [varCreatoredType] is: \"Manual\"\n\n",
													"Text inside Specification Data Store [deckIdWith4Questions] is: \"5cca71a3a452d60010df7725\"\n\n",
													"Text inside Scenario Data Store [varKind] is: \"SHORT_ANSWER\"\n\n",
													"Text inside Scenario Data Store [varQuestionImageUrl] is: \"http://somehost/someimg.jpg\"\n\n",
													"Text inside Scenario Data Store [varQuestionMedia] is: \"TEXT\"\n\n",
													"Text inside Scenario Data Store [varQuestionValue] is: \"Sumation of the degrees in a triangle?\"\n\n",
													"Text inside Scenario Data Store [varQuestionPromptType] is: \"TEXT\"\n\n",
													"Text inside Scenario Data Store [vaIsAnswerCaseSensitive] is: \"false\"\n\n",
													"Text inside Scenario Data Store [varAnswerId] is: \"1\"\n\n",
													"Text inside Scenario Data Store [varAnswerType] is: \"TEXT\"\n\n",
													"Text inside Scenario Data Store [varAnswerValue] is: \"180 degrees\"\n\n",
													"The JSON request body that you are going to use for the API is:\n {\n      \"creatorId\": \"testId\",\n      \"creatorPlatform\": \"Web\",\n      \"creatoredSource\": \"App\",\n      \"creatoredType\": \"Manual\",\n      \"deckId\": \"5cca71a3a452d60010df7725\",\n      \"kind\": \"SHORT_ANSWER\",\n      \"question\": {\n        \"imageUrl\": \"http://somehost/someimg.jpg\",\n        \"media\": \"TEXT\",\n        \"prompt\": \"Sumation of the degrees in a triangle?\",\n        \"promptType\": \"TEXT\"\n      },\n      \"answers\": [\n        {\n          \"caseSensitive\": false,\n          \"id\": 1,\n          \"type\": \"TEXT\",\n          \"value\": \"180 degrees\"\n        }\n      ]\n }"
												],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "And the user set the request authentication configurations as follows",
											"table": {
												"headers": [
													"Configuration",
													"Configuration Value"
												],
												"rows": [
													{
														"cells": [
															"Is authentication required?",
															"Yes"
														]
													},
													{
														"cells": [
															"Do you need to retrieve the access token from the text file?",
															"Yes"
														]
													},
													{
														"cells": [
															"Provide the access token if you need to authorize the API manually",
															"N/A"
														]
													}
												]
											},
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 0,
												"skippedReason": "",
												"messages": [],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "When the user invokes the API",
											"table": null,
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 1045,
												"skippedReason": "",
												"messages": [
													"Successfully read the access token from the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
													"Invoked API Endpoint: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/questions\n\n",
													"HTTP Method is: POST\n\n",
													"Response Time is: 837ms\n\n",
													"Response is: \n{\n    \"question\": {\n        \"timeout\": 0,\n        \"media\": \"TEXT\",\n        \"prompt\": \"Sumation of the degrees in a triangle?\",\n        \"imageUrl\": \"http://somehost/someimg.jpg\",\n        \"promptType\": \"TEXT\"\n    },\n    \"kind\": \"SHORT_ANSWER\",\n    \"creatorId\": \"testId\",\n    \"deckId\": \"5cca71a3a452d60010df7725\",\n    \"creatoredType\": \"Manual\",\n    \"creatorPlatform\": \"Web\",\n    \"creatoredSource\": \"App\",\n    \"epochTime\": {\n        \"createdAt\": 1556771238154,\n        \"updatedAt\": 1556771238155\n    },\n    \"answers\": [\n        {\n            \"id\": 1,\n            \"value\": \"180 degrees\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": true\n        }\n    ],\n    \"id\": \"5cca71a6d441be00118b7d36\",\n    \"createdAt\": \"2019-05-02T04:27:18.154Z\",\n    \"updatedAt\": \"2019-05-02T04:27:18.155Z\",\n    \"deleted\": false,\n    \"archived\": false\n}\n\n",
													"Response Headers are: \nContent-Type=application/json;charset=UTF-8\ncorrelation-id=54e5918d-039d-4752-85a3-11107f1c4b59\nDate=Thu, 02 May 2019 04:27:18 GMT\nServer=nginx\nX-Content-Type-Options=nosniff\nX-Loadbalancer-Id=nginx-ingress-j023n\nX-XSS-Protection=1; mode=block\nContent-Length=607\nConnection=keep-alive"
												],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "Then the status code for the request is \"201\"",
											"table": null,
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 0,
												"skippedReason": "",
												"messages": [],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "And the JSON Path Assertions for the response should be equal to the values inside the data stores",
											"table": {
												"headers": [
													"JSON Path",
													"Is Data Store Used?",
													"Data Store Type",
													"Data Store Variable Name",
													"Expected Value"
												],
												"rows": [
													{
														"cells": [
															"$.question.prompt",
															"yes",
															"Scenario",
															"varQuestionValue",
															""
														]
													},
													{
														"cells": [
															"$.answers[0].value",
															"yes",
															"Scenario",
															"varAnswerValue",
															""
														]
													}
												]
											},
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 5,
												"skippedReason": "",
												"messages": [
													"Text inside Scenario Data Store [varQuestionValue] is: \"Sumation of the degrees in a triangle?\"\n\n",
													"Text inside Scenario Data Store [varAnswerValue] is: \"180 degrees\"\n\n"
												],
												"errorType": "assertion"
											}
										}
									],
									"result": {
										"status": "",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": null,
										"errorType": ""
									}
								},
								{
									"itemType": "concept",
									"conceptStep": {
										"itemType": "step",
										"stepText": "Create question for deck by deckId saved in \u003cdataStoreType\u003e type data store named \u003cdataStoreVariableName\u003e",
										"table": null,
										"beforeStepHookFailure": null,
										"afterStepHookFailure": null,
										"result": {
											"status": "pass",
											"stackTrace": "",
											"screenshot": "",
											"errorMessage": "",
											"executionTime": 1550,
											"skippedReason": "",
											"messages": [],
											"errorType": "assertion"
										}
									},
									"items": [
										{
											"itemType": "step",
											"stepText": "Given that a user needs to invoke \"Create Question\"",
											"table": null,
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 58,
												"skippedReason": "",
												"messages": [
													"API Endpoint is: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/questions\n\n",
													"HTTP Method is: POST\n\n"
												],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "And the user saves test data inside excel file into data stores",
											"table": {
												"headers": [
													"DataStore Type",
													"Variable Name",
													"Excel Sheet Name",
													"Key Name"
												],
												"rows": [
													{
														"cells": [
															"Scenario",
															"varCreatorId",
															"Question_Test_Data",
															"creatorId"
														]
													},
													{
														"cells": [
															"Scenario",
															"varCreatorPlatform",
															"Question_Test_Data",
															"creatorPlatform"
														]
													},
													{
														"cells": [
															"Scenario",
															"varCreatoredSource",
															"Question_Test_Data",
															"creatoredSource"
														]
													},
													{
														"cells": [
															"Scenario",
															"varCreatoredType",
															"Question_Test_Data",
															"creatoredType"
														]
													},
													{
														"cells": [
															"Scenario",
															"varKind",
															"Question_Test_Data",
															"kind"
														]
													},
													{
														"cells": [
															"Scenario",
															"varQuestionImageUrl",
															"Question_Test_Data",
															"questionImageUrl"
														]
													},
													{
														"cells": [
															"Scenario",
															"varQuestionMedia",
															"Question_Test_Data",
															"questionMedia"
														]
													},
													{
														"cells": [
															"Scenario",
															"varQuestionValue",
															"Question_Test_Data",
															"questionValue"
														]
													},
													{
														"cells": [
															"Scenario",
															"varQuestionPromptType",
															"Question_Test_Data",
															"questionPromptType"
														]
													},
													{
														"cells": [
															"Scenario",
															"vaIsAnswerCaseSensitive",
															"Question_Test_Data",
															"isAnswerCaseSensitive"
														]
													},
													{
														"cells": [
															"Scenario",
															"varAnswerId",
															"Question_Test_Data",
															"answerId"
														]
													},
													{
														"cells": [
															"Scenario",
															"varAnswerType",
															"Question_Test_Data",
															"answerType"
														]
													},
													{
														"cells": [
															"Scenario",
															"varAnswerValue",
															"Question_Test_Data",
															"answerValue"
														]
													}
												]
											},
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 233,
												"skippedReason": "",
												"messages": [
													"\"testId\" is successfully saved as a text in Scenario Data Store [varCreatorId]",
													"\"Web\" is successfully saved as a text in Scenario Data Store [varCreatorPlatform]",
													"\"App\" is successfully saved as a text in Scenario Data Store [varCreatoredSource]",
													"\"Manual\" is successfully saved as a text in Scenario Data Store [varCreatoredType]",
													"\"SHORT_ANSWER\" is successfully saved as a text in Scenario Data Store [varKind]",
													"\"http://somehost/someimg.jpg\" is successfully saved as a text in Scenario Data Store [varQuestionImageUrl]",
													"\"TEXT\" is successfully saved as a text in Scenario Data Store [varQuestionMedia]",
													"\"Sumation of the degrees in a triangle?\" is successfully saved as a text in Scenario Data Store [varQuestionValue]",
													"\"TEXT\" is successfully saved as a text in Scenario Data Store [varQuestionPromptType]",
													"\"false\" is successfully saved as a text in Scenario Data Store [vaIsAnswerCaseSensitive]",
													"\"1\" is successfully saved as a text in Scenario Data Store [varAnswerId]",
													"\"TEXT\" is successfully saved as a text in Scenario Data Store [varAnswerType]",
													"\"180 degrees\" is successfully saved as a text in Scenario Data Store [varAnswerValue]"
												],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "And the user set the request attributes using data stores as follows",
											"table": {
												"headers": [
													"Attribute Value In JSON Template",
													"Is Data Store Used?",
													"Data Store Type",
													"Data Store Variable Name",
													"Attibute Value To Be Set"
												],
												"rows": [
													{
														"cells": [
															"#creatorId",
															"yes",
															"Scenario",
															"varCreatorId",
															""
														]
													},
													{
														"cells": [
															"#creatorPlatform",
															"yes",
															"Scenario",
															"varCreatorPlatform",
															""
														]
													},
													{
														"cells": [
															"#creatoredSource",
															"yes",
															"Scenario",
															"varCreatoredSource",
															""
														]
													},
													{
														"cells": [
															"#creatoredType",
															"yes",
															"Scenario",
															"varCreatoredType",
															""
														]
													},
													{
														"cells": [
															"#deckId",
															"yes",
															"Spec",
															"deckIdWith4Questions",
															""
														]
													},
													{
														"cells": [
															"#kind",
															"yes",
															"Scenario",
															"varKind",
															""
														]
													},
													{
														"cells": [
															"#questionImageUrl",
															"yes",
															"Scenario",
															"varQuestionImageUrl",
															""
														]
													},
													{
														"cells": [
															"#questionMedia",
															"yes",
															"Scenario",
															"varQuestionMedia",
															""
														]
													},
													{
														"cells": [
															"#questionValue",
															"yes",
															"Scenario",
															"varQuestionValue",
															""
														]
													},
													{
														"cells": [
															"#questionPromptType",
															"yes",
															"Scenario",
															"varQuestionPromptType",
															""
														]
													},
													{
														"cells": [
															"#isAnswerCaseSensitive",
															"yes",
															"Scenario",
															"vaIsAnswerCaseSensitive",
															""
														]
													},
													{
														"cells": [
															"#answerId",
															"yes",
															"Scenario",
															"varAnswerId",
															""
														]
													},
													{
														"cells": [
															"#answerType",
															"yes",
															"Scenario",
															"varAnswerType",
															""
														]
													},
													{
														"cells": [
															"#answerValue",
															"yes",
															"Scenario",
															"varAnswerValue",
															""
														]
													}
												]
											},
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 50,
												"skippedReason": "",
												"messages": [
													"Text inside Scenario Data Store [varCreatorId] is: \"testId\"\n\n",
													"Text inside Scenario Data Store [varCreatorPlatform] is: \"Web\"\n\n",
													"Text inside Scenario Data Store [varCreatoredSource] is: \"App\"\n\n",
													"Text inside Scenario Data Store [varCreatoredType] is: \"Manual\"\n\n",
													"Text inside Specification Data Store [deckIdWith4Questions] is: \"5cca71a3a452d60010df7725\"\n\n",
													"Text inside Scenario Data Store [varKind] is: \"SHORT_ANSWER\"\n\n",
													"Text inside Scenario Data Store [varQuestionImageUrl] is: \"http://somehost/someimg.jpg\"\n\n",
													"Text inside Scenario Data Store [varQuestionMedia] is: \"TEXT\"\n\n",
													"Text inside Scenario Data Store [varQuestionValue] is: \"Sumation of the degrees in a triangle?\"\n\n",
													"Text inside Scenario Data Store [varQuestionPromptType] is: \"TEXT\"\n\n",
													"Text inside Scenario Data Store [vaIsAnswerCaseSensitive] is: \"false\"\n\n",
													"Text inside Scenario Data Store [varAnswerId] is: \"1\"\n\n",
													"Text inside Scenario Data Store [varAnswerType] is: \"TEXT\"\n\n",
													"Text inside Scenario Data Store [varAnswerValue] is: \"180 degrees\"\n\n",
													"The JSON request body that you are going to use for the API is:\n {\n      \"creatorId\": \"testId\",\n      \"creatorPlatform\": \"Web\",\n      \"creatoredSource\": \"App\",\n      \"creatoredType\": \"Manual\",\n      \"deckId\": \"5cca71a3a452d60010df7725\",\n      \"kind\": \"SHORT_ANSWER\",\n      \"question\": {\n        \"imageUrl\": \"http://somehost/someimg.jpg\",\n        \"media\": \"TEXT\",\n        \"prompt\": \"Sumation of the degrees in a triangle?\",\n        \"promptType\": \"TEXT\"\n      },\n      \"answers\": [\n        {\n          \"caseSensitive\": false,\n          \"id\": 1,\n          \"type\": \"TEXT\",\n          \"value\": \"180 degrees\"\n        }\n      ]\n }"
												],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "And the user set the request authentication configurations as follows",
											"table": {
												"headers": [
													"Configuration",
													"Configuration Value"
												],
												"rows": [
													{
														"cells": [
															"Is authentication required?",
															"Yes"
														]
													},
													{
														"cells": [
															"Do you need to retrieve the access token from the text file?",
															"Yes"
														]
													},
													{
														"cells": [
															"Provide the access token if you need to authorize the API manually",
															"N/A"
														]
													}
												]
											},
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 0,
												"skippedReason": "",
												"messages": [],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "When the user invokes the API",
											"table": null,
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 1203,
												"skippedReason": "",
												"messages": [
													"Successfully read the access token from the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
													"Invoked API Endpoint: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/questions\n\n",
													"HTTP Method is: POST\n\n",
													"Response Time is: 1055ms\n\n",
													"Response is: \n{\n    \"question\": {\n        \"timeout\": 0,\n        \"media\": \"TEXT\",\n        \"prompt\": \"Sumation of the degrees in a triangle?\",\n        \"imageUrl\": \"http://somehost/someimg.jpg\",\n        \"promptType\": \"TEXT\"\n    },\n    \"kind\": \"SHORT_ANSWER\",\n    \"creatorId\": \"testId\",\n    \"deckId\": \"5cca71a3a452d60010df7725\",\n    \"creatoredType\": \"Manual\",\n    \"creatorPlatform\": \"Web\",\n    \"creatoredSource\": \"App\",\n    \"epochTime\": {\n        \"createdAt\": 1556771239545,\n        \"updatedAt\": 1556771239547\n    },\n    \"answers\": [\n        {\n            \"id\": 1,\n            \"value\": \"180 degrees\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": true\n        }\n    ],\n    \"id\": \"5cca71a7fc63c2000fcff734\",\n    \"createdAt\": \"2019-05-02T04:27:19.545Z\",\n    \"updatedAt\": \"2019-05-02T04:27:19.547Z\",\n    \"deleted\": false,\n    \"archived\": false\n}\n\n",
													"Response Headers are: \nContent-Type=application/json;charset=UTF-8\ncorrelation-id=e7ab507c-86bd-41e7-8bb1-c3476a71136c\nDate=Thu, 02 May 2019 04:27:19 GMT\nServer=nginx\nX-Content-Type-Options=nosniff\nX-Loadbalancer-Id=nginx-ingress-lxkkr\nX-XSS-Protection=1; mode=block\nContent-Length=607\nConnection=keep-alive"
												],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "Then the status code for the request is \"201\"",
											"table": null,
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 0,
												"skippedReason": "",
												"messages": [],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "And the JSON Path Assertions for the response should be equal to the values inside the data stores",
											"table": {
												"headers": [
													"JSON Path",
													"Is Data Store Used?",
													"Data Store Type",
													"Data Store Variable Name",
													"Expected Value"
												],
												"rows": [
													{
														"cells": [
															"$.question.prompt",
															"yes",
															"Scenario",
															"varQuestionValue",
															""
														]
													},
													{
														"cells": [
															"$.answers[0].value",
															"yes",
															"Scenario",
															"varAnswerValue",
															""
														]
													}
												]
											},
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 6,
												"skippedReason": "",
												"messages": [
													"Text inside Scenario Data Store [varQuestionValue] is: \"Sumation of the degrees in a triangle?\"\n\n",
													"Text inside Scenario Data Store [varAnswerValue] is: \"180 degrees\"\n\n"
												],
												"errorType": "assertion"
											}
										}
									],
									"result": {
										"status": "",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": null,
										"errorType": ""
									}
								},
								{
									"itemType": "concept",
									"conceptStep": {
										"itemType": "step",
										"stepText": "Create question for deck by deckId saved in \u003cdataStoreType\u003e type data store named \u003cdataStoreVariableName\u003e",
										"table": null,
										"beforeStepHookFailure": null,
										"afterStepHookFailure": null,
										"result": {
											"status": "pass",
											"stackTrace": "",
											"screenshot": "",
											"errorMessage": "",
											"executionTime": 1252,
											"skippedReason": "",
											"messages": [],
											"errorType": "assertion"
										}
									},
									"items": [
										{
											"itemType": "step",
											"stepText": "Given that a user needs to invoke \"Create Question\"",
											"table": null,
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 54,
												"skippedReason": "",
												"messages": [
													"API Endpoint is: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/questions\n\n",
													"HTTP Method is: POST\n\n"
												],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "And the user saves test data inside excel file into data stores",
											"table": {
												"headers": [
													"DataStore Type",
													"Variable Name",
													"Excel Sheet Name",
													"Key Name"
												],
												"rows": [
													{
														"cells": [
															"Scenario",
															"varCreatorId",
															"Question_Test_Data",
															"creatorId"
														]
													},
													{
														"cells": [
															"Scenario",
															"varCreatorPlatform",
															"Question_Test_Data",
															"creatorPlatform"
														]
													},
													{
														"cells": [
															"Scenario",
															"varCreatoredSource",
															"Question_Test_Data",
															"creatoredSource"
														]
													},
													{
														"cells": [
															"Scenario",
															"varCreatoredType",
															"Question_Test_Data",
															"creatoredType"
														]
													},
													{
														"cells": [
															"Scenario",
															"varKind",
															"Question_Test_Data",
															"kind"
														]
													},
													{
														"cells": [
															"Scenario",
															"varQuestionImageUrl",
															"Question_Test_Data",
															"questionImageUrl"
														]
													},
													{
														"cells": [
															"Scenario",
															"varQuestionMedia",
															"Question_Test_Data",
															"questionMedia"
														]
													},
													{
														"cells": [
															"Scenario",
															"varQuestionValue",
															"Question_Test_Data",
															"questionValue"
														]
													},
													{
														"cells": [
															"Scenario",
															"varQuestionPromptType",
															"Question_Test_Data",
															"questionPromptType"
														]
													},
													{
														"cells": [
															"Scenario",
															"vaIsAnswerCaseSensitive",
															"Question_Test_Data",
															"isAnswerCaseSensitive"
														]
													},
													{
														"cells": [
															"Scenario",
															"varAnswerId",
															"Question_Test_Data",
															"answerId"
														]
													},
													{
														"cells": [
															"Scenario",
															"varAnswerType",
															"Question_Test_Data",
															"answerType"
														]
													},
													{
														"cells": [
															"Scenario",
															"varAnswerValue",
															"Question_Test_Data",
															"answerValue"
														]
													}
												]
											},
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 202,
												"skippedReason": "",
												"messages": [
													"\"testId\" is successfully saved as a text in Scenario Data Store [varCreatorId]",
													"\"Web\" is successfully saved as a text in Scenario Data Store [varCreatorPlatform]",
													"\"App\" is successfully saved as a text in Scenario Data Store [varCreatoredSource]",
													"\"Manual\" is successfully saved as a text in Scenario Data Store [varCreatoredType]",
													"\"SHORT_ANSWER\" is successfully saved as a text in Scenario Data Store [varKind]",
													"\"http://somehost/someimg.jpg\" is successfully saved as a text in Scenario Data Store [varQuestionImageUrl]",
													"\"TEXT\" is successfully saved as a text in Scenario Data Store [varQuestionMedia]",
													"\"Sumation of the degrees in a triangle?\" is successfully saved as a text in Scenario Data Store [varQuestionValue]",
													"\"TEXT\" is successfully saved as a text in Scenario Data Store [varQuestionPromptType]",
													"\"false\" is successfully saved as a text in Scenario Data Store [vaIsAnswerCaseSensitive]",
													"\"1\" is successfully saved as a text in Scenario Data Store [varAnswerId]",
													"\"TEXT\" is successfully saved as a text in Scenario Data Store [varAnswerType]",
													"\"180 degrees\" is successfully saved as a text in Scenario Data Store [varAnswerValue]"
												],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "And the user set the request attributes using data stores as follows",
											"table": {
												"headers": [
													"Attribute Value In JSON Template",
													"Is Data Store Used?",
													"Data Store Type",
													"Data Store Variable Name",
													"Attibute Value To Be Set"
												],
												"rows": [
													{
														"cells": [
															"#creatorId",
															"yes",
															"Scenario",
															"varCreatorId",
															""
														]
													},
													{
														"cells": [
															"#creatorPlatform",
															"yes",
															"Scenario",
															"varCreatorPlatform",
															""
														]
													},
													{
														"cells": [
															"#creatoredSource",
															"yes",
															"Scenario",
															"varCreatoredSource",
															""
														]
													},
													{
														"cells": [
															"#creatoredType",
															"yes",
															"Scenario",
															"varCreatoredType",
															""
														]
													},
													{
														"cells": [
															"#deckId",
															"yes",
															"Spec",
															"deckIdWith4Questions",
															""
														]
													},
													{
														"cells": [
															"#kind",
															"yes",
															"Scenario",
															"varKind",
															""
														]
													},
													{
														"cells": [
															"#questionImageUrl",
															"yes",
															"Scenario",
															"varQuestionImageUrl",
															""
														]
													},
													{
														"cells": [
															"#questionMedia",
															"yes",
															"Scenario",
															"varQuestionMedia",
															""
														]
													},
													{
														"cells": [
															"#questionValue",
															"yes",
															"Scenario",
															"varQuestionValue",
															""
														]
													},
													{
														"cells": [
															"#questionPromptType",
															"yes",
															"Scenario",
															"varQuestionPromptType",
															""
														]
													},
													{
														"cells": [
															"#isAnswerCaseSensitive",
															"yes",
															"Scenario",
															"vaIsAnswerCaseSensitive",
															""
														]
													},
													{
														"cells": [
															"#answerId",
															"yes",
															"Scenario",
															"varAnswerId",
															""
														]
													},
													{
														"cells": [
															"#answerType",
															"yes",
															"Scenario",
															"varAnswerType",
															""
														]
													},
													{
														"cells": [
															"#answerValue",
															"yes",
															"Scenario",
															"varAnswerValue",
															""
														]
													}
												]
											},
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 60,
												"skippedReason": "",
												"messages": [
													"Text inside Scenario Data Store [varCreatorId] is: \"testId\"\n\n",
													"Text inside Scenario Data Store [varCreatorPlatform] is: \"Web\"\n\n",
													"Text inside Scenario Data Store [varCreatoredSource] is: \"App\"\n\n",
													"Text inside Scenario Data Store [varCreatoredType] is: \"Manual\"\n\n",
													"Text inside Specification Data Store [deckIdWith4Questions] is: \"5cca71a3a452d60010df7725\"\n\n",
													"Text inside Scenario Data Store [varKind] is: \"SHORT_ANSWER\"\n\n",
													"Text inside Scenario Data Store [varQuestionImageUrl] is: \"http://somehost/someimg.jpg\"\n\n",
													"Text inside Scenario Data Store [varQuestionMedia] is: \"TEXT\"\n\n",
													"Text inside Scenario Data Store [varQuestionValue] is: \"Sumation of the degrees in a triangle?\"\n\n",
													"Text inside Scenario Data Store [varQuestionPromptType] is: \"TEXT\"\n\n",
													"Text inside Scenario Data Store [vaIsAnswerCaseSensitive] is: \"false\"\n\n",
													"Text inside Scenario Data Store [varAnswerId] is: \"1\"\n\n",
													"Text inside Scenario Data Store [varAnswerType] is: \"TEXT\"\n\n",
													"Text inside Scenario Data Store [varAnswerValue] is: \"180 degrees\"\n\n",
													"The JSON request body that you are going to use for the API is:\n {\n      \"creatorId\": \"testId\",\n      \"creatorPlatform\": \"Web\",\n      \"creatoredSource\": \"App\",\n      \"creatoredType\": \"Manual\",\n      \"deckId\": \"5cca71a3a452d60010df7725\",\n      \"kind\": \"SHORT_ANSWER\",\n      \"question\": {\n        \"imageUrl\": \"http://somehost/someimg.jpg\",\n        \"media\": \"TEXT\",\n        \"prompt\": \"Sumation of the degrees in a triangle?\",\n        \"promptType\": \"TEXT\"\n      },\n      \"answers\": [\n        {\n          \"caseSensitive\": false,\n          \"id\": 1,\n          \"type\": \"TEXT\",\n          \"value\": \"180 degrees\"\n        }\n      ]\n }"
												],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "And the user set the request authentication configurations as follows",
											"table": {
												"headers": [
													"Configuration",
													"Configuration Value"
												],
												"rows": [
													{
														"cells": [
															"Is authentication required?",
															"Yes"
														]
													},
													{
														"cells": [
															"Do you need to retrieve the access token from the text file?",
															"Yes"
														]
													},
													{
														"cells": [
															"Provide the access token if you need to authorize the API manually",
															"N/A"
														]
													}
												]
											},
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 0,
												"skippedReason": "",
												"messages": [],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "When the user invokes the API",
											"table": null,
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 932,
												"skippedReason": "",
												"messages": [
													"Successfully read the access token from the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
													"Invoked API Endpoint: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/questions\n\n",
													"HTTP Method is: POST\n\n",
													"Response Time is: 777ms\n\n",
													"Response is: \n{\n    \"question\": {\n        \"timeout\": 0,\n        \"media\": \"TEXT\",\n        \"prompt\": \"Sumation of the degrees in a triangle?\",\n        \"imageUrl\": \"http://somehost/someimg.jpg\",\n        \"promptType\": \"TEXT\"\n    },\n    \"kind\": \"SHORT_ANSWER\",\n    \"creatorId\": \"testId\",\n    \"deckId\": \"5cca71a3a452d60010df7725\",\n    \"creatoredType\": \"Manual\",\n    \"creatorPlatform\": \"Web\",\n    \"creatoredSource\": \"App\",\n    \"epochTime\": {\n        \"createdAt\": 1556771241012,\n        \"updatedAt\": 1556771241013\n    },\n    \"answers\": [\n        {\n            \"id\": 1,\n            \"value\": \"180 degrees\",\n            \"type\": \"TEXT\",\n            \"caseSensitive\": false,\n            \"correct\": true\n        }\n    ],\n    \"id\": \"5cca71a9d441be00118b7d37\",\n    \"createdAt\": \"2019-05-02T04:27:21.012Z\",\n    \"updatedAt\": \"2019-05-02T04:27:21.013Z\",\n    \"deleted\": false,\n    \"archived\": false\n}\n\n",
													"Response Headers are: \nContent-Type=application/json;charset=UTF-8\ncorrelation-id=34ab982a-e049-45df-b6ed-75d147580e1e\nDate=Thu, 02 May 2019 04:27:21 GMT\nServer=nginx\nX-Content-Type-Options=nosniff\nX-Loadbalancer-Id=nginx-ingress-vx769\nX-XSS-Protection=1; mode=block\nContent-Length=607\nConnection=keep-alive"
												],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "Then the status code for the request is \"201\"",
											"table": null,
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 0,
												"skippedReason": "",
												"messages": [],
												"errorType": "assertion"
											}
										},
										{
											"itemType": "step",
											"stepText": "And the JSON Path Assertions for the response should be equal to the values inside the data stores",
											"table": {
												"headers": [
													"JSON Path",
													"Is Data Store Used?",
													"Data Store Type",
													"Data Store Variable Name",
													"Expected Value"
												],
												"rows": [
													{
														"cells": [
															"$.question.prompt",
															"yes",
															"Scenario",
															"varQuestionValue",
															""
														]
													},
													{
														"cells": [
															"$.answers[0].value",
															"yes",
															"Scenario",
															"varAnswerValue",
															""
														]
													}
												]
											},
											"beforeStepHookFailure": null,
											"afterStepHookFailure": null,
											"result": {
												"status": "pass",
												"stackTrace": "",
												"screenshot": "",
												"errorMessage": "",
												"executionTime": 4,
												"skippedReason": "",
												"messages": [
													"Text inside Scenario Data Store [varQuestionValue] is: \"Sumation of the degrees in a triangle?\"\n\n",
													"Text inside Scenario Data Store [varAnswerValue] is: \"180 degrees\"\n\n"
												],
												"errorType": "assertion"
											}
										}
									],
									"result": {
										"status": "",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": null,
										"errorType": ""
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						},
						{
							"itemType": "step",
							"stepText": "Given that a user needs to invoke \"Get All Questions Of Deck\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 49,
								"skippedReason": "",
								"messages": [
									"API Endpoint is: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/questions\n\n",
									"HTTP Method is: GET\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the query parameters using data stores as follows",
							"table": {
								"headers": [
									"Query Parameter",
									"Is Data Store Used?",
									"Data Store Type",
									"Data Store Variable Name",
									"Query Value"
								],
								"rows": [
									{
										"cells": [
											"deckId",
											"y",
											"Spec",
											"deckIdWith4Questions",
											""
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 8,
								"skippedReason": "",
								"messages": [
									"Text inside Specification Data Store [deckIdWith4Questions] is: \"5cca71a3a452d60010df7725\"\n\n",
									"Query parameters which will append to the request URL: ?deckId=5cca71a3a452d60010df7725\n\n"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And the user set the request authentication configurations as follows",
							"table": {
								"headers": [
									"Configuration",
									"Configuration Value"
								],
								"rows": [
									{
										"cells": [
											"Is authentication required?",
											"Yes"
										]
									},
									{
										"cells": [
											"Do you need to retrieve the access token from the text file?",
											"Yes"
										]
									},
									{
										"cells": [
											"Provide the access token if you need to authorize the API manually",
											"N/A"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "When the user invokes the API",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 705,
								"skippedReason": "",
								"messages": [
									"Successfully read the access token from the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
									"Invoked API Endpoint: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/questions?deckId=5cca71a3a452d60010df7725\n\n",
									"HTTP Method is: GET\n\n",
									"Response Time is: 526ms\n\n",
									"Response is: \n{\n    \"questions\": [\n        {\n            \"question\": {\n                \"timeout\": 0,\n                \"media\": \"TEXT\",\n                \"prompt\": \"Sumation of the degrees in a triangle?\",\n                \"imageUrl\": \"http://somehost/someimg.jpg\",\n                \"promptType\": \"TEXT\"\n            },\n            \"kind\": \"SHORT_ANSWER\",\n            \"creatorId\": \"testId\",\n            \"deckId\": \"5cca71a3a452d60010df7725\",\n            \"creatoredType\": \"Manual\",\n            \"creatorPlatform\": \"Web\",\n            \"creatoredSource\": \"App\",\n            \"epochTime\": {\n                \"createdAt\": 1556771236560,\n                \"updatedAt\": 1556771236561\n            },\n            \"answers\": [\n                {\n                    \"id\": 1,\n                    \"value\": \"180 degrees\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": false,\n                    \"correct\": true\n                }\n            ],\n            \"id\": \"5cca71a4d441be00118b7d35\",\n            \"createdAt\": \"2019-05-02T04:27:16.560Z\",\n            \"updatedAt\": \"2019-05-02T04:27:16.561Z\",\n            \"deleted\": false,\n            \"archived\": false\n        },\n        {\n            \"question\": {\n                \"timeout\": 0,\n                \"media\": \"TEXT\",\n                \"prompt\": \"Sumation of the degrees in a triangle?\",\n                \"imageUrl\": \"http://somehost/someimg.jpg\",\n                \"promptType\": \"TEXT\"\n            },\n            \"kind\": \"SHORT_ANSWER\",\n            \"creatorId\": \"testId\",\n            \"deckId\": \"5cca71a3a452d60010df7725\",\n            \"creatoredType\": \"Manual\",\n            \"creatorPlatform\": \"Web\",\n            \"creatoredSource\": \"App\",\n            \"epochTime\": {\n                \"createdAt\": 1556771238154,\n                \"updatedAt\": 1556771238155\n            },\n            \"answers\": [\n                {\n                    \"id\": 1,\n                    \"value\": \"180 degrees\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": false,\n                    \"correct\": true\n                }\n            ],\n            \"id\": \"5cca71a6d441be00118b7d36\",\n            \"createdAt\": \"2019-05-02T04:27:18.154Z\",\n            \"updatedAt\": \"2019-05-02T04:27:18.155Z\",\n            \"deleted\": false,\n            \"archived\": false\n        },\n        {\n            \"question\": {\n                \"timeout\": 0,\n                \"media\": \"TEXT\",\n                \"prompt\": \"Sumation of the degrees in a triangle?\",\n                \"imageUrl\": \"http://somehost/someimg.jpg\",\n                \"promptType\": \"TEXT\"\n            },\n            \"kind\": \"SHORT_ANSWER\",\n            \"creatorId\": \"testId\",\n            \"deckId\": \"5cca71a3a452d60010df7725\",\n            \"creatoredType\": \"Manual\",\n            \"creatorPlatform\": \"Web\",\n            \"creatoredSource\": \"App\",\n            \"epochTime\": {\n                \"createdAt\": 1556771239545,\n                \"updatedAt\": 1556771239547\n            },\n            \"answers\": [\n                {\n                    \"id\": 1,\n                    \"value\": \"180 degrees\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": false,\n                    \"correct\": true\n                }\n            ],\n            \"id\": \"5cca71a7fc63c2000fcff734\",\n            \"createdAt\": \"2019-05-02T04:27:19.545Z\",\n            \"updatedAt\": \"2019-05-02T04:27:19.547Z\",\n            \"deleted\": false,\n            \"archived\": false\n        },\n        {\n            \"question\": {\n                \"timeout\": 0,\n                \"media\": \"TEXT\",\n                \"prompt\": \"Sumation of the degrees in a triangle?\",\n                \"imageUrl\": \"http://somehost/someimg.jpg\",\n                \"promptType\": \"TEXT\"\n            },\n            \"kind\": \"SHORT_ANSWER\",\n            \"creatorId\": \"testId\",\n            \"deckId\": \"5cca71a3a452d60010df7725\",\n            \"creatoredType\": \"Manual\",\n            \"creatorPlatform\": \"Web\",\n            \"creatoredSource\": \"App\",\n            \"epochTime\": {\n                \"createdAt\": 1556771241012,\n                \"updatedAt\": 1556771241013\n            },\n            \"answers\": [\n                {\n                    \"id\": 1,\n                    \"value\": \"180 degrees\",\n                    \"type\": \"TEXT\",\n                    \"caseSensitive\": false,\n                    \"correct\": true\n                }\n            ],\n            \"id\": \"5cca71a9d441be00118b7d37\",\n            \"createdAt\": \"2019-05-02T04:27:21.012Z\",\n            \"updatedAt\": \"2019-05-02T04:27:21.013Z\",\n            \"deleted\": false,\n            \"archived\": false\n        }\n    ]\n}\n\n",
									"Response Headers are: \nContent-Type=application/json;charset=UTF-8\ncorrelation-id=1de52a12-f30c-4f82-b6b4-3d292de38625\nDate=Thu, 02 May 2019 04:27:21 GMT\nServer=nginx\nX-Content-Type-Options=nosniff\nX-Loadbalancer-Id=nginx-ingress-v61xk\nX-XSS-Protection=1; mode=block\nContent-Length=2447\nConnection=keep-alive"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "Then the status code for the request is \"200\"",
							"table": null,
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": [],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "step",
							"stepText": "And save the JSON Array values of the response into CSV files",
							"table": {
								"headers": [
									"JSON Path",
									"Header Name",
									"CSV File Path"
								],
								"rows": [
									{
										"cells": [
											"$.questions[*].id",
											"questionId",
											"/resources/csv/questionIds.csv"
										]
									}
								]
							},
							"beforeStepHookFailure": null,
							"afterStepHookFailure": null,
							"result": {
								"status": "pass",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 21,
								"skippedReason": "",
								"messages": [
									"5cca71a4d441be00118b7d35",
									"5cca71a6d441be00118b7d36",
									"5cca71a7fc63c2000fcff734",
									"5cca71a9d441be00118b7d37"
								],
								"errorType": "assertion"
							}
						},
						{
							"itemType": "concept",
							"conceptStep": {
								"itemType": "step",
								"stepText": "Delete deck by deckId saved in \u003cdataStoreType\u003e type data store named \u003cdataStoreVariableName\u003e",
								"table": null,
								"beforeStepHookFailure": null,
								"afterStepHookFailure": null,
								"result": {
									"status": "pass",
									"stackTrace": "",
									"screenshot": "",
									"errorMessage": "",
									"executionTime": 829,
									"skippedReason": "",
									"messages": [],
									"errorType": "assertion"
								}
							},
							"items": [
								{
									"itemType": "step",
									"stepText": "Given that a user needs to invoke \"Delete Deck\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 79,
										"skippedReason": "",
										"messages": [
											"API Endpoint is: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/decks\n\n",
											"HTTP Method is: DELETE\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the path parameters using data stores as follows",
									"table": {
										"headers": [
											"Path Name",
											"Is Data Store Used?",
											"Data Store Type",
											"Data Store Variable Name",
											"Path Value"
										],
										"rows": [
											{
												"cells": [
													"deckId",
													"yes",
													"Spec",
													"deckIdWith4Questions",
													""
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 5,
										"skippedReason": "",
										"messages": [
											"Text inside Specification Data Store [deckIdWith4Questions] is: \"5cca71a3a452d60010df7725\"\n\n",
											"Path parameters which will append to the request URL:/5cca71a3a452d60010df7725\n\n"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "And the user set the request authentication configurations as follows",
									"table": {
										"headers": [
											"Configuration",
											"Configuration Value"
										],
										"rows": [
											{
												"cells": [
													"Is authentication required?",
													"Yes"
												]
											},
											{
												"cells": [
													"Do you need to retrieve the access token from the text file?",
													"Yes"
												]
											},
											{
												"cells": [
													"Provide the access token if you need to authorize the API manually",
													"N/A"
												]
											}
										]
									},
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "When the user invokes the API",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 745,
										"skippedReason": "",
										"messages": [
											"Successfully read the access token from the text file in the directory of \"C:\\Users\\onimalarathna\\IdeaProjects\\MaxSoft-IntelliAPI\\resources/access_tokens/saved_valid_access_token.txt\"\n\n",
											"Invoked API Endpoint: \nhttp://aggregationservice-pearson-prep-us1-stg.bite.pearsondev.tech/api/decks/5cca71a3a452d60010df7725\n\n",
											"HTTP Method is: DELETE\n\n",
											"Response Time is: 587ms\n\n",
											"Response is Empty\n\n",
											"Response Headers are: \ncorrelation-id=1940e788-7388-4139-a2a4-10d1450cdef2\nDate=Thu, 02 May 2019 04:27:22 GMT\nServer=nginx\nX-Content-Type-Options=nosniff\nX-Loadbalancer-Id=nginx-ingress-lxkkr\nX-XSS-Protection=1; mode=block\nConnection=keep-alive"
										],
										"errorType": "assertion"
									}
								},
								{
									"itemType": "step",
									"stepText": "Then the status code for the request is \"204\"",
									"table": null,
									"beforeStepHookFailure": null,
									"afterStepHookFailure": null,
									"result": {
										"status": "pass",
										"stackTrace": "",
										"screenshot": "",
										"errorMessage": "",
										"executionTime": 0,
										"skippedReason": "",
										"messages": [],
										"errorType": "assertion"
									}
								}
							],
							"result": {
								"status": "",
								"stackTrace": "",
								"screenshot": "",
								"errorMessage": "",
								"executionTime": 0,
								"skippedReason": "",
								"messages": null,
								"errorType": ""
							}
						}
					],
					"beforeScenarioHookFailure": null,
					"afterScenarioHookFailure": null,
					"skipErrors": [],
					"tableRowIndex": -1
				}
			],
			"isTableDriven": false,
			"datatable": null,
			"beforeSpecHookFailure": null,
			"afterSpecHookFailure": null,
			"passedScenarioCount": 1,
			"failedScenarioCount": 0,
			"skippedScenarioCount": 0
		}
	],
	"beforeSuiteHookFailure": null,
	"afterSuiteHookFailure": null,
	"passedSpecsCount": 2,
	"failedSpecsCount": 0,
	"skippedSpecsCount": 0,
	"passedScenariosCount": 2,
	"failedScenariosCount": 0,
	"skippedScenariosCount": 0
}